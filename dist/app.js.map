{
  "version": 3,
  "sources": ["../node_modules/derver/dist/derver.cjs.js", "../node_modules/@hapi/hoek/lib/stringify.js", "../node_modules/@hapi/hoek/lib/error.js", "../node_modules/@hapi/hoek/lib/assert.js", "../node_modules/@hapi/hoek/lib/reach.js", "../node_modules/@hapi/hoek/lib/types.js", "../node_modules/@hapi/hoek/lib/utils.js", "../node_modules/@hapi/hoek/lib/clone.js", "../node_modules/@hapi/hoek/lib/merge.js", "../node_modules/@hapi/hoek/lib/applyToDefaults.js", "../node_modules/@hapi/hoek/lib/bench.js", "../node_modules/@hapi/hoek/lib/ignore.js", "../node_modules/@hapi/hoek/lib/block.js", "../node_modules/@hapi/hoek/lib/deepEqual.js", "../node_modules/@hapi/hoek/lib/escapeRegex.js", "../node_modules/@hapi/hoek/lib/contain.js", "../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js", "../node_modules/@hapi/hoek/lib/escapeHtml.js", "../node_modules/@hapi/hoek/lib/escapeJson.js", "../node_modules/@hapi/hoek/lib/flatten.js", "../node_modules/@hapi/hoek/lib/intersect.js", "../node_modules/@hapi/hoek/lib/isPromise.js", "../node_modules/@hapi/hoek/lib/once.js", "../node_modules/@hapi/hoek/lib/reachTemplate.js", "../node_modules/@hapi/hoek/lib/wait.js", "../node_modules/@hapi/hoek/lib/index.js", "../node_modules/@hapi/boom/lib/index.js", "../node_modules/sqlstring/lib/SqlString.js", "../node_modules/sqlstring/index.js", "../node_modules/denque/index.js", "../node_modules/yallist/iterator.js", "../node_modules/yallist/yallist.js", "../node_modules/lru-cache/index.js", "../node_modules/mysql2/lib/constants/errors.js", "../node_modules/long/src/long.js", "../node_modules/safer-buffer/safer.js", "../node_modules/iconv-lite/lib/bom-handling.js", "../node_modules/iconv-lite/encodings/internal.js", "../node_modules/iconv-lite/encodings/utf32.js", "../node_modules/iconv-lite/encodings/utf16.js", "../node_modules/iconv-lite/encodings/utf7.js", "../node_modules/iconv-lite/encodings/sbcs-codec.js", "../node_modules/iconv-lite/encodings/sbcs-data.js", "../node_modules/iconv-lite/encodings/sbcs-data-generated.js", "../node_modules/iconv-lite/encodings/dbcs-codec.js", "../node_modules/iconv-lite/encodings/dbcs-data.js", "../node_modules/iconv-lite/encodings/index.js", "../node_modules/iconv-lite/lib/streams.js", "../node_modules/iconv-lite/lib/index.js", "../node_modules/mysql2/lib/parsers/string.js", "../node_modules/mysql2/lib/packets/packet.js", "../node_modules/mysql2/lib/packet_parser.js", "../node_modules/mysql2/lib/packets/auth_switch_request.js", "../node_modules/mysql2/lib/packets/auth_switch_request_more_data.js", "../node_modules/mysql2/lib/packets/auth_switch_response.js", "../node_modules/mysql2/lib/constants/types.js", "../node_modules/mysql2/lib/packets/binary_row.js", "../node_modules/mysql2/lib/constants/commands.js", "../node_modules/mysql2/lib/packets/binlog_dump.js", "../node_modules/mysql2/lib/constants/client.js", "../node_modules/mysql2/lib/auth_41.js", "../node_modules/mysql2/lib/constants/charset_encodings.js", "../node_modules/mysql2/lib/packets/change_user.js", "../node_modules/mysql2/lib/packets/close_statement.js", "../node_modules/mysql2/lib/packets/column_definition.js", "../node_modules/mysql2/lib/constants/cursor.js", "../node_modules/mysql2/lib/packets/execute.js", "../node_modules/mysql2/lib/packets/handshake.js", "../node_modules/mysql2/lib/packets/handshake_response.js", "../node_modules/mysql2/lib/packets/prepare_statement.js", "../node_modules/mysql2/lib/packets/prepared_statement_header.js", "../node_modules/mysql2/lib/packets/query.js", "../node_modules/mysql2/lib/packets/register_slave.js", "../node_modules/mysql2/lib/constants/server_status.js", "../node_modules/mysql2/lib/constants/encoding_charset.js", "../node_modules/mysql2/lib/constants/session_track.js", "../node_modules/mysql2/lib/packets/resultset_header.js", "../node_modules/mysql2/lib/packets/ssl_request.js", "../node_modules/mysql2/lib/packets/text_row.js", "../node_modules/mysql2/lib/packets/index.js", "../node_modules/mysql2/lib/commands/command.js", "../node_modules/mysql2/lib/auth_plugins/sha256_password.js", "../node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js", "../node_modules/mysql2/lib/auth_plugins/mysql_native_password.js", "../node_modules/mysql2/lib/commands/auth_switch.js", "../node_modules/seq-queue/lib/seq-queue.js", "../node_modules/seq-queue/index.js", "../node_modules/mysql2/lib/compressed_protocol.js", "../node_modules/mysql2/lib/commands/client_handshake.js", "../node_modules/mysql2/lib/commands/server_handshake.js", "../node_modules/mysql2/lib/constants/charsets.js", "../node_modules/mysql2/lib/helpers.js", "../node_modules/is-property/is-property.js", "../node_modules/generate-function/index.js", "../node_modules/mysql2/lib/parsers/parser_cache.js", "../node_modules/mysql2/lib/parsers/text_parser.js", "../node_modules/mysql2/lib/commands/query.js", "../node_modules/mysql2/lib/commands/close_statement.js", "../node_modules/mysql2/lib/constants/field_flags.js", "../node_modules/mysql2/lib/parsers/binary_parser.js", "../node_modules/mysql2/lib/commands/execute.js", "../node_modules/mysql2/lib/commands/prepare.js", "../node_modules/mysql2/lib/commands/ping.js", "../node_modules/mysql2/lib/commands/register_slave.js", "../node_modules/mysql2/lib/packets/binlog_query_statusvars.js", "../node_modules/mysql2/lib/commands/binlog_dump.js", "../node_modules/mysql2/lib/commands/change_user.js", "../node_modules/mysql2/lib/commands/quit.js", "../node_modules/mysql2/lib/commands/index.js", "../node_modules/mysql2/lib/constants/ssl_profiles.js", "../node_modules/mysql2/lib/connection_config.js", "../node_modules/pseudomap/pseudomap.js", "../node_modules/pseudomap/map.js", "../node_modules/named-placeholders/node_modules/yallist/yallist.js", "../node_modules/named-placeholders/node_modules/lru-cache/index.js", "../node_modules/named-placeholders/index.js", "../node_modules/mysql2/lib/connection.js", "../node_modules/mysql2/lib/pool_connection.js", "../node_modules/mysql2/lib/pool.js", "../node_modules/mysql2/lib/pool_config.js", "../node_modules/mysql2/lib/pool_cluster.js", "../node_modules/mysql2/lib/server.js", "../node_modules/mysql2/index.js", "../node_modules/mysql2/promise.js", "../node_modules/dotenv/lib/main.js", "server:server_development.js", "../src/server/models/newsModel.js", "../src/server/config/database.js", "../src/server/controllers/blogs.js", "../src/server/routes.js", "../src/server/main.js"],
  "sourcesContent": ["var Ce=Object.create;var C=Object.defineProperty;var Re=Object.getOwnPropertyDescriptor;var Oe=Object.getOwnPropertyNames;var Te=Object.getPrototypeOf,Ne=Object.prototype.hasOwnProperty;var z=e=>C(e,\"__esModule\",{value:!0});var j=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Le=(e,t)=>{z(e);for(var r in t)C(e,r,{get:t[r],enumerable:!0})},je=(e,t,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of Oe(t))!Ne.call(e,i)&&i!==\"default\"&&C(e,i,{get:()=>t[i],enumerable:!(r=Re(t,i))||r.enumerable});return e},h=e=>je(z(C(e!=null?Ce(Te(e)):{},\"default\",e&&e.__esModule&&\"default\"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var W=j((jt,ae)=>{var R=require(\"fs\"),oe=require(\"path\"),tt=require(\"os\");function P(e,t){return Object.prototype.toString.call(e)===\"[object \"+t+\"]\"}function _(e,t){try{return t(e)}catch(r){if(/^(ENOENT|EPERM|EACCES)$/.test(r.code))return r.code!==\"ENOENT\"&&console.warn(\"Warning: Cannot access %s\",e),!1;throw r}}var rt={nil:function(e){return e==null},array:function(e){return Array.isArray(e)},emptyObject:function(e){for(var t in e)return!1;return!0},buffer:function(e){return Buffer.isBuffer(e)},regExp:function(e){return P(e,\"RegExp\")},string:function(e){return P(e,\"String\")},func:function(e){return typeof e==\"function\"},number:function(e){return P(e,\"Number\")},exists:function(e){return R.existsSync(e)},file:function(e){return _(e,function(t){return R.statSync(t).isFile()})},samePath:function(e,t){return oe.resolve(e)===oe.resolve(t)},directory:function(e){return _(e,function(t){return R.statSync(t).isDirectory()})},symbolicLink:function(e){return _(e,function(t){return R.lstatSync(t).isSymbolicLink()})},windows:function(){return tt.platform()===\"win32\"}};ae.exports=rt});var fe=j((kt,ue)=>{var b=require(\"fs\"),ce=require(\"os\"),A=require(\"path\"),O=W(),E,nt=ce.tmpdir&&ce.tmpdir()||process.env.TMPDIR||process.env.TEMP||process.cwd();function se(){this.stack=[]}se.prototype={create:function(e,t){var r=A.join(t,\"node-watch-\"+Math.random().toString(16).substr(2));return this.stack.push({name:r,type:e}),r},write:function(){for(var e=0;e<arguments.length;++e)b.writeFileSync(arguments[e],\" \")},mkdir:function(){for(var e=0;e<arguments.length;++e)b.mkdirSync(arguments[e])},cleanup:function(e){try{for(var t;t=this.stack.pop();){var r=t.type,i=t.name;r===\"file\"&&O.file(i)?b.unlinkSync(i):r===\"dir\"&&O.directory(i)&&b.rmdirSync(i)}}finally{O.func(e)&&e()}}};var le=!1;ue.exports=function e(t){if(!O.func(t))return!1;if(E!==void 0)return t(E);if(!le)le=!0;else return setTimeout(function(){e(t)},300);var r=new se,i=r.create(\"dir\",nt),n=r.create(\"dir\",i),o=r.create(\"file\",n);r.mkdir(i,n);var a={recursive:!0},c;try{c=b.watch(i,a)}catch(u){if(u.code==\"ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\")return t(E=!1);throw u}if(!c)return!1;var s=setTimeout(function(){c.close(),r.cleanup(function(){t(E=!1)})},200);c.on(\"change\",function(u,d){A.basename(o)===A.basename(d)&&(c.close(),clearTimeout(s),r.cleanup(function(){t(E=!0)}))}),r.write(o)}});var be=j((Mt,H)=>{var I=require(\"fs\"),S=require(\"path\"),de=require(\"util\"),me=require(\"events\"),he=fe(),l=W(),it=\"update\",pe=\"remove\",T=Symbol(\"skip\");function ot(e){return e.some(function(t,r,i){return i.indexOf(t)!==r})}function F(e){return e.filter(function(t,r,i){return i.indexOf(t)===r})}function at(e){return e.reduce(function(t,r){return t.concat(r)},[])}function ct(e){if(e&&e!==\"buffer\"&&!Buffer.isEncoding(e))throw new Error(\"Unknown encoding: \"+e)}function st(e){return function(t,r){if(l.func(e)){var i=e(t,T);i&&i!==T&&r()}else l.regExp(e)?e.test(t)&&r():r()}}function lt(e){return e.map(function(t){return l.exists(t)?[it,t]:[pe,t]})}function ut(e){var t=F(e),r=/~$|^\\.#|^##$/g,i=e.some(function(o){return r.test(o)});if(i){var n=ot(e.map(function(o){return o.replace(r,\"\")}));n&&(t=t.filter(function(o){return l.exists(o)}))}return lt(t)}function ft(e,t){var r,i=[],n=e.options.encoding,o=e.options.delay;l.number(o)||(o=200);function a(){ut(i).forEach(function(c){c[1]=Buffer.from(c[1]),n!==\"buffer\"&&(c[1]=c[1].toString(n)),t.apply(null,c)}),r=null,i=[]}return function(c,s){i.push(s),r||(r=setTimeout(a,o))}}function ve(){var e={};return function(t){return function(r,i){e[r+i]=[r,i],setTimeout(function(){Object.keys(e).forEach(function(n){t.apply(null,e[n])}),e={}})}}}function ge(e,t,r=function(){}){l.directory(e)?I.readdir(e,function(i,n){if(i)if(/^(EPERM|EACCES)$/.test(i.code))console.warn(\"Warning: Cannot access %s.\",e);else throw i;else n.forEach(function(o){var a=S.join(e,o);l.directory(a)&&t(a)}),r()}):r()}function dt(e){var t=0;return function(){return t++,function(){t--,t===0&&e()}}}function mt(){return function(){}}function we(e,t){return!l.func(t)||t(e,T)!==T}var ye=de.deprecate(function(){},\"(node-watch) First param in callback function  is replaced with event name since 0.5.0, use  `(evt, filename) => {}` if you want to get the filename\");function v(){me.EventEmitter.call(this),this.watchers={},this._isReady=!1,this._isClosed=!1}de.inherits(v,me.EventEmitter);v.prototype.expose=function(){var e={},t=this,r=[\"on\",\"emit\",\"once\",\"close\",\"isClosed\",\"listeners\",\"setMaxListeners\",\"getMaxListeners\",\"getWatchedPaths\"];return r.forEach(function(i){e[i]=function(){return t[i].apply(t,arguments)}}),e};v.prototype.isClosed=function(){return this._isClosed};v.prototype.close=function(e){var t=this;if(e){var r=this.watchers[e];r&&r.close&&(r.close(),delete t.watchers[e]),ge(e,function(i){t.close(i)})}else Object.keys(t.watchers).forEach(function(i){var n=t.watchers[i];n&&n.close&&n.close()}),this.watchers={};l.emptyObject(t.watchers)&&(this._isClosed||(this._isClosed=!0,process.nextTick(xe,this)))};v.prototype.getWatchedPaths=function(e){if(l.func(e)){var t=this;t._isReady?e(Object.keys(t.watchers)):t.on(\"ready\",function(){e(Object.keys(t.watchers))})}};function U(e){e._isReady||(e._isReady=!0,process.nextTick(function(){e.emit(\"ready\")}))}function xe(e){e.emit(\"close\")}v.prototype.add=function(e,t){var r=this;t=t||{fpath:\"\"};var i=S.resolve(t.fpath);this.watchers[i]=e;var n=function(a,c){if(!r.isClosed()){var s=c;l.nil(s)&&(s=\"\"),s=S.join(t.fpath,s),t.options.recursive&&he(function(u){if(!u){var d=S.resolve(s);if(!l.exists(s))r.close(d);else{var w=l.directory(s)&&!r.watchers[d]&&we(s,t.options.filter);w&&r.watchDirectory(s,t.options)}}}),o(a,s)}},o=ft(t,function(a,c){if(t.compareName)t.compareName(c)&&r.emit(\"change\",a,c);else{var s=st(t.options.filter);s(c,function(){r.flag?r.flag=\"\":r.emit(\"change\",a,c)})}});e.on(\"error\",function(a){r.isClosed()||(l.windows()&&a.code===\"EPERM\"?(e.emit(\"change\",pe,t.fpath&&\"\"),r.flag=\"windows-error\",r.close(i)):r.emit(\"error\",a))}),e.on(\"change\",n)};v.prototype.watchFile=function(e,t,r){var i=S.join(e,\"../\"),n=Object.assign({},t,{filter:null,encoding:\"utf8\"});delete n.recursive;var o=I.watch(i,n);this.add(o,{type:\"file\",fpath:i,options:Object.assign({},n,{encoding:t.encoding}),compareName:function(a){return l.samePath(a,e)}}),l.func(r)&&(r.length===1&&ye(),this.on(\"change\",r))};v.prototype.watchDirectory=function(e,t,r,i=mt){var n=this,o=i();he(function(a){t.recursive=!!t.recursive;var c=Object.assign({},t,{encoding:\"utf8\"});if(a||delete c.recursive,n._isClosed)return o(),n.close();var s=I.watch(e,c);n.add(s,{type:\"dir\",fpath:e,options:t}),l.func(r)&&(r.length===1&&ye(),n.on(\"change\",r)),t.recursive&&!a&&ge(e,function(u){we(u,t.filter)&&n.watchDirectory(u,t,null,i)},i()),o()})};function ht(e){var t=new v,r=ve(),i=e.length;return e.forEach(function(n){n.on(\"change\",r(function(o,a){t.emit(\"change\",o,a)})),n.on(\"error\",function(o){t.emit(\"error\",o)}),n.on(\"ready\",function(){--i||U(t)})}),t.close=function(){e.forEach(function(n){n.close()}),process.nextTick(xe,t)},t.getWatchedPaths=function(n){if(l.func(n)){var o=e.map(function(a){return new Promise(function(c){a.getWatchedPaths(c)})});Promise.all(o).then(function(a){var c=F(at(a));n(c)})}},t.expose()}function N(e,t,r){var i=new v;if(l.buffer(e)&&(e=e.toString()),!l.array(e)&&!l.exists(e)&&i.emit(\"error\",new Error(e+\" does not exist.\")),l.string(t)&&(t={encoding:t}),l.func(t)&&(r=t,t={}),arguments.length<2&&(t={}),t.encoding?ct(t.encoding):t.encoding=\"utf8\",l.array(e)){if(e.length===1)return N(e[0],t,r);var n=ve();return ht(F(e).map(function(a){var c=N(a,t);return l.func(r)&&c.on(\"change\",n(r)),c}))}if(l.file(e))i.watchFile(e,t,r),U(i);else if(l.directory(e)){var o=dt(function(){U(i)});i.watchDirectory(e,t,r,o)}return i.expose()}H.exports=N;H.exports.default=N});Le(exports,{createRemote:()=>Q,derver:()=>vt});var ee=h(require(\"http\")),x=h(require(\"fs/promises\")),te=h(require(\"os\")),p=h(require(\"path\")),D=h(require(\"zlib\"));var ke=\"text/html\",Me=\"text/html\",$e=\"image/jpeg\",De=\"image/jpeg\",Pe=\"image/gif\",_e=\"image/png\",We=\"image/svg+xml\",Ae=\"text/javascript\",Ie=\"application/json\",Fe=\"text/css\",Ue=\"image/x-icon\",k={\".htm\":ke,\".html\":Me,\".jpg\":$e,\".jpeg\":De,\".gif\":Pe,\".png\":_e,\".svg\":We,\".js\":Ae,\".json\":Ie,\".css\":Fe,\".ico\":Ue};var g=(e,t,r)=>`\u001B[${t}m${e}\u001B[${r}m`,f={blue:e=>g(e,34,39),red:e=>g(e,31,39),green:e=>g(e,32,39),yellow:e=>g(e,33,39),magenta:e=>g(e,35,39),cyan:e=>g(e,36,39),gray:e=>g(e,90,39),bold:e=>g(e,1,22),italic:e=>g(e,3,23)};function B(){let e=2,t=[],r={line:(i=\"\",n,o)=>{let a=i.length;return a+2>e&&(e=a+2),n&&(i=f[n](i)),o&&(i=f[o](i)),t.push([i,a]),r},print:(i=0,n)=>{let o=\" \".repeat(i),a=`${o}\\u2554${\"\\u2550\".repeat(e)}\\u2557`,c=`${o}\\u255A${\"\\u2550\".repeat(e)}\\u255D`,s=`${o}\\u2551`,u=\"\\u2551\";n&&(a=f[n](a),c=f[n](c),s=f[n](s),u=f[n](u)),console.log(a);for(let d of t){let w=Math.floor((e-d[1])/2),L=e-d[1]-w;console.log(`${s}${\" \".repeat(w)}${d[0]}${\" \".repeat(L)}${u}`)}return console.log(c),r}};return r}var G=h(require(\"http\")),J=h(require(\"os\")),K=h(require(\"path\")),M=h(require(\"fs\")),V=\"/derver-livereload-events\",Y=\"/derver-livereload-remote\",$=new Set;function y(e,t,r){$.forEach(i=>{typeof i[e]==\"function\"&&i[e](t,r)})}function Q(e){let t=typeof e==\"string\"?e:!1,r=\"localhost\",i=7e3;t||(e&&e.host&&(r=e.host),e&&e.port&&(i=e.port));function n(o,a){return new Promise(c=>{let s=t&&ze(t);s&&s.host&&(hostname=s.host),s&&s.port&&(i=s.port);let u={hostname:s&&s.host||r,port:s&&s.port||i,path:Y,method:\"POST\",headers:{\"Content-Type\":\"application/json\"}},d=G.default.request(u,w=>{w.on(\"data\",L=>{L.toString()===\"REMOTE OK\"?c(\"OK\"):(console.log(\"[Derver remote]: Warning: wrong command \"+o),c(\"WARNING\"))})});d.on(\"error\",w=>{console.log(\"[Derver remote]: Warning:\"+w.message),c(\"WARNING\")}),d.write(JSON.stringify({command:o,data:a||{}})),d.end()})}return{reload(){return n(\"reload\")},console(o){return n(\"console\",{text:o})},error(o,a){return n(\"error\",{text:o,header:a})}}}function X(e){return!e.watch&&!e.remote?null:function(t,r,i){if(t.url==V){let n=(a,c)=>r.write(`event: ${a}\ndata: ${JSON.stringify(c||{})}\n\n`),o={reload:()=>n(\"refresh\"),console:a=>n(\"console\",{text:a}),error:(a,c)=>n(\"srverror\",{text:a,header:c||\"Error\"})};$.add(o),r.writeHead(200,{\"Content-Type\":\"text/event-stream\",\"Cache-Control\":\"no-cache\",Connection:\"keep-alive\"}),r.on(\"close\",function(){$.delete(o)}),r.write(`data: connected\n\n`)}else if(e.remote&&t.url==Y)if(t.method==\"POST\"){let n=\"\";t.on(\"data\",o=>{n+=o.toString()}),t.on(\"end\",()=>{let o=JSON.parse(n||\"{}\");if(o.command==\"reload\")y(\"reload\");else if(o.command==\"console\")y(\"console\",o.data.text);else if(o.command==\"error\")y(\"error\",o.data.text,o.data.header);else return r.end(\"REMOTE WRONG COMMAND\");r.end(\"REMOTE OK\")})}else i();else i()}}function He(){return function(e){let t;function r(){if(window.EventSource){let o=function(a){return JSON.parse(a.data)};var n=new EventSource(e);n.addEventListener(\"refresh\",function(a){location.reload()},!1),n.addEventListener(\"console\",function(a){console.log(o(a).text)},!1),n.addEventListener(\"srverror\",function(a){let c=o(a);i(c.header,c.text)},!1),n.addEventListener(\"open\",function(a){t&&location.reload(),console.log(\"[Livereload] Ready\")},!1),n.addEventListener(\"error\",function(a){a.eventPhase==EventSource.CLOSED&&n.close(),a.target.readyState==EventSource.CLOSED?(console.log(\"[Livereload] Disconnected! Retry in 5s...\"),!t&&i(\"Disconnected!\",\"Connection with server was lost.\"),t=setTimeout(r,5e3)):a.target.readyState==EventSource.CONNECTING&&console.log(\"[Livereload] Connecting...\")},!1)}else console.error(\"[Livereload] Can't start Livereload! Your browser doesn't support SSE\")}function i(n,o){let a=document.createElement(\"div\");a.innerHTML=`\n                  <div class=\"lrmsg-bg\">\n                    <div class=\"lrmsg-modal\">\n                      <div class=\"lrmsg-close\" onclick=\"this.parentNode.parentNode.remove()\">\\xD7</div>\n                      <div class=\"lrmsg-header\">${n}</div>\n                      <div class=\"lrmsg-content\">${o}</div>\n                    </div>\n                  </div>\n                  <style>\n                    .lrmsg-bg{\n                      font-family: Verdana, Geneva, sans-serif;\n                      font-size: 16px;\n                      background: rgba(30, 30, 30, 0.6);\n                      position: fixed;\n                      top: 0;\n                      right: 0;\n                      bottom: 0;\n                      left: 0;\n                      z-index: 1;\n                    }\n\n                    .lrmsg-modal{\n                      position: relative;\n                      max-width: 600px;\n                      max-height: 400px;\n                      margin: 40px auto; \n                      margin-top: 0px;\n                      background-color: #1e1e1e;\n                      border-top: 3px solid red;\n                      border-radius: 5px;\n                      opacity: 0;\n                      animation: slide 0.3s forwards;\n                      color: #cccccc;\n                    }\n\n                    .lrmsg-header{\n                      font-weight: bold;\n                      font-size: 18px;\n                      padding: 10px;\n                    }\n\n                    .lrmsg-close{\n                      float: right;\n                      font-weight: bold;\n                      color: #cccccc;\n                      font-size: 25px;\n                      margin: 3px 10px;\n                      cursor: pointer;\n                    }\n\n                    .lrmsg-close:hover{color:#9a9a9a}\n\n                    .lrmsg-content{\n                      padding: 10px;\n                      border-top: 1px solid #363636;\n                    }\n\n                    @keyframes slide {\n                      100% { margin-top: 40px; opacity: 1;}\n                  }\n                  </style>\n                `,document.body.append(a)}r()}.toString()}function Z(e){return!e.watch&&!e.remote?null:function(t,r,i){[\".html\",\".htm\"].includes(t.extname)&&(r.body=Buffer.from(r.body.toString(\"utf-8\").replace(/(<\\/body>)/,`<script>(${He()})('${V}')<\\/script>\n$1`))),i()}}function ze(e){let t=J.default.tmpdir(),r=K.default.join(t,\"derver_\"+e);return M.default.existsSync(r)?JSON.parse(M.default.readFileSync(r,\"utf-8\")):!1}var q=\"0.4.16\";function re(e){let t=e.watch===!1&&e.cache&&e.compress;return new Promise(async(r,i)=>{let n=await et(e),o=ee.default.createServer(function(c,s){Ge([Je(e),Ve(e),Ye(e),...e.middlewares.list(),X(e),Ke(e),Qe(e),Z(e),Xe(e),Ze(e)],c,s)});o.on(\"listening\",c=>{r(o),B().line(t?\"Derver server started\":\"Development server started\",\"bold\").line(\"on\").line(`http://${e.host}:${e.port}`,\"blue\").print(5,\"green\")}),o.on(\"error\",c=>{console.log(f.bold(`\n\nServer starting error:`)),console.log(\"  \"+f.red(c.toString())+`\n\n`),i(c.toString())}),o.listen(e.port,e.host);let a=async()=>{await n(),o.close()};process.on(\"SIGTERM\",a),process.on(\"exit\",a)})}function ne(){let e=[];function t(n){for(let o of n.middlewares)e.push(function(a,c,s){if(n.method&&n.method!==a.method)return s();if(n.pattern&&n.pattern!==\"\"){let u=qe(n.pattern,a.path);if(!u||n.exact&&!u.exact)return s();a.params=u.params}o(a,c,s)})}function r(n,o,a){n=Array.from(n);let c=n.length>0&&typeof n[0]==\"string\"?n.shift():null;return c&&!c.startsWith(\"/\")&&(c=\"/\"+c),{method:o==\"use\"?null:o.toUpperCase(),pattern:(a||\"\")+(c||\"\"),exact:!(a&&!c),middlewares:n.filter(s=>typeof s==\"function\")}}function i(n){let o=new Proxy({},{get(a,c){return c==\"list\"?()=>e:c==\"sub\"?function(){let s=Array.from(arguments),u=(n||\"\")+s.shift();s.forEach(d=>d(i(u)))}:function(){return t(r(arguments,c,n)),o}}});return o}return i()}function Ge(e,t,r){e.push((n,o)=>o.send(o.body||\"\"));let i=()=>{let n;for(;!n&&e.length>0;)n=e.shift();n&&n(t,r,i)};i()}function Je(e){return function(t,r,i){let n=new URL(t.url,\"http://\"+(t.headers.host||\"derver.tld\"));t.path=n.pathname,t.host=n.host,t.hostname=n.hostname,t.port=n.port,t.search=n.search,t.query=Array.from(n.searchParams).reduce((o,[a,c])=>(o[a]=c,o),{}),i()}}function Ke(e){return async function(t,r,i){if(t.file=p.default.join(e.dir,t.path),t.extname=p.default.extname(t.file),t.extname===\"\"&&(t.file=p.default.join(t.file,e.index),t.extname=p.default.extname(t.file)),t.exists=await ie(t.file),e.spa&&!t.exists&&t.extname===p.default.extname(e.index)){console.log();let n=p.default.dirname(t.file);do if(n=p.default.dirname(n),t.file=p.default.join(n,e.index),t.exists=await ie(t.file))break;while(n!==\".\")}i()}}function Ve(e){return function(t,r,i){r.send=function(n){r.writeHead(200),r.end(n)},i()}}function Ye(e){return function(t,r,i){r.setHeader(\"Server\",\"Derver/\"+q),i()}}function Qe(e){return async function(t,r,i){if(!t.exists)return console.log(f.gray(\"  [web] \")+t.url+\" - \"+f.red(\"404 Not Found\")),r.writeHead(404,{\"Content-Type\":\"text/plain\"}),r.end(\"Not found\");k[t.extname]&&r.setHeader(\"Content-Type\",k[t.extname]),r.body=await x.default.readFile(t.file),console.log(f.gray(\"  [web] \")+t.url+\" - \"+f.green(\"200 OK\")),i()}}function Xe(e){return e.compress?function(t,r,i){t.headers[\"accept-encoding\"]&&(t.headers[\"accept-encoding\"].includes(\"br\")?(r.setHeader(\"Content-Encoding\",\"br\"),r.body=D.default.brotliCompressSync(r.body)):t.headers[\"accept-encoding\"].includes(\"gzip\")&&(r.setHeader(\"Content-Encoding\",\"gzip\"),r.body=D.default.gzipSync(r.body))),i()}:null}function Ze(e){return e.cache?function(t,r,i){typeof e.cache!=\"number\"&&(e.cache=31536e3),r.setHeader(\"Cache-Control\",\"max-age=\"+e.cache),i()}:null}function qe(e,t){e=e.endsWith(\"/\")?e:e+\"/\",t=t.endsWith(\"/\")?t:t+\"/\";let r=[],i={},n=!0,o=e.split(\"/\").map(c=>c.startsWith(\":\")?(r.push(c.slice(1)),\"([^\\\\/]+)\"):c).join(\"\\\\/\"),a=t.match(new RegExp(`^${o}$`));return a||(n=!1,a=t.match(new RegExp(`^${o}`))),a?(r.forEach((c,s)=>i[c]=a[s+1]),{exact:n,params:i,part:a[0].slice(0,-1)}):null}async function et(e){let t=te.default.tmpdir();if(typeof e.remote!=\"string\")return()=>{};let r=p.default.join(t,\"derver_\"+e.remote);return await x.default.writeFile(r,JSON.stringify({host:e.host,port:e.port})),async()=>await x.default.unlink(r)}async function ie(e){try{return await x.default.stat(e),!0}catch{return!1}}var Ee=h(be());function Se(e){if(typeof e.watch==\"string\"&&(e.watch=[e.watch]),e.watch){console.log(f.yellow(`       Waiting for changes...\n\n`));let t=[];process.on(\"SIGTERM\",()=>t.forEach(n=>n.close())),process.on(\"exit\",()=>t.forEach(n=>n.close()));let r=new Set,i=(n,o)=>{r.has(n)||(r.add(n),setTimeout(()=>r.delete(n),100),o())};for(let n of e.watch)t.push((0,Ee.default)(n,{recursive:!0},async function(o,a){i(n,()=>console.log(f.gray(\"[watch] \")+\"Changes in \"+f.blue(n)));let c=!0;typeof e.onwatch==\"function\"&&await e.onwatch({prevent:()=>c=!1,reload:()=>y(\"reload\"),console:s=>y(\"console\",s),error:(s,u)=>y(\"error\",s,u)},n,a,o),c&&y(\"reload\")}))}}var pt={port:7e3,host:\"localhost\",index:\"index.html\",dir:\"public\",compress:!1,cache:!1,spa:!1,watch:null,onwatch:null,remote:!1};function vt(e){let t=Object.assign(pt,e,{middlewares:ne()});return(async()=>{t.watch===null&&(t.watch=t.dir);try{await re(t)}catch(r){console.log(r.message),process.exit(1)}Se(t)})(),t.middlewares}0&&(module.exports={createRemote,derver});\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (...args) {\n\n    try {\n        return JSON.stringify.apply(null, args);\n    }\n    catch (err) {\n        return '[Cannot display object: ' + err.message + ']';\n    }\n};\n", "'use strict';\n\nconst Stringify = require('./stringify');\n\n\nconst internals = {};\n\n\nmodule.exports = class extends Error {\n\n    constructor(args) {\n\n        const msgs = args\n            .filter((arg) => arg !== '')\n            .map((arg) => {\n\n                return typeof arg === 'string' ? arg : arg instanceof Error ? arg.message : Stringify(arg);\n            });\n\n        super(msgs.join(' ') || 'Unknown error');\n\n        if (typeof Error.captureStackTrace === 'function') {            // $lab:coverage:ignore$\n            Error.captureStackTrace(this, exports.assert);\n        }\n    }\n};\n", "'use strict';\n\nconst AssertError = require('./error');\n\nconst internals = {};\n\n\nmodule.exports = function (condition, ...args) {\n\n    if (condition) {\n        return;\n    }\n\n    if (args.length === 1 &&\n        args[0] instanceof Error) {\n\n        throw args[0];\n    }\n\n    throw new AssertError(args);\n};\n", "'use strict';\n\nconst Assert = require('./assert');\n\n\nconst internals = {};\n\n\nmodule.exports = function (obj, chain, options) {\n\n    if (chain === false ||\n        chain === null ||\n        chain === undefined) {\n\n        return obj;\n    }\n\n    options = options || {};\n    if (typeof options === 'string') {\n        options = { separator: options };\n    }\n\n    const isChainArray = Array.isArray(chain);\n\n    Assert(!isChainArray || !options.separator, 'Separator option no valid for array-based chain');\n\n    const path = isChainArray ? chain : chain.split(options.separator || '.');\n    let ref = obj;\n    for (let i = 0; i < path.length; ++i) {\n        let key = path[i];\n        const type = options.iterables && internals.iterables(ref);\n\n        if (Array.isArray(ref) ||\n            type === 'set') {\n\n            const number = Number(key);\n            if (Number.isInteger(number)) {\n                key = number < 0 ? ref.length + number : number;\n            }\n        }\n\n        if (!ref ||\n            typeof ref === 'function' && options.functions === false ||         // Defaults to true\n            !type && ref[key] === undefined) {\n\n            Assert(!options.strict || i + 1 === path.length, 'Missing segment', key, 'in reach path ', chain);\n            Assert(typeof ref === 'object' || options.functions === true || typeof ref !== 'function', 'Invalid segment', key, 'in reach path ', chain);\n            ref = options.default;\n            break;\n        }\n\n        if (!type) {\n            ref = ref[key];\n        }\n        else if (type === 'set') {\n            ref = [...ref][key];\n        }\n        else {  // type === 'map'\n            ref = ref.get(key);\n        }\n    }\n\n    return ref;\n};\n\n\ninternals.iterables = function (ref) {\n\n    if (ref instanceof Set) {\n        return 'set';\n    }\n\n    if (ref instanceof Map) {\n        return 'map';\n    }\n};\n", "'use strict';\n\nconst internals = {};\n\n\nexports = module.exports = {\n    array: Array.prototype,\n    buffer: Buffer && Buffer.prototype,             // $lab:coverage:ignore$\n    date: Date.prototype,\n    error: Error.prototype,\n    generic: Object.prototype,\n    map: Map.prototype,\n    promise: Promise.prototype,\n    regex: RegExp.prototype,\n    set: Set.prototype,\n    weakMap: WeakMap.prototype,\n    weakSet: WeakSet.prototype\n};\n\n\ninternals.typeMap = new Map([\n    ['[object Error]', exports.error],\n    ['[object Map]', exports.map],\n    ['[object Promise]', exports.promise],\n    ['[object Set]', exports.set],\n    ['[object WeakMap]', exports.weakMap],\n    ['[object WeakSet]', exports.weakSet]\n]);\n\n\nexports.getInternalProto = function (obj) {\n\n    if (Array.isArray(obj)) {\n        return exports.array;\n    }\n\n    if (Buffer && obj instanceof Buffer) {          // $lab:coverage:ignore$\n        return exports.buffer;\n    }\n\n    if (obj instanceof Date) {\n        return exports.date;\n    }\n\n    if (obj instanceof RegExp) {\n        return exports.regex;\n    }\n\n    if (obj instanceof Error) {\n        return exports.error;\n    }\n\n    const objName = Object.prototype.toString.call(obj);\n    return internals.typeMap.get(objName) || exports.generic;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nexports.keys = function (obj, options = {}) {\n\n    return options.symbols !== false ? Reflect.ownKeys(obj) : Object.getOwnPropertyNames(obj);  // Defaults to true\n};\n", "'use strict';\n\nconst Reach = require('./reach');\nconst Types = require('./types');\nconst Utils = require('./utils');\n\n\nconst internals = {\n    needsProtoHack: new Set([Types.set, Types.map, Types.weakSet, Types.weakMap])\n};\n\n\nmodule.exports = internals.clone = function (obj, options = {}, _seen = null) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    let clone = internals.clone;\n    let seen = _seen;\n\n    if (options.shallow) {\n        if (options.shallow !== true) {\n            return internals.cloneWithShallow(obj, options);\n        }\n\n        clone = (value) => value;\n    }\n    else if (seen) {\n        const lookup = seen.get(obj);\n        if (lookup) {\n            return lookup;\n        }\n    }\n    else {\n        seen = new Map();\n    }\n\n    // Built-in object types\n\n    const baseProto = Types.getInternalProto(obj);\n    if (baseProto === Types.buffer) {\n        return Buffer && Buffer.from(obj);              // $lab:coverage:ignore$\n    }\n\n    if (baseProto === Types.date) {\n        return new Date(obj.getTime());\n    }\n\n    if (baseProto === Types.regex) {\n        return new RegExp(obj);\n    }\n\n    // Generic objects\n\n    const newObj = internals.base(obj, baseProto, options);\n    if (newObj === obj) {\n        return obj;\n    }\n\n    if (seen) {\n        seen.set(obj, newObj);                              // Set seen, since obj could recurse\n    }\n\n    if (baseProto === Types.set) {\n        for (const value of obj) {\n            newObj.add(clone(value, options, seen));\n        }\n    }\n    else if (baseProto === Types.map) {\n        for (const [key, value] of obj) {\n            newObj.set(key, clone(value, options, seen));\n        }\n    }\n\n    const keys = Utils.keys(obj, options);\n    for (const key of keys) {\n        if (key === '__proto__') {\n            continue;\n        }\n\n        if (baseProto === Types.array &&\n            key === 'length') {\n\n            newObj.length = obj.length;\n            continue;\n        }\n\n        const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n        if (descriptor) {\n            if (descriptor.get ||\n                descriptor.set) {\n\n                Object.defineProperty(newObj, key, descriptor);\n            }\n            else if (descriptor.enumerable) {\n                newObj[key] = clone(obj[key], options, seen);\n            }\n            else {\n                Object.defineProperty(newObj, key, { enumerable: false, writable: true, configurable: true, value: clone(obj[key], options, seen) });\n            }\n        }\n        else {\n            Object.defineProperty(newObj, key, {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: clone(obj[key], options, seen)\n            });\n        }\n    }\n\n    return newObj;\n};\n\n\ninternals.cloneWithShallow = function (source, options) {\n\n    const keys = options.shallow;\n    options = Object.assign({}, options);\n    options.shallow = false;\n\n    const seen = new Map();\n\n    for (const key of keys) {\n        const ref = Reach(source, key);\n        if (typeof ref === 'object' ||\n            typeof ref === 'function') {\n\n            seen.set(ref, ref);\n        }\n    }\n\n    return internals.clone(source, options, seen);\n};\n\n\ninternals.base = function (obj, baseProto, options) {\n\n    if (options.prototype === false) {                  // Defaults to true\n        if (internals.needsProtoHack.has(baseProto)) {\n            return new baseProto.constructor();\n        }\n\n        return baseProto === Types.array ? [] : {};\n    }\n\n    const proto = Object.getPrototypeOf(obj);\n    if (proto &&\n        proto.isImmutable) {\n\n        return obj;\n    }\n\n    if (baseProto === Types.array) {\n        const newObj = [];\n        if (proto !== baseProto) {\n            Object.setPrototypeOf(newObj, proto);\n        }\n\n        return newObj;\n    }\n\n    if (internals.needsProtoHack.has(baseProto)) {\n        const newObj = new proto.constructor();\n        if (proto !== baseProto) {\n            Object.setPrototypeOf(newObj, proto);\n        }\n\n        return newObj;\n    }\n\n    return Object.create(proto);\n};\n", "'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Utils = require('./utils');\n\n\nconst internals = {};\n\n\nmodule.exports = internals.merge = function (target, source, options) {\n\n    Assert(target && typeof target === 'object', 'Invalid target value: must be an object');\n    Assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');\n\n    if (!source) {\n        return target;\n    }\n\n    options = Object.assign({ nullOverride: true, mergeArrays: true }, options);\n\n    if (Array.isArray(source)) {\n        Assert(Array.isArray(target), 'Cannot merge array onto an object');\n        if (!options.mergeArrays) {\n            target.length = 0;                                                          // Must not change target assignment\n        }\n\n        for (let i = 0; i < source.length; ++i) {\n            target.push(Clone(source[i], { symbols: options.symbols }));\n        }\n\n        return target;\n    }\n\n    const keys = Utils.keys(source, options);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key === '__proto__' ||\n            !Object.prototype.propertyIsEnumerable.call(source, key)) {\n\n            continue;\n        }\n\n        const value = source[key];\n        if (value &&\n            typeof value === 'object') {\n\n            if (target[key] === value) {\n                continue;                                           // Can occur for shallow merges\n            }\n\n            if (!target[key] ||\n                typeof target[key] !== 'object' ||\n                (Array.isArray(target[key]) !== Array.isArray(value)) ||\n                value instanceof Date ||\n                (Buffer && Buffer.isBuffer(value)) ||               // $lab:coverage:ignore$\n                value instanceof RegExp) {\n\n                target[key] = Clone(value, { symbols: options.symbols });\n            }\n            else {\n                internals.merge(target[key], value, options);\n            }\n        }\n        else {\n            if (value !== null &&\n                value !== undefined) {                              // Explicit to preserve empty strings\n\n                target[key] = value;\n            }\n            else if (options.nullOverride) {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n};\n", "'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Merge = require('./merge');\nconst Reach = require('./reach');\n\n\nconst internals = {};\n\n\nmodule.exports = function (defaults, source, options = {}) {\n\n    Assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');\n    Assert(!source || source === true || typeof source === 'object', 'Invalid source value: must be true, falsy or an object');\n    Assert(typeof options === 'object', 'Invalid options: must be an object');\n\n    if (!source) {                                                  // If no source, return null\n        return null;\n    }\n\n    if (options.shallow) {\n        return internals.applyToDefaultsWithShallow(defaults, source, options);\n    }\n\n    const copy = Clone(defaults);\n\n    if (source === true) {                                          // If source is set to true, use defaults\n        return copy;\n    }\n\n    const nullOverride = options.nullOverride !== undefined ? options.nullOverride : false;\n    return Merge(copy, source, { nullOverride, mergeArrays: false });\n};\n\n\ninternals.applyToDefaultsWithShallow = function (defaults, source, options) {\n\n    const keys = options.shallow;\n    Assert(Array.isArray(keys), 'Invalid keys');\n\n    const seen = new Map();\n    const merge = source === true ? null : new Set();\n\n    for (let key of keys) {\n        key = Array.isArray(key) ? key : key.split('.');            // Pre-split optimization\n\n        const ref = Reach(defaults, key);\n        if (ref &&\n            typeof ref === 'object') {\n\n            seen.set(ref, merge && Reach(source, key) || ref);\n        }\n        else if (merge) {\n            merge.add(key);\n        }\n    }\n\n    const copy = Clone(defaults, {}, seen);\n\n    if (!merge) {\n        return copy;\n    }\n\n    for (const key of merge) {\n        internals.reachCopy(copy, source, key);\n    }\n\n    const nullOverride = options.nullOverride !== undefined ? options.nullOverride : false;\n    return Merge(copy, source, { nullOverride, mergeArrays: false });\n};\n\n\ninternals.reachCopy = function (dst, src, path) {\n\n    for (const segment of path) {\n        if (!(segment in src)) {\n            return;\n        }\n\n        const val = src[segment];\n\n        if (typeof val !== 'object' || val === null) {\n            return;\n        }\n\n        src = val;\n    }\n\n    const value = src;\n    let ref = dst;\n    for (let i = 0; i < path.length - 1; ++i) {\n        const segment = path[i];\n        if (typeof ref[segment] !== 'object') {\n            ref[segment] = {};\n        }\n\n        ref = ref[segment];\n    }\n\n    ref[path[path.length - 1]] = value;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = internals.Bench = class {\n\n    constructor() {\n\n        this.ts = 0;\n        this.reset();\n    }\n\n    reset() {\n\n        this.ts = internals.Bench.now();\n    }\n\n    elapsed() {\n\n        return internals.Bench.now() - this.ts;\n    }\n\n    static now() {\n\n        const ts = process.hrtime();\n        return (ts[0] * 1e3) + (ts[1] / 1e6);\n    }\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function () { };\n", "'use strict';\n\nconst Ignore = require('./ignore');\n\n\nconst internals = {};\n\n\nmodule.exports = function () {\n\n    return new Promise(Ignore);\n};\n", "'use strict';\n\nconst Types = require('./types');\n\n\nconst internals = {\n    mismatched: null\n};\n\n\nmodule.exports = function (obj, ref, options) {\n\n    options = Object.assign({ prototype: true }, options);\n\n    return !!internals.isDeepEqual(obj, ref, options, []);\n};\n\n\ninternals.isDeepEqual = function (obj, ref, options, seen) {\n\n    if (obj === ref) {                                                      // Copied from Deep-eql, copyright(c) 2013 Jake Luer, jake@alogicalparadox.com, MIT Licensed, https://github.com/chaijs/deep-eql\n        return obj !== 0 || 1 / obj === 1 / ref;\n    }\n\n    const type = typeof obj;\n\n    if (type !== typeof ref) {\n        return false;\n    }\n\n    if (obj === null ||\n        ref === null) {\n\n        return false;\n    }\n\n    if (type === 'function') {\n        if (!options.deepFunction ||\n            obj.toString() !== ref.toString()) {\n\n            return false;\n        }\n\n        // Continue as object\n    }\n    else if (type !== 'object') {\n        return obj !== obj && ref !== ref;                                  // NaN\n    }\n\n    const instanceType = internals.getSharedType(obj, ref, !!options.prototype);\n    switch (instanceType) {\n        case Types.buffer:\n            return Buffer && Buffer.prototype.equals.call(obj, ref);        // $lab:coverage:ignore$\n        case Types.promise:\n            return obj === ref;\n        case Types.regex:\n            return obj.toString() === ref.toString();\n        case internals.mismatched:\n            return false;\n    }\n\n    for (let i = seen.length - 1; i >= 0; --i) {\n        if (seen[i].isSame(obj, ref)) {\n            return true;                                                    // If previous comparison failed, it would have stopped execution\n        }\n    }\n\n    seen.push(new internals.SeenEntry(obj, ref));\n\n    try {\n        return !!internals.isDeepEqualObj(instanceType, obj, ref, options, seen);\n    }\n    finally {\n        seen.pop();\n    }\n};\n\n\ninternals.getSharedType = function (obj, ref, checkPrototype) {\n\n    if (checkPrototype) {\n        if (Object.getPrototypeOf(obj) !== Object.getPrototypeOf(ref)) {\n            return internals.mismatched;\n        }\n\n        return Types.getInternalProto(obj);\n    }\n\n    const type = Types.getInternalProto(obj);\n    if (type !== Types.getInternalProto(ref)) {\n        return internals.mismatched;\n    }\n\n    return type;\n};\n\n\ninternals.valueOf = function (obj) {\n\n    const objValueOf = obj.valueOf;\n    if (objValueOf === undefined) {\n        return obj;\n    }\n\n    try {\n        return objValueOf.call(obj);\n    }\n    catch (err) {\n        return err;\n    }\n};\n\n\ninternals.hasOwnEnumerableProperty = function (obj, key) {\n\n    return Object.prototype.propertyIsEnumerable.call(obj, key);\n};\n\n\ninternals.isSetSimpleEqual = function (obj, ref) {\n\n    for (const entry of Set.prototype.values.call(obj)) {\n        if (!Set.prototype.has.call(ref, entry)) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\ninternals.isDeepEqualObj = function (instanceType, obj, ref, options, seen) {\n\n    const { isDeepEqual, valueOf, hasOwnEnumerableProperty } = internals;\n    const { keys, getOwnPropertySymbols } = Object;\n\n    if (instanceType === Types.array) {\n        if (options.part) {\n\n            // Check if any index match any other index\n\n            for (const objValue of obj) {\n                for (const refValue of ref) {\n                    if (isDeepEqual(objValue, refValue, options, seen)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        else {\n            if (obj.length !== ref.length) {\n                return false;\n            }\n\n            for (let i = 0; i < obj.length; ++i) {\n                if (!isDeepEqual(obj[i], ref[i], options, seen)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n    else if (instanceType === Types.set) {\n        if (obj.size !== ref.size) {\n            return false;\n        }\n\n        if (!internals.isSetSimpleEqual(obj, ref)) {\n\n            // Check for deep equality\n\n            const ref2 = new Set(Set.prototype.values.call(ref));\n            for (const objEntry of Set.prototype.values.call(obj)) {\n                if (ref2.delete(objEntry)) {\n                    continue;\n                }\n\n                let found = false;\n                for (const refEntry of ref2) {\n                    if (isDeepEqual(objEntry, refEntry, options, seen)) {\n                        ref2.delete(refEntry);\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (instanceType === Types.map) {\n        if (obj.size !== ref.size) {\n            return false;\n        }\n\n        for (const [key, value] of Map.prototype.entries.call(obj)) {\n            if (value === undefined && !Map.prototype.has.call(ref, key)) {\n                return false;\n            }\n\n            if (!isDeepEqual(value, Map.prototype.get.call(ref, key), options, seen)) {\n                return false;\n            }\n        }\n    }\n    else if (instanceType === Types.error) {\n\n        // Always check name and message\n\n        if (obj.name !== ref.name ||\n            obj.message !== ref.message) {\n\n            return false;\n        }\n    }\n\n    // Check .valueOf()\n\n    const valueOfObj = valueOf(obj);\n    const valueOfRef = valueOf(ref);\n    if ((obj !== valueOfObj || ref !== valueOfRef) &&\n        !isDeepEqual(valueOfObj, valueOfRef, options, seen)) {\n\n        return false;\n    }\n\n    // Check properties\n\n    const objKeys = keys(obj);\n    if (!options.part &&\n        objKeys.length !== keys(ref).length &&\n        !options.skip) {\n\n        return false;\n    }\n\n    let skipped = 0;\n    for (const key of objKeys) {\n        if (options.skip &&\n            options.skip.includes(key)) {\n\n            if (ref[key] === undefined) {\n                ++skipped;\n            }\n\n            continue;\n        }\n\n        if (!hasOwnEnumerableProperty(ref, key)) {\n            return false;\n        }\n\n        if (!isDeepEqual(obj[key], ref[key], options, seen)) {\n            return false;\n        }\n    }\n\n    if (!options.part &&\n        objKeys.length - skipped !== keys(ref).length) {\n\n        return false;\n    }\n\n    // Check symbols\n\n    if (options.symbols !== false) {                                // Defaults to true\n        const objSymbols = getOwnPropertySymbols(obj);\n        const refSymbols = new Set(getOwnPropertySymbols(ref));\n\n        for (const key of objSymbols) {\n            if (!options.skip ||\n                !options.skip.includes(key)) {\n\n                if (hasOwnEnumerableProperty(obj, key)) {\n                    if (!hasOwnEnumerableProperty(ref, key)) {\n                        return false;\n                    }\n\n                    if (!isDeepEqual(obj[key], ref[key], options, seen)) {\n                        return false;\n                    }\n                }\n                else if (hasOwnEnumerableProperty(ref, key)) {\n                    return false;\n                }\n            }\n\n            refSymbols.delete(key);\n        }\n\n        for (const key of refSymbols) {\n            if (hasOwnEnumerableProperty(ref, key)) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n};\n\n\ninternals.SeenEntry = class {\n\n    constructor(obj, ref) {\n\n        this.obj = obj;\n        this.ref = ref;\n    }\n\n    isSame(obj, ref) {\n\n        return this.obj === obj && this.ref === ref;\n    }\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (string) {\n\n    // Escape ^$.*+-?=!:|\\/()[]{},\n\n    return string.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, '\\\\$&');\n};\n", "'use strict';\n\nconst Assert = require('./assert');\nconst DeepEqual = require('./deepEqual');\nconst EscapeRegex = require('./escapeRegex');\nconst Utils = require('./utils');\n\n\nconst internals = {};\n\n\nmodule.exports = function (ref, values, options = {}) {        // options: { deep, once, only, part, symbols }\n\n    /*\n        string -> string(s)\n        array -> item(s)\n        object -> key(s)\n        object -> object (key:value)\n    */\n\n    if (typeof values !== 'object') {\n        values = [values];\n    }\n\n    Assert(!Array.isArray(values) || values.length, 'Values array cannot be empty');\n\n    // String\n\n    if (typeof ref === 'string') {\n        return internals.string(ref, values, options);\n    }\n\n    // Array\n\n    if (Array.isArray(ref)) {\n        return internals.array(ref, values, options);\n    }\n\n    // Object\n\n    Assert(typeof ref === 'object', 'Reference must be string or an object');\n    return internals.object(ref, values, options);\n};\n\n\ninternals.array = function (ref, values, options) {\n\n    if (!Array.isArray(values)) {\n        values = [values];\n    }\n\n    if (!ref.length) {\n        return false;\n    }\n\n    if (options.only &&\n        options.once &&\n        ref.length !== values.length) {\n\n        return false;\n    }\n\n    let compare;\n\n    // Map values\n\n    const map = new Map();\n    for (const value of values) {\n        if (!options.deep ||\n            !value ||\n            typeof value !== 'object') {\n\n            const existing = map.get(value);\n            if (existing) {\n                ++existing.allowed;\n            }\n            else {\n                map.set(value, { allowed: 1, hits: 0 });\n            }\n        }\n        else {\n            compare = compare || internals.compare(options);\n\n            let found = false;\n            for (const [key, existing] of map.entries()) {\n                if (compare(key, value)) {\n                    ++existing.allowed;\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                map.set(value, { allowed: 1, hits: 0 });\n            }\n        }\n    }\n\n    // Lookup values\n\n    let hits = 0;\n    for (const item of ref) {\n        let match;\n        if (!options.deep ||\n            !item ||\n            typeof item !== 'object') {\n\n            match = map.get(item);\n        }\n        else {\n            compare = compare || internals.compare(options);\n\n            for (const [key, existing] of map.entries()) {\n                if (compare(key, item)) {\n                    match = existing;\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            ++match.hits;\n            ++hits;\n\n            if (options.once &&\n                match.hits > match.allowed) {\n\n                return false;\n            }\n        }\n    }\n\n    // Validate results\n\n    if (options.only &&\n        hits !== ref.length) {\n\n        return false;\n    }\n\n    for (const match of map.values()) {\n        if (match.hits === match.allowed) {\n            continue;\n        }\n\n        if (match.hits < match.allowed &&\n            !options.part) {\n\n            return false;\n        }\n    }\n\n    return !!hits;\n};\n\n\ninternals.object = function (ref, values, options) {\n\n    Assert(options.once === undefined, 'Cannot use option once with object');\n\n    const keys = Utils.keys(ref, options);\n    if (!keys.length) {\n        return false;\n    }\n\n    // Keys list\n\n    if (Array.isArray(values)) {\n        return internals.array(keys, values, options);\n    }\n\n    // Key value pairs\n\n    const symbols = Object.getOwnPropertySymbols(values).filter((sym) => values.propertyIsEnumerable(sym));\n    const targets = [...Object.keys(values), ...symbols];\n\n    const compare = internals.compare(options);\n    const set = new Set(targets);\n\n    for (const key of keys) {\n        if (!set.has(key)) {\n            if (options.only) {\n                return false;\n            }\n\n            continue;\n        }\n\n        if (!compare(values[key], ref[key])) {\n            return false;\n        }\n\n        set.delete(key);\n    }\n\n    if (set.size) {\n        return options.part ? set.size < targets.length : false;\n    }\n\n    return true;\n};\n\n\ninternals.string = function (ref, values, options) {\n\n    // Empty string\n\n    if (ref === '') {\n        return values.length === 1 && values[0] === '' ||               // '' contains ''\n            !options.once && !values.some((v) => v !== '');             // '' contains multiple '' if !once\n    }\n\n    // Map values\n\n    const map = new Map();\n    const patterns = [];\n\n    for (const value of values) {\n        Assert(typeof value === 'string', 'Cannot compare string reference to non-string value');\n\n        if (value) {\n            const existing = map.get(value);\n            if (existing) {\n                ++existing.allowed;\n            }\n            else {\n                map.set(value, { allowed: 1, hits: 0 });\n                patterns.push(EscapeRegex(value));\n            }\n        }\n        else if (options.once ||\n            options.only) {\n\n            return false;\n        }\n    }\n\n    if (!patterns.length) {                     // Non-empty string contains unlimited empty string\n        return true;\n    }\n\n    // Match patterns\n\n    const regex = new RegExp(`(${patterns.join('|')})`, 'g');\n    const leftovers = ref.replace(regex, ($0, $1) => {\n\n        ++map.get($1).hits;\n        return '';                              // Remove from string\n    });\n\n    // Validate results\n\n    if (options.only &&\n        leftovers) {\n\n        return false;\n    }\n\n    let any = false;\n    for (const match of map.values()) {\n        if (match.hits) {\n            any = true;\n        }\n\n        if (match.hits === match.allowed) {\n            continue;\n        }\n\n        if (match.hits < match.allowed &&\n            !options.part) {\n\n            return false;\n        }\n\n        // match.hits > match.allowed\n\n        if (options.once) {\n            return false;\n        }\n    }\n\n    return !!any;\n};\n\n\ninternals.compare = function (options) {\n\n    if (!options.deep) {\n        return internals.shallow;\n    }\n\n    const hasOnly = options.only !== undefined;\n    const hasPart = options.part !== undefined;\n\n    const flags = {\n        prototype: hasOnly ? options.only : hasPart ? !options.part : false,\n        part: hasOnly ? !options.only : hasPart ? options.part : false\n    };\n\n    return (a, b) => DeepEqual(a, b, flags);\n};\n\n\ninternals.shallow = function (a, b) {\n\n    return a === b;\n};\n", "'use strict';\n\nconst Assert = require('./assert');\n\n\nconst internals = {};\n\n\nmodule.exports = function (attribute) {\n\n    // Allowed value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \\, \"\n\n    Assert(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');\n\n    return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');                             // Escape quotes and slash\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    let escaped = '';\n\n    for (let i = 0; i < input.length; ++i) {\n\n        const charCode = input.charCodeAt(i);\n\n        if (internals.isSafe(charCode)) {\n            escaped += input[i];\n        }\n        else {\n            escaped += internals.escapeHtmlChar(charCode);\n        }\n    }\n\n    return escaped;\n};\n\n\ninternals.escapeHtmlChar = function (charCode) {\n\n    const namedEscape = internals.namedHtml[charCode];\n    if (typeof namedEscape !== 'undefined') {\n        return namedEscape;\n    }\n\n    if (charCode >= 256) {\n        return '&#' + charCode + ';';\n    }\n\n    const hexValue = charCode.toString(16).padStart(2, '0');\n    return `&#x${hexValue};`;\n};\n\n\ninternals.isSafe = function (charCode) {\n\n    return (typeof internals.safeCharCodes[charCode] !== 'undefined');\n};\n\n\ninternals.namedHtml = {\n    '38': '&amp;',\n    '60': '&lt;',\n    '62': '&gt;',\n    '34': '&quot;',\n    '160': '&nbsp;',\n    '162': '&cent;',\n    '163': '&pound;',\n    '164': '&curren;',\n    '169': '&copy;',\n    '174': '&reg;'\n};\n\n\ninternals.safeCharCodes = (function () {\n\n    const safe = {};\n\n    for (let i = 32; i < 123; ++i) {\n\n        if ((i >= 97) ||                    // a-z\n            (i >= 65 && i <= 90) ||         // A-Z\n            (i >= 48 && i <= 57) ||         // 0-9\n            i === 32 ||                     // space\n            i === 46 ||                     // .\n            i === 44 ||                     // ,\n            i === 45 ||                     // -\n            i === 58 ||                     // :\n            i === 95) {                     // _\n\n            safe[i] = null;\n        }\n    }\n\n    return safe;\n}());\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    const lessThan = 0x3C;\n    const greaterThan = 0x3E;\n    const andSymbol = 0x26;\n    const lineSeperator = 0x2028;\n\n    // replace method\n    let charCode;\n    return input.replace(/[<>&\\u2028\\u2029]/g, (match) => {\n\n        charCode = match.charCodeAt(0);\n\n        if (charCode === lessThan) {\n            return '\\\\u003c';\n        }\n\n        if (charCode === greaterThan) {\n            return '\\\\u003e';\n        }\n\n        if (charCode === andSymbol) {\n            return '\\\\u0026';\n        }\n\n        if (charCode === lineSeperator) {\n            return '\\\\u2028';\n        }\n\n        return '\\\\u2029';\n    });\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = internals.flatten = function (array, target) {\n\n    const result = target || [];\n\n    for (let i = 0; i < array.length; ++i) {\n        if (Array.isArray(array[i])) {\n            internals.flatten(array[i], result);\n        }\n        else {\n            result.push(array[i]);\n        }\n    }\n\n    return result;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (array1, array2, options = {}) {\n\n    if (!array1 ||\n        !array2) {\n\n        return (options.first ? null : []);\n    }\n\n    const common = [];\n    const hash = (Array.isArray(array1) ? new Set(array1) : array1);\n    const found = new Set();\n    for (const value of array2) {\n        if (internals.has(hash, value) &&\n            !found.has(value)) {\n\n            if (options.first) {\n                return value;\n            }\n\n            common.push(value);\n            found.add(value);\n        }\n    }\n\n    return (options.first ? null : common);\n};\n\n\ninternals.has = function (ref, key) {\n\n    if (typeof ref.has === 'function') {\n        return ref.has(key);\n    }\n\n    return ref[key] !== undefined;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (promise) {\n\n    return !!promise && typeof promise.then === 'function';\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (method) {\n\n    if (method._hoekOnce) {\n        return method;\n    }\n\n    let once = false;\n    const wrapped = function (...args) {\n\n        if (!once) {\n            once = true;\n            method(...args);\n        }\n    };\n\n    wrapped._hoekOnce = true;\n    return wrapped;\n};\n", "'use strict';\n\nconst Reach = require('./reach');\n\n\nconst internals = {};\n\n\nmodule.exports = function (obj, template, options) {\n\n    return template.replace(/{([^}]+)}/g, ($0, chain) => {\n\n        const value = Reach(obj, chain, options);\n        return (value === undefined || value === null ? '' : value);\n    });\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (timeout, returnValue) {\n\n    if (typeof timeout !== 'number' && timeout !== undefined) {\n        throw new TypeError('Timeout must be a number');\n    }\n\n    return new Promise((resolve) => setTimeout(resolve, timeout, returnValue));\n};\n", "'use strict';\n\nexports.applyToDefaults = require('./applyToDefaults');\n\nexports.assert = require('./assert');\n\nexports.Bench = require('./bench');\n\nexports.block = require('./block');\n\nexports.clone = require('./clone');\n\nexports.contain = require('./contain');\n\nexports.deepEqual = require('./deepEqual');\n\nexports.Error = require('./error');\n\nexports.escapeHeaderAttribute = require('./escapeHeaderAttribute');\n\nexports.escapeHtml = require('./escapeHtml');\n\nexports.escapeJson = require('./escapeJson');\n\nexports.escapeRegex = require('./escapeRegex');\n\nexports.flatten = require('./flatten');\n\nexports.ignore = require('./ignore');\n\nexports.intersect = require('./intersect');\n\nexports.isPromise = require('./isPromise');\n\nexports.merge = require('./merge');\n\nexports.once = require('./once');\n\nexports.reach = require('./reach');\n\nexports.reachTemplate = require('./reachTemplate');\n\nexports.stringify = require('./stringify');\n\nexports.wait = require('./wait');\n", "'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\n\nconst internals = {\n    codes: new Map([\n        [100, 'Continue'],\n        [101, 'Switching Protocols'],\n        [102, 'Processing'],\n        [200, 'OK'],\n        [201, 'Created'],\n        [202, 'Accepted'],\n        [203, 'Non-Authoritative Information'],\n        [204, 'No Content'],\n        [205, 'Reset Content'],\n        [206, 'Partial Content'],\n        [207, 'Multi-Status'],\n        [300, 'Multiple Choices'],\n        [301, 'Moved Permanently'],\n        [302, 'Moved Temporarily'],\n        [303, 'See Other'],\n        [304, 'Not Modified'],\n        [305, 'Use Proxy'],\n        [307, 'Temporary Redirect'],\n        [400, 'Bad Request'],\n        [401, 'Unauthorized'],\n        [402, 'Payment Required'],\n        [403, 'Forbidden'],\n        [404, 'Not Found'],\n        [405, 'Method Not Allowed'],\n        [406, 'Not Acceptable'],\n        [407, 'Proxy Authentication Required'],\n        [408, 'Request Time-out'],\n        [409, 'Conflict'],\n        [410, 'Gone'],\n        [411, 'Length Required'],\n        [412, 'Precondition Failed'],\n        [413, 'Request Entity Too Large'],\n        [414, 'Request-URI Too Large'],\n        [415, 'Unsupported Media Type'],\n        [416, 'Requested Range Not Satisfiable'],\n        [417, 'Expectation Failed'],\n        [418, 'I\\'m a teapot'],\n        [422, 'Unprocessable Entity'],\n        [423, 'Locked'],\n        [424, 'Failed Dependency'],\n        [425, 'Too Early'],\n        [426, 'Upgrade Required'],\n        [428, 'Precondition Required'],\n        [429, 'Too Many Requests'],\n        [431, 'Request Header Fields Too Large'],\n        [451, 'Unavailable For Legal Reasons'],\n        [500, 'Internal Server Error'],\n        [501, 'Not Implemented'],\n        [502, 'Bad Gateway'],\n        [503, 'Service Unavailable'],\n        [504, 'Gateway Time-out'],\n        [505, 'HTTP Version Not Supported'],\n        [506, 'Variant Also Negotiates'],\n        [507, 'Insufficient Storage'],\n        [509, 'Bandwidth Limit Exceeded'],\n        [510, 'Not Extended'],\n        [511, 'Network Authentication Required']\n    ])\n};\n\n\nexports.Boom = class extends Error {\n\n    constructor(message, options = {}) {\n\n        if (message instanceof Error) {\n            return exports.boomify(Hoek.clone(message), options);\n        }\n\n        const { statusCode = 500, data = null, ctor = exports.Boom } = options;\n        const error = new Error(message ? message : undefined);         // Avoids settings null message\n        Error.captureStackTrace(error, ctor);                           // Filter the stack to our external API\n        error.data = data;\n        const boom = internals.initialize(error, statusCode);\n\n        Object.defineProperty(boom, 'typeof', { value: ctor });\n\n        if (options.decorate) {\n            Object.assign(boom, options.decorate);\n        }\n\n        return boom;\n    }\n\n    static [Symbol.hasInstance](instance) {\n\n        return exports.isBoom(instance);\n    }\n};\n\n\nexports.isBoom = function (err, statusCode) {\n\n    return err instanceof Error && !!err.isBoom && (!statusCode || err.output.statusCode === statusCode);\n};\n\n\nexports.boomify = function (err, options) {\n\n    Hoek.assert(err instanceof Error, 'Cannot wrap non-Error object');\n\n    options = options || {};\n\n    if (options.data !== undefined) {\n        err.data = options.data;\n    }\n\n    if (options.decorate) {\n        Object.assign(err, options.decorate);\n    }\n\n    if (!err.isBoom) {\n        return internals.initialize(err, options.statusCode || 500, options.message);\n    }\n\n    if (options.override === false ||                           // Defaults to true\n        !options.statusCode && !options.message) {\n\n        return err;\n    }\n\n    return internals.initialize(err, options.statusCode || err.output.statusCode, options.message);\n};\n\n\n// 4xx Client Errors\n\nexports.badRequest = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 400, data, ctor: exports.badRequest });\n};\n\n\nexports.unauthorized = function (message, scheme, attributes) {          // Or (message, wwwAuthenticate[])\n\n    const err = new exports.Boom(message, { statusCode: 401, ctor: exports.unauthorized });\n\n    // function (message)\n\n    if (!scheme) {\n        return err;\n    }\n\n    // function (message, wwwAuthenticate[])\n\n    if (typeof scheme !== 'string') {\n        err.output.headers['WWW-Authenticate'] = scheme.join(', ');\n        return err;\n    }\n\n    // function (message, scheme, attributes)\n\n    let wwwAuthenticate = `${scheme}`;\n\n    if (attributes ||\n        message) {\n\n        err.output.payload.attributes = {};\n    }\n\n    if (attributes) {\n        if (typeof attributes === 'string') {\n            wwwAuthenticate += ' ' + Hoek.escapeHeaderAttribute(attributes);\n            err.output.payload.attributes = attributes;\n        }\n        else {\n            wwwAuthenticate += ' ' + Object.keys(attributes).map((name) => {\n\n                let value = attributes[name];\n                if (value === null ||\n                    value === undefined) {\n\n                    value = '';\n                }\n\n                err.output.payload.attributes[name] = value;\n                return `${name}=\"${Hoek.escapeHeaderAttribute(value.toString())}\"`;\n            })\n                .join(', ');\n        }\n    }\n\n    if (message) {\n        if (attributes) {\n            wwwAuthenticate += ',';\n        }\n\n        wwwAuthenticate += ` error=\"${Hoek.escapeHeaderAttribute(message)}\"`;\n        err.output.payload.attributes.error = message;\n    }\n    else {\n        err.isMissing = true;\n    }\n\n    err.output.headers['WWW-Authenticate'] = wwwAuthenticate;\n    return err;\n};\n\n\nexports.paymentRequired = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 402, data, ctor: exports.paymentRequired });\n};\n\n\nexports.forbidden = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 403, data, ctor: exports.forbidden });\n};\n\n\nexports.notFound = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 404, data, ctor: exports.notFound });\n};\n\n\nexports.methodNotAllowed = function (message, data, allow) {\n\n    const err = new exports.Boom(message, { statusCode: 405, data, ctor: exports.methodNotAllowed });\n\n    if (typeof allow === 'string') {\n        allow = [allow];\n    }\n\n    if (Array.isArray(allow)) {\n        err.output.headers.Allow = allow.join(', ');\n    }\n\n    return err;\n};\n\n\nexports.notAcceptable = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 406, data, ctor: exports.notAcceptable });\n};\n\n\nexports.proxyAuthRequired = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 407, data, ctor: exports.proxyAuthRequired });\n};\n\n\nexports.clientTimeout = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 408, data, ctor: exports.clientTimeout });\n};\n\n\nexports.conflict = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 409, data, ctor: exports.conflict });\n};\n\n\nexports.resourceGone = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 410, data, ctor: exports.resourceGone });\n};\n\n\nexports.lengthRequired = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 411, data, ctor: exports.lengthRequired });\n};\n\n\nexports.preconditionFailed = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 412, data, ctor: exports.preconditionFailed });\n};\n\n\nexports.entityTooLarge = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 413, data, ctor: exports.entityTooLarge });\n};\n\n\nexports.uriTooLong = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 414, data, ctor: exports.uriTooLong });\n};\n\n\nexports.unsupportedMediaType = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 415, data, ctor: exports.unsupportedMediaType });\n};\n\n\nexports.rangeNotSatisfiable = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 416, data, ctor: exports.rangeNotSatisfiable });\n};\n\n\nexports.expectationFailed = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 417, data, ctor: exports.expectationFailed });\n};\n\n\nexports.teapot = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 418, data, ctor: exports.teapot });\n};\n\n\nexports.badData = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 422, data, ctor: exports.badData });\n};\n\n\nexports.locked = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 423, data, ctor: exports.locked });\n};\n\n\nexports.failedDependency = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 424, data, ctor: exports.failedDependency });\n};\n\nexports.tooEarly = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 425, data, ctor: exports.tooEarly });\n};\n\n\nexports.preconditionRequired = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 428, data, ctor: exports.preconditionRequired });\n};\n\n\nexports.tooManyRequests = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 429, data, ctor: exports.tooManyRequests });\n};\n\n\nexports.illegal = function (message, data) {\n\n    return new exports.Boom(message, { statusCode: 451, data, ctor: exports.illegal });\n};\n\n\n// 5xx Server Errors\n\nexports.internal = function (message, data, statusCode = 500) {\n\n    return internals.serverError(message, data, statusCode, exports.internal);\n};\n\n\nexports.notImplemented = function (message, data) {\n\n    return internals.serverError(message, data, 501, exports.notImplemented);\n};\n\n\nexports.badGateway = function (message, data) {\n\n    return internals.serverError(message, data, 502, exports.badGateway);\n};\n\n\nexports.serverUnavailable = function (message, data) {\n\n    return internals.serverError(message, data, 503, exports.serverUnavailable);\n};\n\n\nexports.gatewayTimeout = function (message, data) {\n\n    return internals.serverError(message, data, 504, exports.gatewayTimeout);\n};\n\n\nexports.badImplementation = function (message, data) {\n\n    const err = internals.serverError(message, data, 500, exports.badImplementation);\n    err.isDeveloperError = true;\n    return err;\n};\n\n\ninternals.initialize = function (err, statusCode, message) {\n\n    const numberCode = parseInt(statusCode, 10);\n    Hoek.assert(!isNaN(numberCode) && numberCode >= 400, 'First argument must be a number (400+):', statusCode);\n\n    err.isBoom = true;\n    err.isServer = numberCode >= 500;\n\n    if (!err.hasOwnProperty('data')) {\n        err.data = null;\n    }\n\n    err.output = {\n        statusCode: numberCode,\n        payload: {},\n        headers: {}\n    };\n\n    Object.defineProperty(err, 'reformat', { value: internals.reformat });\n\n    if (!message &&\n        !err.message) {\n\n        err.reformat();\n        message = err.output.payload.error;\n    }\n\n    if (message) {\n        const props = Object.getOwnPropertyDescriptor(err, 'message') || Object.getOwnPropertyDescriptor(Object.getPrototypeOf(err), 'message');\n        Hoek.assert(!props || props.configurable && !props.get, 'The error is not compatible with boom');\n\n        err.message = message + (err.message ? ': ' + err.message : '');\n        err.output.payload.message = err.message;\n    }\n\n    err.reformat();\n    return err;\n};\n\n\ninternals.reformat = function (debug = false) {\n\n    this.output.payload.statusCode = this.output.statusCode;\n    this.output.payload.error = internals.codes.get(this.output.statusCode) || 'Unknown';\n\n    if (this.output.statusCode === 500 && debug !== true) {\n        this.output.payload.message = 'An internal server error occurred';              // Hide actual error from user\n    }\n    else if (this.message) {\n        this.output.payload.message = this.message;\n    }\n};\n\n\ninternals.serverError = function (message, data, statusCode, ctor) {\n\n    if (data instanceof Error &&\n        !data.isBoom) {\n\n        return exports.boomify(data, { statusCode, message });\n    }\n\n    return new exports.Boom(message, { statusCode, data, ctor });\n};\n", "var SqlString  = exports;\n\nvar ID_GLOBAL_REGEXP    = /`/g;\nvar QUAL_GLOBAL_REGEXP  = /\\./g;\nvar CHARS_GLOBAL_REGEXP = /[\\0\\b\\t\\n\\r\\x1a\\\"\\'\\\\]/g; // eslint-disable-line no-control-regex\nvar CHARS_ESCAPE_MAP    = {\n  '\\0'   : '\\\\0',\n  '\\b'   : '\\\\b',\n  '\\t'   : '\\\\t',\n  '\\n'   : '\\\\n',\n  '\\r'   : '\\\\r',\n  '\\x1a' : '\\\\Z',\n  '\"'    : '\\\\\"',\n  '\\''   : '\\\\\\'',\n  '\\\\'   : '\\\\\\\\'\n};\n\nSqlString.escapeId = function escapeId(val, forbidQualified) {\n  if (Array.isArray(val)) {\n    var sql = '';\n\n    for (var i = 0; i < val.length; i++) {\n      sql += (i === 0 ? '' : ', ') + SqlString.escapeId(val[i], forbidQualified);\n    }\n\n    return sql;\n  } else if (forbidQualified) {\n    return '`' + String(val).replace(ID_GLOBAL_REGEXP, '``') + '`';\n  } else {\n    return '`' + String(val).replace(ID_GLOBAL_REGEXP, '``').replace(QUAL_GLOBAL_REGEXP, '`.`') + '`';\n  }\n};\n\nSqlString.escape = function escape(val, stringifyObjects, timeZone) {\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n\n  switch (typeof val) {\n    case 'boolean': return (val) ? 'true' : 'false';\n    case 'number': return val + '';\n    case 'object':\n      if (val instanceof Date) {\n        return SqlString.dateToString(val, timeZone || 'local');\n      } else if (Array.isArray(val)) {\n        return SqlString.arrayToList(val, timeZone);\n      } else if (Buffer.isBuffer(val)) {\n        return SqlString.bufferToString(val);\n      } else if (typeof val.toSqlString === 'function') {\n        return String(val.toSqlString());\n      } else if (stringifyObjects) {\n        return escapeString(val.toString());\n      } else {\n        return SqlString.objectToValues(val, timeZone);\n      }\n    default: return escapeString(val);\n  }\n};\n\nSqlString.arrayToList = function arrayToList(array, timeZone) {\n  var sql = '';\n\n  for (var i = 0; i < array.length; i++) {\n    var val = array[i];\n\n    if (Array.isArray(val)) {\n      sql += (i === 0 ? '' : ', ') + '(' + SqlString.arrayToList(val, timeZone) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + SqlString.escape(val, true, timeZone);\n    }\n  }\n\n  return sql;\n};\n\nSqlString.format = function format(sql, values, stringifyObjects, timeZone) {\n  if (values == null) {\n    return sql;\n  }\n\n  if (!Array.isArray(values)) {\n    values = [values];\n  }\n\n  var chunkIndex        = 0;\n  var placeholdersRegex = /\\?+/g;\n  var result            = '';\n  var valuesIndex       = 0;\n  var match;\n\n  while (valuesIndex < values.length && (match = placeholdersRegex.exec(sql))) {\n    var len = match[0].length;\n\n    if (len > 2) {\n      continue;\n    }\n\n    var value = len === 2\n      ? SqlString.escapeId(values[valuesIndex])\n      : SqlString.escape(values[valuesIndex], stringifyObjects, timeZone);\n\n    result += sql.slice(chunkIndex, match.index) + value;\n    chunkIndex = placeholdersRegex.lastIndex;\n    valuesIndex++;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was replaced\n    return sql;\n  }\n\n  if (chunkIndex < sql.length) {\n    return result + sql.slice(chunkIndex);\n  }\n\n  return result;\n};\n\nSqlString.dateToString = function dateToString(date, timeZone) {\n  var dt = new Date(date);\n\n  if (isNaN(dt.getTime())) {\n    return 'NULL';\n  }\n\n  var year;\n  var month;\n  var day;\n  var hour;\n  var minute;\n  var second;\n  var millisecond;\n\n  if (timeZone === 'local') {\n    year        = dt.getFullYear();\n    month       = dt.getMonth() + 1;\n    day         = dt.getDate();\n    hour        = dt.getHours();\n    minute      = dt.getMinutes();\n    second      = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    var tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + (tz * 60000));\n    }\n\n    year       = dt.getUTCFullYear();\n    month       = dt.getUTCMonth() + 1;\n    day         = dt.getUTCDate();\n    hour        = dt.getUTCHours();\n    minute      = dt.getUTCMinutes();\n    second      = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  }\n\n  // YYYY-MM-DD HH:mm:ss.mmm\n  var str = zeroPad(year, 4) + '-' + zeroPad(month, 2) + '-' + zeroPad(day, 2) + ' ' +\n    zeroPad(hour, 2) + ':' + zeroPad(minute, 2) + ':' + zeroPad(second, 2) + '.' +\n    zeroPad(millisecond, 3);\n\n  return escapeString(str);\n};\n\nSqlString.bufferToString = function bufferToString(buffer) {\n  return 'X' + escapeString(buffer.toString('hex'));\n};\n\nSqlString.objectToValues = function objectToValues(object, timeZone) {\n  var sql = '';\n\n  for (var key in object) {\n    var val = object[key];\n\n    if (typeof val === 'function') {\n      continue;\n    }\n\n    sql += (sql.length === 0 ? '' : ', ') + SqlString.escapeId(key) + ' = ' + SqlString.escape(val, true, timeZone);\n  }\n\n  return sql;\n};\n\nSqlString.raw = function raw(sql) {\n  if (typeof sql !== 'string') {\n    throw new TypeError('argument sql must be a string');\n  }\n\n  return {\n    toSqlString: function toSqlString() { return sql; }\n  };\n};\n\nfunction escapeString(val) {\n  var chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex = 0;\n  var escapedVal = '';\n  var match;\n\n  while ((match = CHARS_GLOBAL_REGEXP.exec(val))) {\n    escapedVal += val.slice(chunkIndex, match.index) + CHARS_ESCAPE_MAP[match[0]];\n    chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n  while (number.length < length) {\n    number = '0' + number;\n  }\n\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n\n  var m = tz.match(/([\\+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n  if (m) {\n    return (m[1] === '-' ? -1 : 1) * (parseInt(m[2], 10) + ((m[3] ? parseInt(m[3], 10) : 0) / 60)) * 60;\n  }\n  return false;\n}\n", "module.exports = require('./lib/SqlString');\n", "'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n\n  this._head = 0;\n  this._tail = 0;\n  this._capacity = options.capacity;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "'use strict';\n\n// copy from https://raw.githubusercontent.com/mysqljs/mysql/7770ee5bb13260c56a160b91fe480d9165dbeeba/lib/protocol/constants/errors.js\n// (c) node-mysql authors\n\n/**\n * MySQL error constants\n *\n * !! Generated by generate-error-constants.js, do not modify by hand !!\n */\n\nexports.EE_CANTCREATEFILE = 1;\nexports.EE_READ = 2;\nexports.EE_WRITE = 3;\nexports.EE_BADCLOSE = 4;\nexports.EE_OUTOFMEMORY = 5;\nexports.EE_DELETE = 6;\nexports.EE_LINK = 7;\nexports.EE_EOFERR = 9;\nexports.EE_CANTLOCK = 10;\nexports.EE_CANTUNLOCK = 11;\nexports.EE_DIR = 12;\nexports.EE_STAT = 13;\nexports.EE_CANT_CHSIZE = 14;\nexports.EE_CANT_OPEN_STREAM = 15;\nexports.EE_GETWD = 16;\nexports.EE_SETWD = 17;\nexports.EE_LINK_WARNING = 18;\nexports.EE_OPEN_WARNING = 19;\nexports.EE_DISK_FULL = 20;\nexports.EE_CANT_MKDIR = 21;\nexports.EE_UNKNOWN_CHARSET = 22;\nexports.EE_OUT_OF_FILERESOURCES = 23;\nexports.EE_CANT_READLINK = 24;\nexports.EE_CANT_SYMLINK = 25;\nexports.EE_REALPATH = 26;\nexports.EE_SYNC = 27;\nexports.EE_UNKNOWN_COLLATION = 28;\nexports.EE_FILENOTFOUND = 29;\nexports.EE_FILE_NOT_CLOSED = 30;\nexports.EE_CHANGE_OWNERSHIP = 31;\nexports.EE_CHANGE_PERMISSIONS = 32;\nexports.EE_CANT_SEEK = 33;\nexports.HA_ERR_KEY_NOT_FOUND = 120;\nexports.HA_ERR_FOUND_DUPP_KEY = 121;\nexports.HA_ERR_INTERNAL_ERROR = 122;\nexports.HA_ERR_RECORD_CHANGED = 123;\nexports.HA_ERR_WRONG_INDEX = 124;\nexports.HA_ERR_CRASHED = 126;\nexports.HA_ERR_WRONG_IN_RECORD = 127;\nexports.HA_ERR_OUT_OF_MEM = 128;\nexports.HA_ERR_NOT_A_TABLE = 130;\nexports.HA_ERR_WRONG_COMMAND = 131;\nexports.HA_ERR_OLD_FILE = 132;\nexports.HA_ERR_NO_ACTIVE_RECORD = 133;\nexports.HA_ERR_RECORD_DELETED = 134;\nexports.HA_ERR_RECORD_FILE_FULL = 135;\nexports.HA_ERR_INDEX_FILE_FULL = 136;\nexports.HA_ERR_END_OF_FILE = 137;\nexports.HA_ERR_UNSUPPORTED = 138;\nexports.HA_ERR_TO_BIG_ROW = 139;\nexports.HA_WRONG_CREATE_OPTION = 140;\nexports.HA_ERR_FOUND_DUPP_UNIQUE = 141;\nexports.HA_ERR_UNKNOWN_CHARSET = 142;\nexports.HA_ERR_WRONG_MRG_TABLE_DEF = 143;\nexports.HA_ERR_CRASHED_ON_REPAIR = 144;\nexports.HA_ERR_CRASHED_ON_USAGE = 145;\nexports.HA_ERR_LOCK_WAIT_TIMEOUT = 146;\nexports.HA_ERR_LOCK_TABLE_FULL = 147;\nexports.HA_ERR_READ_ONLY_TRANSACTION = 148;\nexports.HA_ERR_LOCK_DEADLOCK = 149;\nexports.HA_ERR_CANNOT_ADD_FOREIGN = 150;\nexports.HA_ERR_NO_REFERENCED_ROW = 151;\nexports.HA_ERR_ROW_IS_REFERENCED = 152;\nexports.HA_ERR_NO_SAVEPOINT = 153;\nexports.HA_ERR_NON_UNIQUE_BLOCK_SIZE = 154;\nexports.HA_ERR_NO_SUCH_TABLE = 155;\nexports.HA_ERR_TABLE_EXIST = 156;\nexports.HA_ERR_NO_CONNECTION = 157;\nexports.HA_ERR_NULL_IN_SPATIAL = 158;\nexports.HA_ERR_TABLE_DEF_CHANGED = 159;\nexports.HA_ERR_NO_PARTITION_FOUND = 160;\nexports.HA_ERR_RBR_LOGGING_FAILED = 161;\nexports.HA_ERR_DROP_INDEX_FK = 162;\nexports.HA_ERR_FOREIGN_DUPLICATE_KEY = 163;\nexports.HA_ERR_TABLE_NEEDS_UPGRADE = 164;\nexports.HA_ERR_TABLE_READONLY = 165;\nexports.HA_ERR_AUTOINC_READ_FAILED = 166;\nexports.HA_ERR_AUTOINC_ERANGE = 167;\nexports.HA_ERR_GENERIC = 168;\nexports.HA_ERR_RECORD_IS_THE_SAME = 169;\nexports.HA_ERR_LOGGING_IMPOSSIBLE = 170;\nexports.HA_ERR_CORRUPT_EVENT = 171;\nexports.HA_ERR_NEW_FILE = 172;\nexports.HA_ERR_ROWS_EVENT_APPLY = 173;\nexports.HA_ERR_INITIALIZATION = 174;\nexports.HA_ERR_FILE_TOO_SHORT = 175;\nexports.HA_ERR_WRONG_CRC = 176;\nexports.HA_ERR_TOO_MANY_CONCURRENT_TRXS = 177;\nexports.HA_ERR_NOT_IN_LOCK_PARTITIONS = 178;\nexports.HA_ERR_INDEX_COL_TOO_LONG = 179;\nexports.HA_ERR_INDEX_CORRUPT = 180;\nexports.HA_ERR_UNDO_REC_TOO_BIG = 181;\nexports.HA_FTS_INVALID_DOCID = 182;\nexports.HA_ERR_TABLE_IN_FK_CHECK = 183;\nexports.HA_ERR_TABLESPACE_EXISTS = 184;\nexports.HA_ERR_TOO_MANY_FIELDS = 185;\nexports.HA_ERR_ROW_IN_WRONG_PARTITION = 186;\nexports.HA_ERR_INNODB_READ_ONLY = 187;\nexports.HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT = 188;\nexports.HA_ERR_TEMP_FILE_WRITE_FAILURE = 189;\nexports.HA_ERR_INNODB_FORCED_RECOVERY = 190;\nexports.HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE = 191;\nexports.ER_HASHCHK = 1000;\nexports.ER_NISAMCHK = 1001;\nexports.ER_NO = 1002;\nexports.ER_YES = 1003;\nexports.ER_CANT_CREATE_FILE = 1004;\nexports.ER_CANT_CREATE_TABLE = 1005;\nexports.ER_CANT_CREATE_DB = 1006;\nexports.ER_DB_CREATE_EXISTS = 1007;\nexports.ER_DB_DROP_EXISTS = 1008;\nexports.ER_DB_DROP_DELETE = 1009;\nexports.ER_DB_DROP_RMDIR = 1010;\nexports.ER_CANT_DELETE_FILE = 1011;\nexports.ER_CANT_FIND_SYSTEM_REC = 1012;\nexports.ER_CANT_GET_STAT = 1013;\nexports.ER_CANT_GET_WD = 1014;\nexports.ER_CANT_LOCK = 1015;\nexports.ER_CANT_OPEN_FILE = 1016;\nexports.ER_FILE_NOT_FOUND = 1017;\nexports.ER_CANT_READ_DIR = 1018;\nexports.ER_CANT_SET_WD = 1019;\nexports.ER_CHECKREAD = 1020;\nexports.ER_DISK_FULL = 1021;\nexports.ER_DUP_KEY = 1022;\nexports.ER_ERROR_ON_CLOSE = 1023;\nexports.ER_ERROR_ON_READ = 1024;\nexports.ER_ERROR_ON_RENAME = 1025;\nexports.ER_ERROR_ON_WRITE = 1026;\nexports.ER_FILE_USED = 1027;\nexports.ER_FILSORT_ABORT = 1028;\nexports.ER_FORM_NOT_FOUND = 1029;\nexports.ER_GET_ERRNO = 1030;\nexports.ER_ILLEGAL_HA = 1031;\nexports.ER_KEY_NOT_FOUND = 1032;\nexports.ER_NOT_FORM_FILE = 1033;\nexports.ER_NOT_KEYFILE = 1034;\nexports.ER_OLD_KEYFILE = 1035;\nexports.ER_OPEN_AS_READONLY = 1036;\nexports.ER_OUTOFMEMORY = 1037;\nexports.ER_OUT_OF_SORTMEMORY = 1038;\nexports.ER_UNEXPECTED_EOF = 1039;\nexports.ER_CON_COUNT_ERROR = 1040;\nexports.ER_OUT_OF_RESOURCES = 1041;\nexports.ER_BAD_HOST_ERROR = 1042;\nexports.ER_HANDSHAKE_ERROR = 1043;\nexports.ER_DBACCESS_DENIED_ERROR = 1044;\nexports.ER_ACCESS_DENIED_ERROR = 1045;\nexports.ER_NO_DB_ERROR = 1046;\nexports.ER_UNKNOWN_COM_ERROR = 1047;\nexports.ER_BAD_NULL_ERROR = 1048;\nexports.ER_BAD_DB_ERROR = 1049;\nexports.ER_TABLE_EXISTS_ERROR = 1050;\nexports.ER_BAD_TABLE_ERROR = 1051;\nexports.ER_NON_UNIQ_ERROR = 1052;\nexports.ER_SERVER_SHUTDOWN = 1053;\nexports.ER_BAD_FIELD_ERROR = 1054;\nexports.ER_WRONG_FIELD_WITH_GROUP = 1055;\nexports.ER_WRONG_GROUP_FIELD = 1056;\nexports.ER_WRONG_SUM_SELECT = 1057;\nexports.ER_WRONG_VALUE_COUNT = 1058;\nexports.ER_TOO_LONG_IDENT = 1059;\nexports.ER_DUP_FIELDNAME = 1060;\nexports.ER_DUP_KEYNAME = 1061;\nexports.ER_DUP_ENTRY = 1062;\nexports.ER_WRONG_FIELD_SPEC = 1063;\nexports.ER_PARSE_ERROR = 1064;\nexports.ER_EMPTY_QUERY = 1065;\nexports.ER_NONUNIQ_TABLE = 1066;\nexports.ER_INVALID_DEFAULT = 1067;\nexports.ER_MULTIPLE_PRI_KEY = 1068;\nexports.ER_TOO_MANY_KEYS = 1069;\nexports.ER_TOO_MANY_KEY_PARTS = 1070;\nexports.ER_TOO_LONG_KEY = 1071;\nexports.ER_KEY_COLUMN_DOES_NOT_EXITS = 1072;\nexports.ER_BLOB_USED_AS_KEY = 1073;\nexports.ER_TOO_BIG_FIELDLENGTH = 1074;\nexports.ER_WRONG_AUTO_KEY = 1075;\nexports.ER_READY = 1076;\nexports.ER_NORMAL_SHUTDOWN = 1077;\nexports.ER_GOT_SIGNAL = 1078;\nexports.ER_SHUTDOWN_COMPLETE = 1079;\nexports.ER_FORCING_CLOSE = 1080;\nexports.ER_IPSOCK_ERROR = 1081;\nexports.ER_NO_SUCH_INDEX = 1082;\nexports.ER_WRONG_FIELD_TERMINATORS = 1083;\nexports.ER_BLOBS_AND_NO_TERMINATED = 1084;\nexports.ER_TEXTFILE_NOT_READABLE = 1085;\nexports.ER_FILE_EXISTS_ERROR = 1086;\nexports.ER_LOAD_INFO = 1087;\nexports.ER_ALTER_INFO = 1088;\nexports.ER_WRONG_SUB_KEY = 1089;\nexports.ER_CANT_REMOVE_ALL_FIELDS = 1090;\nexports.ER_CANT_DROP_FIELD_OR_KEY = 1091;\nexports.ER_INSERT_INFO = 1092;\nexports.ER_UPDATE_TABLE_USED = 1093;\nexports.ER_NO_SUCH_THREAD = 1094;\nexports.ER_KILL_DENIED_ERROR = 1095;\nexports.ER_NO_TABLES_USED = 1096;\nexports.ER_TOO_BIG_SET = 1097;\nexports.ER_NO_UNIQUE_LOGFILE = 1098;\nexports.ER_TABLE_NOT_LOCKED_FOR_WRITE = 1099;\nexports.ER_TABLE_NOT_LOCKED = 1100;\nexports.ER_BLOB_CANT_HAVE_DEFAULT = 1101;\nexports.ER_WRONG_DB_NAME = 1102;\nexports.ER_WRONG_TABLE_NAME = 1103;\nexports.ER_TOO_BIG_SELECT = 1104;\nexports.ER_UNKNOWN_ERROR = 1105;\nexports.ER_UNKNOWN_PROCEDURE = 1106;\nexports.ER_WRONG_PARAMCOUNT_TO_PROCEDURE = 1107;\nexports.ER_WRONG_PARAMETERS_TO_PROCEDURE = 1108;\nexports.ER_UNKNOWN_TABLE = 1109;\nexports.ER_FIELD_SPECIFIED_TWICE = 1110;\nexports.ER_INVALID_GROUP_FUNC_USE = 1111;\nexports.ER_UNSUPPORTED_EXTENSION = 1112;\nexports.ER_TABLE_MUST_HAVE_COLUMNS = 1113;\nexports.ER_RECORD_FILE_FULL = 1114;\nexports.ER_UNKNOWN_CHARACTER_SET = 1115;\nexports.ER_TOO_MANY_TABLES = 1116;\nexports.ER_TOO_MANY_FIELDS = 1117;\nexports.ER_TOO_BIG_ROWSIZE = 1118;\nexports.ER_STACK_OVERRUN = 1119;\nexports.ER_WRONG_OUTER_JOIN = 1120;\nexports.ER_NULL_COLUMN_IN_INDEX = 1121;\nexports.ER_CANT_FIND_UDF = 1122;\nexports.ER_CANT_INITIALIZE_UDF = 1123;\nexports.ER_UDF_NO_PATHS = 1124;\nexports.ER_UDF_EXISTS = 1125;\nexports.ER_CANT_OPEN_LIBRARY = 1126;\nexports.ER_CANT_FIND_DL_ENTRY = 1127;\nexports.ER_FUNCTION_NOT_DEFINED = 1128;\nexports.ER_HOST_IS_BLOCKED = 1129;\nexports.ER_HOST_NOT_PRIVILEGED = 1130;\nexports.ER_PASSWORD_ANONYMOUS_USER = 1131;\nexports.ER_PASSWORD_NOT_ALLOWED = 1132;\nexports.ER_PASSWORD_NO_MATCH = 1133;\nexports.ER_UPDATE_INFO = 1134;\nexports.ER_CANT_CREATE_THREAD = 1135;\nexports.ER_WRONG_VALUE_COUNT_ON_ROW = 1136;\nexports.ER_CANT_REOPEN_TABLE = 1137;\nexports.ER_INVALID_USE_OF_NULL = 1138;\nexports.ER_REGEXP_ERROR = 1139;\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS = 1140;\nexports.ER_NONEXISTING_GRANT = 1141;\nexports.ER_TABLEACCESS_DENIED_ERROR = 1142;\nexports.ER_COLUMNACCESS_DENIED_ERROR = 1143;\nexports.ER_ILLEGAL_GRANT_FOR_TABLE = 1144;\nexports.ER_GRANT_WRONG_HOST_OR_USER = 1145;\nexports.ER_NO_SUCH_TABLE = 1146;\nexports.ER_NONEXISTING_TABLE_GRANT = 1147;\nexports.ER_NOT_ALLOWED_COMMAND = 1148;\nexports.ER_SYNTAX_ERROR = 1149;\nexports.ER_DELAYED_CANT_CHANGE_LOCK = 1150;\nexports.ER_TOO_MANY_DELAYED_THREADS = 1151;\nexports.ER_ABORTING_CONNECTION = 1152;\nexports.ER_NET_PACKET_TOO_LARGE = 1153;\nexports.ER_NET_READ_ERROR_FROM_PIPE = 1154;\nexports.ER_NET_FCNTL_ERROR = 1155;\nexports.ER_NET_PACKETS_OUT_OF_ORDER = 1156;\nexports.ER_NET_UNCOMPRESS_ERROR = 1157;\nexports.ER_NET_READ_ERROR = 1158;\nexports.ER_NET_READ_INTERRUPTED = 1159;\nexports.ER_NET_ERROR_ON_WRITE = 1160;\nexports.ER_NET_WRITE_INTERRUPTED = 1161;\nexports.ER_TOO_LONG_STRING = 1162;\nexports.ER_TABLE_CANT_HANDLE_BLOB = 1163;\nexports.ER_TABLE_CANT_HANDLE_AUTO_INCREMENT = 1164;\nexports.ER_DELAYED_INSERT_TABLE_LOCKED = 1165;\nexports.ER_WRONG_COLUMN_NAME = 1166;\nexports.ER_WRONG_KEY_COLUMN = 1167;\nexports.ER_WRONG_MRG_TABLE = 1168;\nexports.ER_DUP_UNIQUE = 1169;\nexports.ER_BLOB_KEY_WITHOUT_LENGTH = 1170;\nexports.ER_PRIMARY_CANT_HAVE_NULL = 1171;\nexports.ER_TOO_MANY_ROWS = 1172;\nexports.ER_REQUIRES_PRIMARY_KEY = 1173;\nexports.ER_NO_RAID_COMPILED = 1174;\nexports.ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE = 1175;\nexports.ER_KEY_DOES_NOT_EXITS = 1176;\nexports.ER_CHECK_NO_SUCH_TABLE = 1177;\nexports.ER_CHECK_NOT_IMPLEMENTED = 1178;\nexports.ER_CANT_DO_THIS_DURING_AN_TRANSACTION = 1179;\nexports.ER_ERROR_DURING_COMMIT = 1180;\nexports.ER_ERROR_DURING_ROLLBACK = 1181;\nexports.ER_ERROR_DURING_FLUSH_LOGS = 1182;\nexports.ER_ERROR_DURING_CHECKPOINT = 1183;\nexports.ER_NEW_ABORTING_CONNECTION = 1184;\nexports.ER_DUMP_NOT_IMPLEMENTED = 1185;\nexports.ER_FLUSH_MASTER_BINLOG_CLOSED = 1186;\nexports.ER_INDEX_REBUILD = 1187;\nexports.ER_MASTER = 1188;\nexports.ER_MASTER_NET_READ = 1189;\nexports.ER_MASTER_NET_WRITE = 1190;\nexports.ER_FT_MATCHING_KEY_NOT_FOUND = 1191;\nexports.ER_LOCK_OR_ACTIVE_TRANSACTION = 1192;\nexports.ER_UNKNOWN_SYSTEM_VARIABLE = 1193;\nexports.ER_CRASHED_ON_USAGE = 1194;\nexports.ER_CRASHED_ON_REPAIR = 1195;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK = 1196;\nexports.ER_TRANS_CACHE_FULL = 1197;\nexports.ER_SLAVE_MUST_STOP = 1198;\nexports.ER_SLAVE_NOT_RUNNING = 1199;\nexports.ER_BAD_SLAVE = 1200;\nexports.ER_MASTER_INFO = 1201;\nexports.ER_SLAVE_THREAD = 1202;\nexports.ER_TOO_MANY_USER_CONNECTIONS = 1203;\nexports.ER_SET_CONSTANTS_ONLY = 1204;\nexports.ER_LOCK_WAIT_TIMEOUT = 1205;\nexports.ER_LOCK_TABLE_FULL = 1206;\nexports.ER_READ_ONLY_TRANSACTION = 1207;\nexports.ER_DROP_DB_WITH_READ_LOCK = 1208;\nexports.ER_CREATE_DB_WITH_READ_LOCK = 1209;\nexports.ER_WRONG_ARGUMENTS = 1210;\nexports.ER_NO_PERMISSION_TO_CREATE_USER = 1211;\nexports.ER_UNION_TABLES_IN_DIFFERENT_DIR = 1212;\nexports.ER_LOCK_DEADLOCK = 1213;\nexports.ER_TABLE_CANT_HANDLE_FT = 1214;\nexports.ER_CANNOT_ADD_FOREIGN = 1215;\nexports.ER_NO_REFERENCED_ROW = 1216;\nexports.ER_ROW_IS_REFERENCED = 1217;\nexports.ER_CONNECT_TO_MASTER = 1218;\nexports.ER_QUERY_ON_MASTER = 1219;\nexports.ER_ERROR_WHEN_EXECUTING_COMMAND = 1220;\nexports.ER_WRONG_USAGE = 1221;\nexports.ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT = 1222;\nexports.ER_CANT_UPDATE_WITH_READLOCK = 1223;\nexports.ER_MIXING_NOT_ALLOWED = 1224;\nexports.ER_DUP_ARGUMENT = 1225;\nexports.ER_USER_LIMIT_REACHED = 1226;\nexports.ER_SPECIFIC_ACCESS_DENIED_ERROR = 1227;\nexports.ER_LOCAL_VARIABLE = 1228;\nexports.ER_GLOBAL_VARIABLE = 1229;\nexports.ER_NO_DEFAULT = 1230;\nexports.ER_WRONG_VALUE_FOR_VAR = 1231;\nexports.ER_WRONG_TYPE_FOR_VAR = 1232;\nexports.ER_VAR_CANT_BE_READ = 1233;\nexports.ER_CANT_USE_OPTION_HERE = 1234;\nexports.ER_NOT_SUPPORTED_YET = 1235;\nexports.ER_MASTER_FATAL_ERROR_READING_BINLOG = 1236;\nexports.ER_SLAVE_IGNORED_TABLE = 1237;\nexports.ER_INCORRECT_GLOBAL_LOCAL_VAR = 1238;\nexports.ER_WRONG_FK_DEF = 1239;\nexports.ER_KEY_REF_DO_NOT_MATCH_TABLE_REF = 1240;\nexports.ER_OPERAND_COLUMNS = 1241;\nexports.ER_SUBQUERY_NO_1_ROW = 1242;\nexports.ER_UNKNOWN_STMT_HANDLER = 1243;\nexports.ER_CORRUPT_HELP_DB = 1244;\nexports.ER_CYCLIC_REFERENCE = 1245;\nexports.ER_AUTO_CONVERT = 1246;\nexports.ER_ILLEGAL_REFERENCE = 1247;\nexports.ER_DERIVED_MUST_HAVE_ALIAS = 1248;\nexports.ER_SELECT_REDUCED = 1249;\nexports.ER_TABLENAME_NOT_ALLOWED_HERE = 1250;\nexports.ER_NOT_SUPPORTED_AUTH_MODE = 1251;\nexports.ER_SPATIAL_CANT_HAVE_NULL = 1252;\nexports.ER_COLLATION_CHARSET_MISMATCH = 1253;\nexports.ER_SLAVE_WAS_RUNNING = 1254;\nexports.ER_SLAVE_WAS_NOT_RUNNING = 1255;\nexports.ER_TOO_BIG_FOR_UNCOMPRESS = 1256;\nexports.ER_ZLIB_Z_MEM_ERROR = 1257;\nexports.ER_ZLIB_Z_BUF_ERROR = 1258;\nexports.ER_ZLIB_Z_DATA_ERROR = 1259;\nexports.ER_CUT_VALUE_GROUP_CONCAT = 1260;\nexports.ER_WARN_TOO_FEW_RECORDS = 1261;\nexports.ER_WARN_TOO_MANY_RECORDS = 1262;\nexports.ER_WARN_NULL_TO_NOTNULL = 1263;\nexports.ER_WARN_DATA_OUT_OF_RANGE = 1264;\nexports.WARN_DATA_TRUNCATED = 1265;\nexports.ER_WARN_USING_OTHER_HANDLER = 1266;\nexports.ER_CANT_AGGREGATE_2COLLATIONS = 1267;\nexports.ER_DROP_USER = 1268;\nexports.ER_REVOKE_GRANTS = 1269;\nexports.ER_CANT_AGGREGATE_3COLLATIONS = 1270;\nexports.ER_CANT_AGGREGATE_NCOLLATIONS = 1271;\nexports.ER_VARIABLE_IS_NOT_STRUCT = 1272;\nexports.ER_UNKNOWN_COLLATION = 1273;\nexports.ER_SLAVE_IGNORED_SSL_PARAMS = 1274;\nexports.ER_SERVER_IS_IN_SECURE_AUTH_MODE = 1275;\nexports.ER_WARN_FIELD_RESOLVED = 1276;\nexports.ER_BAD_SLAVE_UNTIL_COND = 1277;\nexports.ER_MISSING_SKIP_SLAVE = 1278;\nexports.ER_UNTIL_COND_IGNORED = 1279;\nexports.ER_WRONG_NAME_FOR_INDEX = 1280;\nexports.ER_WRONG_NAME_FOR_CATALOG = 1281;\nexports.ER_WARN_QC_RESIZE = 1282;\nexports.ER_BAD_FT_COLUMN = 1283;\nexports.ER_UNKNOWN_KEY_CACHE = 1284;\nexports.ER_WARN_HOSTNAME_WONT_WORK = 1285;\nexports.ER_UNKNOWN_STORAGE_ENGINE = 1286;\nexports.ER_WARN_DEPRECATED_SYNTAX = 1287;\nexports.ER_NON_UPDATABLE_TABLE = 1288;\nexports.ER_FEATURE_DISABLED = 1289;\nexports.ER_OPTION_PREVENTS_STATEMENT = 1290;\nexports.ER_DUPLICATED_VALUE_IN_TYPE = 1291;\nexports.ER_TRUNCATED_WRONG_VALUE = 1292;\nexports.ER_TOO_MUCH_AUTO_TIMESTAMP_COLS = 1293;\nexports.ER_INVALID_ON_UPDATE = 1294;\nexports.ER_UNSUPPORTED_PS = 1295;\nexports.ER_GET_ERRMSG = 1296;\nexports.ER_GET_TEMPORARY_ERRMSG = 1297;\nexports.ER_UNKNOWN_TIME_ZONE = 1298;\nexports.ER_WARN_INVALID_TIMESTAMP = 1299;\nexports.ER_INVALID_CHARACTER_STRING = 1300;\nexports.ER_WARN_ALLOWED_PACKET_OVERFLOWED = 1301;\nexports.ER_CONFLICTING_DECLARATIONS = 1302;\nexports.ER_SP_NO_RECURSIVE_CREATE = 1303;\nexports.ER_SP_ALREADY_EXISTS = 1304;\nexports.ER_SP_DOES_NOT_EXIST = 1305;\nexports.ER_SP_DROP_FAILED = 1306;\nexports.ER_SP_STORE_FAILED = 1307;\nexports.ER_SP_LILABEL_MISMATCH = 1308;\nexports.ER_SP_LABEL_REDEFINE = 1309;\nexports.ER_SP_LABEL_MISMATCH = 1310;\nexports.ER_SP_UNINIT_VAR = 1311;\nexports.ER_SP_BADSELECT = 1312;\nexports.ER_SP_BADRETURN = 1313;\nexports.ER_SP_BADSTATEMENT = 1314;\nexports.ER_UPDATE_LOG_DEPRECATED_IGNORED = 1315;\nexports.ER_UPDATE_LOG_DEPRECATED_TRANSLATED = 1316;\nexports.ER_QUERY_INTERRUPTED = 1317;\nexports.ER_SP_WRONG_NO_OF_ARGS = 1318;\nexports.ER_SP_COND_MISMATCH = 1319;\nexports.ER_SP_NORETURN = 1320;\nexports.ER_SP_NORETURNEND = 1321;\nexports.ER_SP_BAD_CURSOR_QUERY = 1322;\nexports.ER_SP_BAD_CURSOR_SELECT = 1323;\nexports.ER_SP_CURSOR_MISMATCH = 1324;\nexports.ER_SP_CURSOR_ALREADY_OPEN = 1325;\nexports.ER_SP_CURSOR_NOT_OPEN = 1326;\nexports.ER_SP_UNDECLARED_VAR = 1327;\nexports.ER_SP_WRONG_NO_OF_FETCH_ARGS = 1328;\nexports.ER_SP_FETCH_NO_DATA = 1329;\nexports.ER_SP_DUP_PARAM = 1330;\nexports.ER_SP_DUP_VAR = 1331;\nexports.ER_SP_DUP_COND = 1332;\nexports.ER_SP_DUP_CURS = 1333;\nexports.ER_SP_CANT_ALTER = 1334;\nexports.ER_SP_SUBSELECT_NYI = 1335;\nexports.ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG = 1336;\nexports.ER_SP_VARCOND_AFTER_CURSHNDLR = 1337;\nexports.ER_SP_CURSOR_AFTER_HANDLER = 1338;\nexports.ER_SP_CASE_NOT_FOUND = 1339;\nexports.ER_FPARSER_TOO_BIG_FILE = 1340;\nexports.ER_FPARSER_BAD_HEADER = 1341;\nexports.ER_FPARSER_EOF_IN_COMMENT = 1342;\nexports.ER_FPARSER_ERROR_IN_PARAMETER = 1343;\nexports.ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER = 1344;\nexports.ER_VIEW_NO_EXPLAIN = 1345;\nexports.ER_FRM_UNKNOWN_TYPE = 1346;\nexports.ER_WRONG_OBJECT = 1347;\nexports.ER_NONUPDATEABLE_COLUMN = 1348;\nexports.ER_VIEW_SELECT_DERIVED = 1349;\nexports.ER_VIEW_SELECT_CLAUSE = 1350;\nexports.ER_VIEW_SELECT_VARIABLE = 1351;\nexports.ER_VIEW_SELECT_TMPTABLE = 1352;\nexports.ER_VIEW_WRONG_LIST = 1353;\nexports.ER_WARN_VIEW_MERGE = 1354;\nexports.ER_WARN_VIEW_WITHOUT_KEY = 1355;\nexports.ER_VIEW_INVALID = 1356;\nexports.ER_SP_NO_DROP_SP = 1357;\nexports.ER_SP_GOTO_IN_HNDLR = 1358;\nexports.ER_TRG_ALREADY_EXISTS = 1359;\nexports.ER_TRG_DOES_NOT_EXIST = 1360;\nexports.ER_TRG_ON_VIEW_OR_TEMP_TABLE = 1361;\nexports.ER_TRG_CANT_CHANGE_ROW = 1362;\nexports.ER_TRG_NO_SUCH_ROW_IN_TRG = 1363;\nexports.ER_NO_DEFAULT_FOR_FIELD = 1364;\nexports.ER_DIVISION_BY_ZERO = 1365;\nexports.ER_TRUNCATED_WRONG_VALUE_FOR_FIELD = 1366;\nexports.ER_ILLEGAL_VALUE_FOR_TYPE = 1367;\nexports.ER_VIEW_NONUPD_CHECK = 1368;\nexports.ER_VIEW_CHECK_FAILED = 1369;\nexports.ER_PROCACCESS_DENIED_ERROR = 1370;\nexports.ER_RELAY_LOG_FAIL = 1371;\nexports.ER_PASSWD_LENGTH = 1372;\nexports.ER_UNKNOWN_TARGET_BINLOG = 1373;\nexports.ER_IO_ERR_LOG_INDEX_READ = 1374;\nexports.ER_BINLOG_PURGE_PROHIBITED = 1375;\nexports.ER_FSEEK_FAIL = 1376;\nexports.ER_BINLOG_PURGE_FATAL_ERR = 1377;\nexports.ER_LOG_IN_USE = 1378;\nexports.ER_LOG_PURGE_UNKNOWN_ERR = 1379;\nexports.ER_RELAY_LOG_INIT = 1380;\nexports.ER_NO_BINARY_LOGGING = 1381;\nexports.ER_RESERVED_SYNTAX = 1382;\nexports.ER_WSAS_FAILED = 1383;\nexports.ER_DIFF_GROUPS_PROC = 1384;\nexports.ER_NO_GROUP_FOR_PROC = 1385;\nexports.ER_ORDER_WITH_PROC = 1386;\nexports.ER_LOGGING_PROHIBIT_CHANGING_OF = 1387;\nexports.ER_NO_FILE_MAPPING = 1388;\nexports.ER_WRONG_MAGIC = 1389;\nexports.ER_PS_MANY_PARAM = 1390;\nexports.ER_KEY_PART_0 = 1391;\nexports.ER_VIEW_CHECKSUM = 1392;\nexports.ER_VIEW_MULTIUPDATE = 1393;\nexports.ER_VIEW_NO_INSERT_FIELD_LIST = 1394;\nexports.ER_VIEW_DELETE_MERGE_VIEW = 1395;\nexports.ER_CANNOT_USER = 1396;\nexports.ER_XAER_NOTA = 1397;\nexports.ER_XAER_INVAL = 1398;\nexports.ER_XAER_RMFAIL = 1399;\nexports.ER_XAER_OUTSIDE = 1400;\nexports.ER_XAER_RMERR = 1401;\nexports.ER_XA_RBROLLBACK = 1402;\nexports.ER_NONEXISTING_PROC_GRANT = 1403;\nexports.ER_PROC_AUTO_GRANT_FAIL = 1404;\nexports.ER_PROC_AUTO_REVOKE_FAIL = 1405;\nexports.ER_DATA_TOO_LONG = 1406;\nexports.ER_SP_BAD_SQLSTATE = 1407;\nexports.ER_STARTUP = 1408;\nexports.ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR = 1409;\nexports.ER_CANT_CREATE_USER_WITH_GRANT = 1410;\nexports.ER_WRONG_VALUE_FOR_TYPE = 1411;\nexports.ER_TABLE_DEF_CHANGED = 1412;\nexports.ER_SP_DUP_HANDLER = 1413;\nexports.ER_SP_NOT_VAR_ARG = 1414;\nexports.ER_SP_NO_RETSET = 1415;\nexports.ER_CANT_CREATE_GEOMETRY_OBJECT = 1416;\nexports.ER_FAILED_ROUTINE_BREAK_BINLOG = 1417;\nexports.ER_BINLOG_UNSAFE_ROUTINE = 1418;\nexports.ER_BINLOG_CREATE_ROUTINE_NEED_SUPER = 1419;\nexports.ER_EXEC_STMT_WITH_OPEN_CURSOR = 1420;\nexports.ER_STMT_HAS_NO_OPEN_CURSOR = 1421;\nexports.ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG = 1422;\nexports.ER_NO_DEFAULT_FOR_VIEW_FIELD = 1423;\nexports.ER_SP_NO_RECURSION = 1424;\nexports.ER_TOO_BIG_SCALE = 1425;\nexports.ER_TOO_BIG_PRECISION = 1426;\nexports.ER_M_BIGGER_THAN_D = 1427;\nexports.ER_WRONG_LOCK_OF_SYSTEM_TABLE = 1428;\nexports.ER_CONNECT_TO_FOREIGN_DATA_SOURCE = 1429;\nexports.ER_QUERY_ON_FOREIGN_DATA_SOURCE = 1430;\nexports.ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST = 1431;\nexports.ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE = 1432;\nexports.ER_FOREIGN_DATA_STRING_INVALID = 1433;\nexports.ER_CANT_CREATE_FEDERATED_TABLE = 1434;\nexports.ER_TRG_IN_WRONG_SCHEMA = 1435;\nexports.ER_STACK_OVERRUN_NEED_MORE = 1436;\nexports.ER_TOO_LONG_BODY = 1437;\nexports.ER_WARN_CANT_DROP_DEFAULT_KEYCACHE = 1438;\nexports.ER_TOO_BIG_DISPLAYWIDTH = 1439;\nexports.ER_XAER_DUPID = 1440;\nexports.ER_DATETIME_FUNCTION_OVERFLOW = 1441;\nexports.ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG = 1442;\nexports.ER_VIEW_PREVENT_UPDATE = 1443;\nexports.ER_PS_NO_RECURSION = 1444;\nexports.ER_SP_CANT_SET_AUTOCOMMIT = 1445;\nexports.ER_MALFORMED_DEFINER = 1446;\nexports.ER_VIEW_FRM_NO_USER = 1447;\nexports.ER_VIEW_OTHER_USER = 1448;\nexports.ER_NO_SUCH_USER = 1449;\nexports.ER_FORBID_SCHEMA_CHANGE = 1450;\nexports.ER_ROW_IS_REFERENCED_2 = 1451;\nexports.ER_NO_REFERENCED_ROW_2 = 1452;\nexports.ER_SP_BAD_VAR_SHADOW = 1453;\nexports.ER_TRG_NO_DEFINER = 1454;\nexports.ER_OLD_FILE_FORMAT = 1455;\nexports.ER_SP_RECURSION_LIMIT = 1456;\nexports.ER_SP_PROC_TABLE_CORRUPT = 1457;\nexports.ER_SP_WRONG_NAME = 1458;\nexports.ER_TABLE_NEEDS_UPGRADE = 1459;\nexports.ER_SP_NO_AGGREGATE = 1460;\nexports.ER_MAX_PREPARED_STMT_COUNT_REACHED = 1461;\nexports.ER_VIEW_RECURSIVE = 1462;\nexports.ER_NON_GROUPING_FIELD_USED = 1463;\nexports.ER_TABLE_CANT_HANDLE_SPKEYS = 1464;\nexports.ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA = 1465;\nexports.ER_REMOVED_SPACES = 1466;\nexports.ER_AUTOINC_READ_FAILED = 1467;\nexports.ER_USERNAME = 1468;\nexports.ER_HOSTNAME = 1469;\nexports.ER_WRONG_STRING_LENGTH = 1470;\nexports.ER_NON_INSERTABLE_TABLE = 1471;\nexports.ER_ADMIN_WRONG_MRG_TABLE = 1472;\nexports.ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT = 1473;\nexports.ER_NAME_BECOMES_EMPTY = 1474;\nexports.ER_AMBIGUOUS_FIELD_TERM = 1475;\nexports.ER_FOREIGN_SERVER_EXISTS = 1476;\nexports.ER_FOREIGN_SERVER_DOESNT_EXIST = 1477;\nexports.ER_ILLEGAL_HA_CREATE_OPTION = 1478;\nexports.ER_PARTITION_REQUIRES_VALUES_ERROR = 1479;\nexports.ER_PARTITION_WRONG_VALUES_ERROR = 1480;\nexports.ER_PARTITION_MAXVALUE_ERROR = 1481;\nexports.ER_PARTITION_SUBPARTITION_ERROR = 1482;\nexports.ER_PARTITION_SUBPART_MIX_ERROR = 1483;\nexports.ER_PARTITION_WRONG_NO_PART_ERROR = 1484;\nexports.ER_PARTITION_WRONG_NO_SUBPART_ERROR = 1485;\nexports.ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR = 1486;\nexports.ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR = 1487;\nexports.ER_FIELD_NOT_FOUND_PART_ERROR = 1488;\nexports.ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR = 1489;\nexports.ER_INCONSISTENT_PARTITION_INFO_ERROR = 1490;\nexports.ER_PARTITION_FUNC_NOT_ALLOWED_ERROR = 1491;\nexports.ER_PARTITIONS_MUST_BE_DEFINED_ERROR = 1492;\nexports.ER_RANGE_NOT_INCREASING_ERROR = 1493;\nexports.ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR = 1494;\nexports.ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR = 1495;\nexports.ER_PARTITION_ENTRY_ERROR = 1496;\nexports.ER_MIX_HANDLER_ERROR = 1497;\nexports.ER_PARTITION_NOT_DEFINED_ERROR = 1498;\nexports.ER_TOO_MANY_PARTITIONS_ERROR = 1499;\nexports.ER_SUBPARTITION_ERROR = 1500;\nexports.ER_CANT_CREATE_HANDLER_FILE = 1501;\nexports.ER_BLOB_FIELD_IN_PART_FUNC_ERROR = 1502;\nexports.ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF = 1503;\nexports.ER_NO_PARTS_ERROR = 1504;\nexports.ER_PARTITION_MGMT_ON_NONPARTITIONED = 1505;\nexports.ER_FOREIGN_KEY_ON_PARTITIONED = 1506;\nexports.ER_DROP_PARTITION_NON_EXISTENT = 1507;\nexports.ER_DROP_LAST_PARTITION = 1508;\nexports.ER_COALESCE_ONLY_ON_HASH_PARTITION = 1509;\nexports.ER_REORG_HASH_ONLY_ON_SAME_NO = 1510;\nexports.ER_REORG_NO_PARAM_ERROR = 1511;\nexports.ER_ONLY_ON_RANGE_LIST_PARTITION = 1512;\nexports.ER_ADD_PARTITION_SUBPART_ERROR = 1513;\nexports.ER_ADD_PARTITION_NO_NEW_PARTITION = 1514;\nexports.ER_COALESCE_PARTITION_NO_PARTITION = 1515;\nexports.ER_REORG_PARTITION_NOT_EXIST = 1516;\nexports.ER_SAME_NAME_PARTITION = 1517;\nexports.ER_NO_BINLOG_ERROR = 1518;\nexports.ER_CONSECUTIVE_REORG_PARTITIONS = 1519;\nexports.ER_REORG_OUTSIDE_RANGE = 1520;\nexports.ER_PARTITION_FUNCTION_FAILURE = 1521;\nexports.ER_PART_STATE_ERROR = 1522;\nexports.ER_LIMITED_PART_RANGE = 1523;\nexports.ER_PLUGIN_IS_NOT_LOADED = 1524;\nexports.ER_WRONG_VALUE = 1525;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE = 1526;\nexports.ER_FILEGROUP_OPTION_ONLY_ONCE = 1527;\nexports.ER_CREATE_FILEGROUP_FAILED = 1528;\nexports.ER_DROP_FILEGROUP_FAILED = 1529;\nexports.ER_TABLESPACE_AUTO_EXTEND_ERROR = 1530;\nexports.ER_WRONG_SIZE_NUMBER = 1531;\nexports.ER_SIZE_OVERFLOW_ERROR = 1532;\nexports.ER_ALTER_FILEGROUP_FAILED = 1533;\nexports.ER_BINLOG_ROW_LOGGING_FAILED = 1534;\nexports.ER_BINLOG_ROW_WRONG_TABLE_DEF = 1535;\nexports.ER_BINLOG_ROW_RBR_TO_SBR = 1536;\nexports.ER_EVENT_ALREADY_EXISTS = 1537;\nexports.ER_EVENT_STORE_FAILED = 1538;\nexports.ER_EVENT_DOES_NOT_EXIST = 1539;\nexports.ER_EVENT_CANT_ALTER = 1540;\nexports.ER_EVENT_DROP_FAILED = 1541;\nexports.ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG = 1542;\nexports.ER_EVENT_ENDS_BEFORE_STARTS = 1543;\nexports.ER_EVENT_EXEC_TIME_IN_THE_PAST = 1544;\nexports.ER_EVENT_OPEN_TABLE_FAILED = 1545;\nexports.ER_EVENT_NEITHER_M_EXPR_NOR_M_AT = 1546;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED = 1547;\nexports.ER_CANNOT_LOAD_FROM_TABLE = 1548;\nexports.ER_EVENT_CANNOT_DELETE = 1549;\nexports.ER_EVENT_COMPILE_ERROR = 1550;\nexports.ER_EVENT_SAME_NAME = 1551;\nexports.ER_EVENT_DATA_TOO_LONG = 1552;\nexports.ER_DROP_INDEX_FK = 1553;\nexports.ER_WARN_DEPRECATED_SYNTAX_WITH_VER = 1554;\nexports.ER_CANT_WRITE_LOCK_LOG_TABLE = 1555;\nexports.ER_CANT_LOCK_LOG_TABLE = 1556;\nexports.ER_FOREIGN_DUPLICATE_KEY = 1557;\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE = 1558;\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR = 1559;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1560;\nexports.ER_NDB_CANT_SWITCH_BINLOG_FORMAT = 1561;\nexports.ER_PARTITION_NO_TEMPORARY = 1562;\nexports.ER_PARTITION_CONST_DOMAIN_ERROR = 1563;\nexports.ER_PARTITION_FUNCTION_IS_NOT_ALLOWED = 1564;\nexports.ER_DDL_LOG_ERROR = 1565;\nexports.ER_NULL_IN_VALUES_LESS_THAN = 1566;\nexports.ER_WRONG_PARTITION_NAME = 1567;\nexports.ER_CANT_CHANGE_TX_CHARACTERISTICS = 1568;\nexports.ER_DUP_ENTRY_AUTOINCREMENT_CASE = 1569;\nexports.ER_EVENT_MODIFY_QUEUE_ERROR = 1570;\nexports.ER_EVENT_SET_VAR_ERROR = 1571;\nexports.ER_PARTITION_MERGE_ERROR = 1572;\nexports.ER_CANT_ACTIVATE_LOG = 1573;\nexports.ER_RBR_NOT_AVAILABLE = 1574;\nexports.ER_BASE64_DECODE_ERROR = 1575;\nexports.ER_EVENT_RECURSION_FORBIDDEN = 1576;\nexports.ER_EVENTS_DB_ERROR = 1577;\nexports.ER_ONLY_INTEGERS_ALLOWED = 1578;\nexports.ER_UNSUPORTED_LOG_ENGINE = 1579;\nexports.ER_BAD_LOG_STATEMENT = 1580;\nexports.ER_CANT_RENAME_LOG_TABLE = 1581;\nexports.ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT = 1582;\nexports.ER_WRONG_PARAMETERS_TO_NATIVE_FCT = 1583;\nexports.ER_WRONG_PARAMETERS_TO_STORED_FCT = 1584;\nexports.ER_NATIVE_FCT_NAME_COLLISION = 1585;\nexports.ER_DUP_ENTRY_WITH_KEY_NAME = 1586;\nexports.ER_BINLOG_PURGE_EMFILE = 1587;\nexports.ER_EVENT_CANNOT_CREATE_IN_THE_PAST = 1588;\nexports.ER_EVENT_CANNOT_ALTER_IN_THE_PAST = 1589;\nexports.ER_SLAVE_INCIDENT = 1590;\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT = 1591;\nexports.ER_BINLOG_UNSAFE_STATEMENT = 1592;\nexports.ER_SLAVE_FATAL_ERROR = 1593;\nexports.ER_SLAVE_RELAY_LOG_READ_FAILURE = 1594;\nexports.ER_SLAVE_RELAY_LOG_WRITE_FAILURE = 1595;\nexports.ER_SLAVE_CREATE_EVENT_FAILURE = 1596;\nexports.ER_SLAVE_MASTER_COM_FAILURE = 1597;\nexports.ER_BINLOG_LOGGING_IMPOSSIBLE = 1598;\nexports.ER_VIEW_NO_CREATION_CTX = 1599;\nexports.ER_VIEW_INVALID_CREATION_CTX = 1600;\nexports.ER_SR_INVALID_CREATION_CTX = 1601;\nexports.ER_TRG_CORRUPTED_FILE = 1602;\nexports.ER_TRG_NO_CREATION_CTX = 1603;\nexports.ER_TRG_INVALID_CREATION_CTX = 1604;\nexports.ER_EVENT_INVALID_CREATION_CTX = 1605;\nexports.ER_TRG_CANT_OPEN_TABLE = 1606;\nexports.ER_CANT_CREATE_SROUTINE = 1607;\nexports.ER_NEVER_USED = 1608;\nexports.ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT = 1609;\nexports.ER_SLAVE_CORRUPT_EVENT = 1610;\nexports.ER_LOAD_DATA_INVALID_COLUMN = 1611;\nexports.ER_LOG_PURGE_NO_FILE = 1612;\nexports.ER_XA_RBTIMEOUT = 1613;\nexports.ER_XA_RBDEADLOCK = 1614;\nexports.ER_NEED_REPREPARE = 1615;\nexports.ER_DELAYED_NOT_SUPPORTED = 1616;\nexports.WARN_NO_MASTER_INFO = 1617;\nexports.WARN_OPTION_IGNORED = 1618;\nexports.WARN_PLUGIN_DELETE_BUILTIN = 1619;\nexports.WARN_PLUGIN_BUSY = 1620;\nexports.ER_VARIABLE_IS_READONLY = 1621;\nexports.ER_WARN_ENGINE_TRANSACTION_ROLLBACK = 1622;\nexports.ER_SLAVE_HEARTBEAT_FAILURE = 1623;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE = 1624;\nexports.ER_NDB_REPLICATION_SCHEMA_ERROR = 1625;\nexports.ER_CONFLICT_FN_PARSE_ERROR = 1626;\nexports.ER_EXCEPTIONS_WRITE_ERROR = 1627;\nexports.ER_TOO_LONG_TABLE_COMMENT = 1628;\nexports.ER_TOO_LONG_FIELD_COMMENT = 1629;\nexports.ER_FUNC_INEXISTENT_NAME_COLLISION = 1630;\nexports.ER_DATABASE_NAME = 1631;\nexports.ER_TABLE_NAME = 1632;\nexports.ER_PARTITION_NAME = 1633;\nexports.ER_SUBPARTITION_NAME = 1634;\nexports.ER_TEMPORARY_NAME = 1635;\nexports.ER_RENAMED_NAME = 1636;\nexports.ER_TOO_MANY_CONCURRENT_TRXS = 1637;\nexports.WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED = 1638;\nexports.ER_DEBUG_SYNC_TIMEOUT = 1639;\nexports.ER_DEBUG_SYNC_HIT_LIMIT = 1640;\nexports.ER_DUP_SIGNAL_SET = 1641;\nexports.ER_SIGNAL_WARN = 1642;\nexports.ER_SIGNAL_NOT_FOUND = 1643;\nexports.ER_SIGNAL_EXCEPTION = 1644;\nexports.ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER = 1645;\nexports.ER_SIGNAL_BAD_CONDITION_TYPE = 1646;\nexports.WARN_COND_ITEM_TRUNCATED = 1647;\nexports.ER_COND_ITEM_TOO_LONG = 1648;\nexports.ER_UNKNOWN_LOCALE = 1649;\nexports.ER_SLAVE_IGNORE_SERVER_IDS = 1650;\nexports.ER_QUERY_CACHE_DISABLED = 1651;\nexports.ER_SAME_NAME_PARTITION_FIELD = 1652;\nexports.ER_PARTITION_COLUMN_LIST_ERROR = 1653;\nexports.ER_WRONG_TYPE_COLUMN_VALUE_ERROR = 1654;\nexports.ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR = 1655;\nexports.ER_MAXVALUE_IN_VALUES_IN = 1656;\nexports.ER_TOO_MANY_VALUES_ERROR = 1657;\nexports.ER_ROW_SINGLE_PARTITION_FIELD_ERROR = 1658;\nexports.ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD = 1659;\nexports.ER_PARTITION_FIELDS_TOO_LONG = 1660;\nexports.ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE = 1661;\nexports.ER_BINLOG_ROW_MODE_AND_STMT_ENGINE = 1662;\nexports.ER_BINLOG_UNSAFE_AND_STMT_ENGINE = 1663;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE = 1664;\nexports.ER_BINLOG_STMT_MODE_AND_ROW_ENGINE = 1665;\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_MODE = 1666;\nexports.ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1667;\nexports.ER_BINLOG_UNSAFE_LIMIT = 1668;\nexports.ER_BINLOG_UNSAFE_INSERT_DELAYED = 1669;\nexports.ER_BINLOG_UNSAFE_SYSTEM_TABLE = 1670;\nexports.ER_BINLOG_UNSAFE_AUTOINC_COLUMNS = 1671;\nexports.ER_BINLOG_UNSAFE_UDF = 1672;\nexports.ER_BINLOG_UNSAFE_SYSTEM_VARIABLE = 1673;\nexports.ER_BINLOG_UNSAFE_SYSTEM_FUNCTION = 1674;\nexports.ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS = 1675;\nexports.ER_MESSAGE_AND_STATEMENT = 1676;\nexports.ER_SLAVE_CONVERSION_FAILED = 1677;\nexports.ER_SLAVE_CANT_CREATE_CONVERSION = 1678;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1679;\nexports.ER_PATH_LENGTH = 1680;\nexports.ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT = 1681;\nexports.ER_WRONG_NATIVE_TABLE_STRUCTURE = 1682;\nexports.ER_WRONG_PERFSCHEMA_USAGE = 1683;\nexports.ER_WARN_I_S_SKIPPED_TABLE = 1684;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1685;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1686;\nexports.ER_SPATIAL_MUST_HAVE_GEOM_COL = 1687;\nexports.ER_TOO_LONG_INDEX_COMMENT = 1688;\nexports.ER_LOCK_ABORTED = 1689;\nexports.ER_DATA_OUT_OF_RANGE = 1690;\nexports.ER_WRONG_SPVAR_TYPE_IN_LIMIT = 1691;\nexports.ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1692;\nexports.ER_BINLOG_UNSAFE_MIXED_STATEMENT = 1693;\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1694;\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1695;\nexports.ER_FAILED_READ_FROM_PAR_FILE = 1696;\nexports.ER_VALUES_IS_NOT_INT_TYPE_ERROR = 1697;\nexports.ER_ACCESS_DENIED_NO_PASSWORD_ERROR = 1698;\nexports.ER_SET_PASSWORD_AUTH_PLUGIN = 1699;\nexports.ER_GRANT_PLUGIN_USER_EXISTS = 1700;\nexports.ER_TRUNCATE_ILLEGAL_FK = 1701;\nexports.ER_PLUGIN_IS_PERMANENT = 1702;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN = 1703;\nexports.ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX = 1704;\nexports.ER_STMT_CACHE_FULL = 1705;\nexports.ER_MULTI_UPDATE_KEY_CONFLICT = 1706;\nexports.ER_TABLE_NEEDS_REBUILD = 1707;\nexports.WARN_OPTION_BELOW_LIMIT = 1708;\nexports.ER_INDEX_COLUMN_TOO_LONG = 1709;\nexports.ER_ERROR_IN_TRIGGER_BODY = 1710;\nexports.ER_ERROR_IN_UNKNOWN_TRIGGER_BODY = 1711;\nexports.ER_INDEX_CORRUPT = 1712;\nexports.ER_UNDO_RECORD_TOO_BIG = 1713;\nexports.ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT = 1714;\nexports.ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE = 1715;\nexports.ER_BINLOG_UNSAFE_REPLACE_SELECT = 1716;\nexports.ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT = 1717;\nexports.ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT = 1718;\nexports.ER_BINLOG_UNSAFE_UPDATE_IGNORE = 1719;\nexports.ER_PLUGIN_NO_UNINSTALL = 1720;\nexports.ER_PLUGIN_NO_INSTALL = 1721;\nexports.ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT = 1722;\nexports.ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC = 1723;\nexports.ER_BINLOG_UNSAFE_INSERT_TWO_KEYS = 1724;\nexports.ER_TABLE_IN_FK_CHECK = 1725;\nexports.ER_UNSUPPORTED_ENGINE = 1726;\nexports.ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST = 1727;\nexports.ER_CANNOT_LOAD_FROM_TABLE_V2 = 1728;\nexports.ER_MASTER_DELAY_VALUE_OUT_OF_RANGE = 1729;\nexports.ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT = 1730;\nexports.ER_PARTITION_EXCHANGE_DIFFERENT_OPTION = 1731;\nexports.ER_PARTITION_EXCHANGE_PART_TABLE = 1732;\nexports.ER_PARTITION_EXCHANGE_TEMP_TABLE = 1733;\nexports.ER_PARTITION_INSTEAD_OF_SUBPARTITION = 1734;\nexports.ER_UNKNOWN_PARTITION = 1735;\nexports.ER_TABLES_DIFFERENT_METADATA = 1736;\nexports.ER_ROW_DOES_NOT_MATCH_PARTITION = 1737;\nexports.ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX = 1738;\nexports.ER_WARN_INDEX_NOT_APPLICABLE = 1739;\nexports.ER_PARTITION_EXCHANGE_FOREIGN_KEY = 1740;\nexports.ER_NO_SUCH_KEY_VALUE = 1741;\nexports.ER_RPL_INFO_DATA_TOO_LONG = 1742;\nexports.ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE = 1743;\nexports.ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE = 1744;\nexports.ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX = 1745;\nexports.ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT = 1746;\nexports.ER_PARTITION_CLAUSE_ON_NONPARTITIONED = 1747;\nexports.ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET = 1748;\nexports.ER_NO_SUCH_PARTITION = 1749;\nexports.ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE = 1750;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE = 1751;\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE = 1752;\nexports.ER_MTS_FEATURE_IS_NOT_SUPPORTED = 1753;\nexports.ER_MTS_UPDATED_DBS_GREATER_MAX = 1754;\nexports.ER_MTS_CANT_PARALLEL = 1755;\nexports.ER_MTS_INCONSISTENT_DATA = 1756;\nexports.ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING = 1757;\nexports.ER_DA_INVALID_CONDITION_NUMBER = 1758;\nexports.ER_INSECURE_PLAIN_TEXT = 1759;\nexports.ER_INSECURE_CHANGE_MASTER = 1760;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO = 1761;\nexports.ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO = 1762;\nexports.ER_SQLTHREAD_WITH_SECURE_SLAVE = 1763;\nexports.ER_TABLE_HAS_NO_FT = 1764;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER = 1765;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION = 1766;\nexports.ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST = 1767;\nexports.ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION_WHEN_GTID_NEXT_LIST_IS_NULL = 1768;\nexports.ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION = 1769;\nexports.ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL = 1770;\nexports.ER_SKIPPING_LOGGED_TRANSACTION = 1771;\nexports.ER_MALFORMED_GTID_SET_SPECIFICATION = 1772;\nexports.ER_MALFORMED_GTID_SET_ENCODING = 1773;\nexports.ER_MALFORMED_GTID_SPECIFICATION = 1774;\nexports.ER_GNO_EXHAUSTED = 1775;\nexports.ER_BAD_SLAVE_AUTO_POSITION = 1776;\nexports.ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON = 1777;\nexports.ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET = 1778;\nexports.ER_GTID_MODE_2_OR_3_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON = 1779;\nexports.ER_GTID_MODE_REQUIRES_BINLOG = 1780;\nexports.ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF = 1781;\nexports.ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON = 1782;\nexports.ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF = 1783;\nexports.ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF = 1784;\nexports.ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE = 1785;\nexports.ER_GTID_UNSAFE_CREATE_SELECT = 1786;\nexports.ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION = 1787;\nexports.ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME = 1788;\nexports.ER_MASTER_HAS_PURGED_REQUIRED_GTIDS = 1789;\nexports.ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID = 1790;\nexports.ER_UNKNOWN_EXPLAIN_FORMAT = 1791;\nexports.ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION = 1792;\nexports.ER_TOO_LONG_TABLE_PARTITION_COMMENT = 1793;\nexports.ER_SLAVE_CONFIGURATION = 1794;\nexports.ER_INNODB_FT_LIMIT = 1795;\nexports.ER_INNODB_NO_FT_TEMP_TABLE = 1796;\nexports.ER_INNODB_FT_WRONG_DOCID_COLUMN = 1797;\nexports.ER_INNODB_FT_WRONG_DOCID_INDEX = 1798;\nexports.ER_INNODB_ONLINE_LOG_TOO_BIG = 1799;\nexports.ER_UNKNOWN_ALTER_ALGORITHM = 1800;\nexports.ER_UNKNOWN_ALTER_LOCK = 1801;\nexports.ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS = 1802;\nexports.ER_MTS_RECOVERY_FAILURE = 1803;\nexports.ER_MTS_RESET_WORKERS = 1804;\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 = 1805;\nexports.ER_SLAVE_SILENT_RETRY_TRANSACTION = 1806;\nexports.ER_DISCARD_FK_CHECKS_RUNNING = 1807;\nexports.ER_TABLE_SCHEMA_MISMATCH = 1808;\nexports.ER_TABLE_IN_SYSTEM_TABLESPACE = 1809;\nexports.ER_IO_READ_ERROR = 1810;\nexports.ER_IO_WRITE_ERROR = 1811;\nexports.ER_TABLESPACE_MISSING = 1812;\nexports.ER_TABLESPACE_EXISTS = 1813;\nexports.ER_TABLESPACE_DISCARDED = 1814;\nexports.ER_INTERNAL_ERROR = 1815;\nexports.ER_INNODB_IMPORT_ERROR = 1816;\nexports.ER_INNODB_INDEX_CORRUPT = 1817;\nexports.ER_INVALID_YEAR_COLUMN_LENGTH = 1818;\nexports.ER_NOT_VALID_PASSWORD = 1819;\nexports.ER_MUST_CHANGE_PASSWORD = 1820;\nexports.ER_FK_NO_INDEX_CHILD = 1821;\nexports.ER_FK_NO_INDEX_PARENT = 1822;\nexports.ER_FK_FAIL_ADD_SYSTEM = 1823;\nexports.ER_FK_CANNOT_OPEN_PARENT = 1824;\nexports.ER_FK_INCORRECT_OPTION = 1825;\nexports.ER_FK_DUP_NAME = 1826;\nexports.ER_PASSWORD_FORMAT = 1827;\nexports.ER_FK_COLUMN_CANNOT_DROP = 1828;\nexports.ER_FK_COLUMN_CANNOT_DROP_CHILD = 1829;\nexports.ER_FK_COLUMN_NOT_NULL = 1830;\nexports.ER_DUP_INDEX = 1831;\nexports.ER_FK_COLUMN_CANNOT_CHANGE = 1832;\nexports.ER_FK_COLUMN_CANNOT_CHANGE_CHILD = 1833;\nexports.ER_FK_CANNOT_DELETE_PARENT = 1834;\nexports.ER_MALFORMED_PACKET = 1835;\nexports.ER_READ_ONLY_MODE = 1836;\nexports.ER_GTID_NEXT_TYPE_UNDEFINED_GROUP = 1837;\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SP = 1838;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF = 1839;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY = 1840;\nexports.ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY = 1841;\nexports.ER_GTID_PURGED_WAS_CHANGED = 1842;\nexports.ER_GTID_EXECUTED_WAS_CHANGED = 1843;\nexports.ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES = 1844;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED = 1845;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON = 1846;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY = 1847;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION = 1848;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME = 1849;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE = 1850;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK = 1851;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_IGNORE = 1852;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK = 1853;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC = 1854;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS = 1855;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS = 1856;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS = 1857;\nexports.ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE = 1858;\nexports.ER_DUP_UNKNOWN_IN_INDEX = 1859;\nexports.ER_IDENT_CAUSES_TOO_LONG_PATH = 1860;\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL = 1861;\nexports.ER_MUST_CHANGE_PASSWORD_LOGIN = 1862;\nexports.ER_ROW_IN_WRONG_PARTITION = 1863;\nexports.ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX = 1864;\nexports.ER_INNODB_NO_FT_USES_PARSER = 1865;\nexports.ER_BINLOG_LOGICAL_CORRUPTION = 1866;\nexports.ER_WARN_PURGE_LOG_IN_USE = 1867;\nexports.ER_WARN_PURGE_LOG_IS_ACTIVE = 1868;\nexports.ER_AUTO_INCREMENT_CONFLICT = 1869;\nexports.WARN_ON_BLOCKHOLE_IN_RBR = 1870;\nexports.ER_SLAVE_MI_INIT_REPOSITORY = 1871;\nexports.ER_SLAVE_RLI_INIT_REPOSITORY = 1872;\nexports.ER_ACCESS_DENIED_CHANGE_USER_ERROR = 1873;\nexports.ER_INNODB_READ_ONLY = 1874;\nexports.ER_STOP_SLAVE_SQL_THREAD_TIMEOUT = 1875;\nexports.ER_STOP_SLAVE_IO_THREAD_TIMEOUT = 1876;\nexports.ER_TABLE_CORRUPT = 1877;\nexports.ER_TEMP_FILE_WRITE_FAILURE = 1878;\nexports.ER_INNODB_FT_AUX_NOT_HEX_ID = 1879;\nexports.ER_OLD_TEMPORALS_UPGRADED = 1880;\nexports.ER_INNODB_FORCED_RECOVERY = 1881;\nexports.ER_AES_INVALID_IV = 1882;\n\n// Lookup-by-number table\nexports[1] = 'EE_CANTCREATEFILE';\nexports[2] = 'EE_READ';\nexports[3] = 'EE_WRITE';\nexports[4] = 'EE_BADCLOSE';\nexports[5] = 'EE_OUTOFMEMORY';\nexports[6] = 'EE_DELETE';\nexports[7] = 'EE_LINK';\nexports[9] = 'EE_EOFERR';\nexports[10] = 'EE_CANTLOCK';\nexports[11] = 'EE_CANTUNLOCK';\nexports[12] = 'EE_DIR';\nexports[13] = 'EE_STAT';\nexports[14] = 'EE_CANT_CHSIZE';\nexports[15] = 'EE_CANT_OPEN_STREAM';\nexports[16] = 'EE_GETWD';\nexports[17] = 'EE_SETWD';\nexports[18] = 'EE_LINK_WARNING';\nexports[19] = 'EE_OPEN_WARNING';\nexports[20] = 'EE_DISK_FULL';\nexports[21] = 'EE_CANT_MKDIR';\nexports[22] = 'EE_UNKNOWN_CHARSET';\nexports[23] = 'EE_OUT_OF_FILERESOURCES';\nexports[24] = 'EE_CANT_READLINK';\nexports[25] = 'EE_CANT_SYMLINK';\nexports[26] = 'EE_REALPATH';\nexports[27] = 'EE_SYNC';\nexports[28] = 'EE_UNKNOWN_COLLATION';\nexports[29] = 'EE_FILENOTFOUND';\nexports[30] = 'EE_FILE_NOT_CLOSED';\nexports[31] = 'EE_CHANGE_OWNERSHIP';\nexports[32] = 'EE_CHANGE_PERMISSIONS';\nexports[33] = 'EE_CANT_SEEK';\nexports[120] = 'HA_ERR_KEY_NOT_FOUND';\nexports[121] = 'HA_ERR_FOUND_DUPP_KEY';\nexports[122] = 'HA_ERR_INTERNAL_ERROR';\nexports[123] = 'HA_ERR_RECORD_CHANGED';\nexports[124] = 'HA_ERR_WRONG_INDEX';\nexports[126] = 'HA_ERR_CRASHED';\nexports[127] = 'HA_ERR_WRONG_IN_RECORD';\nexports[128] = 'HA_ERR_OUT_OF_MEM';\nexports[130] = 'HA_ERR_NOT_A_TABLE';\nexports[131] = 'HA_ERR_WRONG_COMMAND';\nexports[132] = 'HA_ERR_OLD_FILE';\nexports[133] = 'HA_ERR_NO_ACTIVE_RECORD';\nexports[134] = 'HA_ERR_RECORD_DELETED';\nexports[135] = 'HA_ERR_RECORD_FILE_FULL';\nexports[136] = 'HA_ERR_INDEX_FILE_FULL';\nexports[137] = 'HA_ERR_END_OF_FILE';\nexports[138] = 'HA_ERR_UNSUPPORTED';\nexports[139] = 'HA_ERR_TO_BIG_ROW';\nexports[140] = 'HA_WRONG_CREATE_OPTION';\nexports[141] = 'HA_ERR_FOUND_DUPP_UNIQUE';\nexports[142] = 'HA_ERR_UNKNOWN_CHARSET';\nexports[143] = 'HA_ERR_WRONG_MRG_TABLE_DEF';\nexports[144] = 'HA_ERR_CRASHED_ON_REPAIR';\nexports[145] = 'HA_ERR_CRASHED_ON_USAGE';\nexports[146] = 'HA_ERR_LOCK_WAIT_TIMEOUT';\nexports[147] = 'HA_ERR_LOCK_TABLE_FULL';\nexports[148] = 'HA_ERR_READ_ONLY_TRANSACTION';\nexports[149] = 'HA_ERR_LOCK_DEADLOCK';\nexports[150] = 'HA_ERR_CANNOT_ADD_FOREIGN';\nexports[151] = 'HA_ERR_NO_REFERENCED_ROW';\nexports[152] = 'HA_ERR_ROW_IS_REFERENCED';\nexports[153] = 'HA_ERR_NO_SAVEPOINT';\nexports[154] = 'HA_ERR_NON_UNIQUE_BLOCK_SIZE';\nexports[155] = 'HA_ERR_NO_SUCH_TABLE';\nexports[156] = 'HA_ERR_TABLE_EXIST';\nexports[157] = 'HA_ERR_NO_CONNECTION';\nexports[158] = 'HA_ERR_NULL_IN_SPATIAL';\nexports[159] = 'HA_ERR_TABLE_DEF_CHANGED';\nexports[160] = 'HA_ERR_NO_PARTITION_FOUND';\nexports[161] = 'HA_ERR_RBR_LOGGING_FAILED';\nexports[162] = 'HA_ERR_DROP_INDEX_FK';\nexports[163] = 'HA_ERR_FOREIGN_DUPLICATE_KEY';\nexports[164] = 'HA_ERR_TABLE_NEEDS_UPGRADE';\nexports[165] = 'HA_ERR_TABLE_READONLY';\nexports[166] = 'HA_ERR_AUTOINC_READ_FAILED';\nexports[167] = 'HA_ERR_AUTOINC_ERANGE';\nexports[168] = 'HA_ERR_GENERIC';\nexports[169] = 'HA_ERR_RECORD_IS_THE_SAME';\nexports[170] = 'HA_ERR_LOGGING_IMPOSSIBLE';\nexports[171] = 'HA_ERR_CORRUPT_EVENT';\nexports[172] = 'HA_ERR_NEW_FILE';\nexports[173] = 'HA_ERR_ROWS_EVENT_APPLY';\nexports[174] = 'HA_ERR_INITIALIZATION';\nexports[175] = 'HA_ERR_FILE_TOO_SHORT';\nexports[176] = 'HA_ERR_WRONG_CRC';\nexports[177] = 'HA_ERR_TOO_MANY_CONCURRENT_TRXS';\nexports[178] = 'HA_ERR_NOT_IN_LOCK_PARTITIONS';\nexports[179] = 'HA_ERR_INDEX_COL_TOO_LONG';\nexports[180] = 'HA_ERR_INDEX_CORRUPT';\nexports[181] = 'HA_ERR_UNDO_REC_TOO_BIG';\nexports[182] = 'HA_FTS_INVALID_DOCID';\nexports[183] = 'HA_ERR_TABLE_IN_FK_CHECK';\nexports[184] = 'HA_ERR_TABLESPACE_EXISTS';\nexports[185] = 'HA_ERR_TOO_MANY_FIELDS';\nexports[186] = 'HA_ERR_ROW_IN_WRONG_PARTITION';\nexports[187] = 'HA_ERR_INNODB_READ_ONLY';\nexports[188] = 'HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT';\nexports[189] = 'HA_ERR_TEMP_FILE_WRITE_FAILURE';\nexports[190] = 'HA_ERR_INNODB_FORCED_RECOVERY';\nexports[191] = 'HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE';\nexports[1000] = 'ER_HASHCHK';\nexports[1001] = 'ER_NISAMCHK';\nexports[1002] = 'ER_NO';\nexports[1003] = 'ER_YES';\nexports[1004] = 'ER_CANT_CREATE_FILE';\nexports[1005] = 'ER_CANT_CREATE_TABLE';\nexports[1006] = 'ER_CANT_CREATE_DB';\nexports[1007] = 'ER_DB_CREATE_EXISTS';\nexports[1008] = 'ER_DB_DROP_EXISTS';\nexports[1009] = 'ER_DB_DROP_DELETE';\nexports[1010] = 'ER_DB_DROP_RMDIR';\nexports[1011] = 'ER_CANT_DELETE_FILE';\nexports[1012] = 'ER_CANT_FIND_SYSTEM_REC';\nexports[1013] = 'ER_CANT_GET_STAT';\nexports[1014] = 'ER_CANT_GET_WD';\nexports[1015] = 'ER_CANT_LOCK';\nexports[1016] = 'ER_CANT_OPEN_FILE';\nexports[1017] = 'ER_FILE_NOT_FOUND';\nexports[1018] = 'ER_CANT_READ_DIR';\nexports[1019] = 'ER_CANT_SET_WD';\nexports[1020] = 'ER_CHECKREAD';\nexports[1021] = 'ER_DISK_FULL';\nexports[1022] = 'ER_DUP_KEY';\nexports[1023] = 'ER_ERROR_ON_CLOSE';\nexports[1024] = 'ER_ERROR_ON_READ';\nexports[1025] = 'ER_ERROR_ON_RENAME';\nexports[1026] = 'ER_ERROR_ON_WRITE';\nexports[1027] = 'ER_FILE_USED';\nexports[1028] = 'ER_FILSORT_ABORT';\nexports[1029] = 'ER_FORM_NOT_FOUND';\nexports[1030] = 'ER_GET_ERRNO';\nexports[1031] = 'ER_ILLEGAL_HA';\nexports[1032] = 'ER_KEY_NOT_FOUND';\nexports[1033] = 'ER_NOT_FORM_FILE';\nexports[1034] = 'ER_NOT_KEYFILE';\nexports[1035] = 'ER_OLD_KEYFILE';\nexports[1036] = 'ER_OPEN_AS_READONLY';\nexports[1037] = 'ER_OUTOFMEMORY';\nexports[1038] = 'ER_OUT_OF_SORTMEMORY';\nexports[1039] = 'ER_UNEXPECTED_EOF';\nexports[1040] = 'ER_CON_COUNT_ERROR';\nexports[1041] = 'ER_OUT_OF_RESOURCES';\nexports[1042] = 'ER_BAD_HOST_ERROR';\nexports[1043] = 'ER_HANDSHAKE_ERROR';\nexports[1044] = 'ER_DBACCESS_DENIED_ERROR';\nexports[1045] = 'ER_ACCESS_DENIED_ERROR';\nexports[1046] = 'ER_NO_DB_ERROR';\nexports[1047] = 'ER_UNKNOWN_COM_ERROR';\nexports[1048] = 'ER_BAD_NULL_ERROR';\nexports[1049] = 'ER_BAD_DB_ERROR';\nexports[1050] = 'ER_TABLE_EXISTS_ERROR';\nexports[1051] = 'ER_BAD_TABLE_ERROR';\nexports[1052] = 'ER_NON_UNIQ_ERROR';\nexports[1053] = 'ER_SERVER_SHUTDOWN';\nexports[1054] = 'ER_BAD_FIELD_ERROR';\nexports[1055] = 'ER_WRONG_FIELD_WITH_GROUP';\nexports[1056] = 'ER_WRONG_GROUP_FIELD';\nexports[1057] = 'ER_WRONG_SUM_SELECT';\nexports[1058] = 'ER_WRONG_VALUE_COUNT';\nexports[1059] = 'ER_TOO_LONG_IDENT';\nexports[1060] = 'ER_DUP_FIELDNAME';\nexports[1061] = 'ER_DUP_KEYNAME';\nexports[1062] = 'ER_DUP_ENTRY';\nexports[1063] = 'ER_WRONG_FIELD_SPEC';\nexports[1064] = 'ER_PARSE_ERROR';\nexports[1065] = 'ER_EMPTY_QUERY';\nexports[1066] = 'ER_NONUNIQ_TABLE';\nexports[1067] = 'ER_INVALID_DEFAULT';\nexports[1068] = 'ER_MULTIPLE_PRI_KEY';\nexports[1069] = 'ER_TOO_MANY_KEYS';\nexports[1070] = 'ER_TOO_MANY_KEY_PARTS';\nexports[1071] = 'ER_TOO_LONG_KEY';\nexports[1072] = 'ER_KEY_COLUMN_DOES_NOT_EXITS';\nexports[1073] = 'ER_BLOB_USED_AS_KEY';\nexports[1074] = 'ER_TOO_BIG_FIELDLENGTH';\nexports[1075] = 'ER_WRONG_AUTO_KEY';\nexports[1076] = 'ER_READY';\nexports[1077] = 'ER_NORMAL_SHUTDOWN';\nexports[1078] = 'ER_GOT_SIGNAL';\nexports[1079] = 'ER_SHUTDOWN_COMPLETE';\nexports[1080] = 'ER_FORCING_CLOSE';\nexports[1081] = 'ER_IPSOCK_ERROR';\nexports[1082] = 'ER_NO_SUCH_INDEX';\nexports[1083] = 'ER_WRONG_FIELD_TERMINATORS';\nexports[1084] = 'ER_BLOBS_AND_NO_TERMINATED';\nexports[1085] = 'ER_TEXTFILE_NOT_READABLE';\nexports[1086] = 'ER_FILE_EXISTS_ERROR';\nexports[1087] = 'ER_LOAD_INFO';\nexports[1088] = 'ER_ALTER_INFO';\nexports[1089] = 'ER_WRONG_SUB_KEY';\nexports[1090] = 'ER_CANT_REMOVE_ALL_FIELDS';\nexports[1091] = 'ER_CANT_DROP_FIELD_OR_KEY';\nexports[1092] = 'ER_INSERT_INFO';\nexports[1093] = 'ER_UPDATE_TABLE_USED';\nexports[1094] = 'ER_NO_SUCH_THREAD';\nexports[1095] = 'ER_KILL_DENIED_ERROR';\nexports[1096] = 'ER_NO_TABLES_USED';\nexports[1097] = 'ER_TOO_BIG_SET';\nexports[1098] = 'ER_NO_UNIQUE_LOGFILE';\nexports[1099] = 'ER_TABLE_NOT_LOCKED_FOR_WRITE';\nexports[1100] = 'ER_TABLE_NOT_LOCKED';\nexports[1101] = 'ER_BLOB_CANT_HAVE_DEFAULT';\nexports[1102] = 'ER_WRONG_DB_NAME';\nexports[1103] = 'ER_WRONG_TABLE_NAME';\nexports[1104] = 'ER_TOO_BIG_SELECT';\nexports[1105] = 'ER_UNKNOWN_ERROR';\nexports[1106] = 'ER_UNKNOWN_PROCEDURE';\nexports[1107] = 'ER_WRONG_PARAMCOUNT_TO_PROCEDURE';\nexports[1108] = 'ER_WRONG_PARAMETERS_TO_PROCEDURE';\nexports[1109] = 'ER_UNKNOWN_TABLE';\nexports[1110] = 'ER_FIELD_SPECIFIED_TWICE';\nexports[1111] = 'ER_INVALID_GROUP_FUNC_USE';\nexports[1112] = 'ER_UNSUPPORTED_EXTENSION';\nexports[1113] = 'ER_TABLE_MUST_HAVE_COLUMNS';\nexports[1114] = 'ER_RECORD_FILE_FULL';\nexports[1115] = 'ER_UNKNOWN_CHARACTER_SET';\nexports[1116] = 'ER_TOO_MANY_TABLES';\nexports[1117] = 'ER_TOO_MANY_FIELDS';\nexports[1118] = 'ER_TOO_BIG_ROWSIZE';\nexports[1119] = 'ER_STACK_OVERRUN';\nexports[1120] = 'ER_WRONG_OUTER_JOIN';\nexports[1121] = 'ER_NULL_COLUMN_IN_INDEX';\nexports[1122] = 'ER_CANT_FIND_UDF';\nexports[1123] = 'ER_CANT_INITIALIZE_UDF';\nexports[1124] = 'ER_UDF_NO_PATHS';\nexports[1125] = 'ER_UDF_EXISTS';\nexports[1126] = 'ER_CANT_OPEN_LIBRARY';\nexports[1127] = 'ER_CANT_FIND_DL_ENTRY';\nexports[1128] = 'ER_FUNCTION_NOT_DEFINED';\nexports[1129] = 'ER_HOST_IS_BLOCKED';\nexports[1130] = 'ER_HOST_NOT_PRIVILEGED';\nexports[1131] = 'ER_PASSWORD_ANONYMOUS_USER';\nexports[1132] = 'ER_PASSWORD_NOT_ALLOWED';\nexports[1133] = 'ER_PASSWORD_NO_MATCH';\nexports[1134] = 'ER_UPDATE_INFO';\nexports[1135] = 'ER_CANT_CREATE_THREAD';\nexports[1136] = 'ER_WRONG_VALUE_COUNT_ON_ROW';\nexports[1137] = 'ER_CANT_REOPEN_TABLE';\nexports[1138] = 'ER_INVALID_USE_OF_NULL';\nexports[1139] = 'ER_REGEXP_ERROR';\nexports[1140] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS';\nexports[1141] = 'ER_NONEXISTING_GRANT';\nexports[1142] = 'ER_TABLEACCESS_DENIED_ERROR';\nexports[1143] = 'ER_COLUMNACCESS_DENIED_ERROR';\nexports[1144] = 'ER_ILLEGAL_GRANT_FOR_TABLE';\nexports[1145] = 'ER_GRANT_WRONG_HOST_OR_USER';\nexports[1146] = 'ER_NO_SUCH_TABLE';\nexports[1147] = 'ER_NONEXISTING_TABLE_GRANT';\nexports[1148] = 'ER_NOT_ALLOWED_COMMAND';\nexports[1149] = 'ER_SYNTAX_ERROR';\nexports[1150] = 'ER_DELAYED_CANT_CHANGE_LOCK';\nexports[1151] = 'ER_TOO_MANY_DELAYED_THREADS';\nexports[1152] = 'ER_ABORTING_CONNECTION';\nexports[1153] = 'ER_NET_PACKET_TOO_LARGE';\nexports[1154] = 'ER_NET_READ_ERROR_FROM_PIPE';\nexports[1155] = 'ER_NET_FCNTL_ERROR';\nexports[1156] = 'ER_NET_PACKETS_OUT_OF_ORDER';\nexports[1157] = 'ER_NET_UNCOMPRESS_ERROR';\nexports[1158] = 'ER_NET_READ_ERROR';\nexports[1159] = 'ER_NET_READ_INTERRUPTED';\nexports[1160] = 'ER_NET_ERROR_ON_WRITE';\nexports[1161] = 'ER_NET_WRITE_INTERRUPTED';\nexports[1162] = 'ER_TOO_LONG_STRING';\nexports[1163] = 'ER_TABLE_CANT_HANDLE_BLOB';\nexports[1164] = 'ER_TABLE_CANT_HANDLE_AUTO_INCREMENT';\nexports[1165] = 'ER_DELAYED_INSERT_TABLE_LOCKED';\nexports[1166] = 'ER_WRONG_COLUMN_NAME';\nexports[1167] = 'ER_WRONG_KEY_COLUMN';\nexports[1168] = 'ER_WRONG_MRG_TABLE';\nexports[1169] = 'ER_DUP_UNIQUE';\nexports[1170] = 'ER_BLOB_KEY_WITHOUT_LENGTH';\nexports[1171] = 'ER_PRIMARY_CANT_HAVE_NULL';\nexports[1172] = 'ER_TOO_MANY_ROWS';\nexports[1173] = 'ER_REQUIRES_PRIMARY_KEY';\nexports[1174] = 'ER_NO_RAID_COMPILED';\nexports[1175] = 'ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE';\nexports[1176] = 'ER_KEY_DOES_NOT_EXITS';\nexports[1177] = 'ER_CHECK_NO_SUCH_TABLE';\nexports[1178] = 'ER_CHECK_NOT_IMPLEMENTED';\nexports[1179] = 'ER_CANT_DO_THIS_DURING_AN_TRANSACTION';\nexports[1180] = 'ER_ERROR_DURING_COMMIT';\nexports[1181] = 'ER_ERROR_DURING_ROLLBACK';\nexports[1182] = 'ER_ERROR_DURING_FLUSH_LOGS';\nexports[1183] = 'ER_ERROR_DURING_CHECKPOINT';\nexports[1184] = 'ER_NEW_ABORTING_CONNECTION';\nexports[1185] = 'ER_DUMP_NOT_IMPLEMENTED';\nexports[1186] = 'ER_FLUSH_MASTER_BINLOG_CLOSED';\nexports[1187] = 'ER_INDEX_REBUILD';\nexports[1188] = 'ER_MASTER';\nexports[1189] = 'ER_MASTER_NET_READ';\nexports[1190] = 'ER_MASTER_NET_WRITE';\nexports[1191] = 'ER_FT_MATCHING_KEY_NOT_FOUND';\nexports[1192] = 'ER_LOCK_OR_ACTIVE_TRANSACTION';\nexports[1193] = 'ER_UNKNOWN_SYSTEM_VARIABLE';\nexports[1194] = 'ER_CRASHED_ON_USAGE';\nexports[1195] = 'ER_CRASHED_ON_REPAIR';\nexports[1196] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK';\nexports[1197] = 'ER_TRANS_CACHE_FULL';\nexports[1198] = 'ER_SLAVE_MUST_STOP';\nexports[1199] = 'ER_SLAVE_NOT_RUNNING';\nexports[1200] = 'ER_BAD_SLAVE';\nexports[1201] = 'ER_MASTER_INFO';\nexports[1202] = 'ER_SLAVE_THREAD';\nexports[1203] = 'ER_TOO_MANY_USER_CONNECTIONS';\nexports[1204] = 'ER_SET_CONSTANTS_ONLY';\nexports[1205] = 'ER_LOCK_WAIT_TIMEOUT';\nexports[1206] = 'ER_LOCK_TABLE_FULL';\nexports[1207] = 'ER_READ_ONLY_TRANSACTION';\nexports[1208] = 'ER_DROP_DB_WITH_READ_LOCK';\nexports[1209] = 'ER_CREATE_DB_WITH_READ_LOCK';\nexports[1210] = 'ER_WRONG_ARGUMENTS';\nexports[1211] = 'ER_NO_PERMISSION_TO_CREATE_USER';\nexports[1212] = 'ER_UNION_TABLES_IN_DIFFERENT_DIR';\nexports[1213] = 'ER_LOCK_DEADLOCK';\nexports[1214] = 'ER_TABLE_CANT_HANDLE_FT';\nexports[1215] = 'ER_CANNOT_ADD_FOREIGN';\nexports[1216] = 'ER_NO_REFERENCED_ROW';\nexports[1217] = 'ER_ROW_IS_REFERENCED';\nexports[1218] = 'ER_CONNECT_TO_MASTER';\nexports[1219] = 'ER_QUERY_ON_MASTER';\nexports[1220] = 'ER_ERROR_WHEN_EXECUTING_COMMAND';\nexports[1221] = 'ER_WRONG_USAGE';\nexports[1222] = 'ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT';\nexports[1223] = 'ER_CANT_UPDATE_WITH_READLOCK';\nexports[1224] = 'ER_MIXING_NOT_ALLOWED';\nexports[1225] = 'ER_DUP_ARGUMENT';\nexports[1226] = 'ER_USER_LIMIT_REACHED';\nexports[1227] = 'ER_SPECIFIC_ACCESS_DENIED_ERROR';\nexports[1228] = 'ER_LOCAL_VARIABLE';\nexports[1229] = 'ER_GLOBAL_VARIABLE';\nexports[1230] = 'ER_NO_DEFAULT';\nexports[1231] = 'ER_WRONG_VALUE_FOR_VAR';\nexports[1232] = 'ER_WRONG_TYPE_FOR_VAR';\nexports[1233] = 'ER_VAR_CANT_BE_READ';\nexports[1234] = 'ER_CANT_USE_OPTION_HERE';\nexports[1235] = 'ER_NOT_SUPPORTED_YET';\nexports[1236] = 'ER_MASTER_FATAL_ERROR_READING_BINLOG';\nexports[1237] = 'ER_SLAVE_IGNORED_TABLE';\nexports[1238] = 'ER_INCORRECT_GLOBAL_LOCAL_VAR';\nexports[1239] = 'ER_WRONG_FK_DEF';\nexports[1240] = 'ER_KEY_REF_DO_NOT_MATCH_TABLE_REF';\nexports[1241] = 'ER_OPERAND_COLUMNS';\nexports[1242] = 'ER_SUBQUERY_NO_1_ROW';\nexports[1243] = 'ER_UNKNOWN_STMT_HANDLER';\nexports[1244] = 'ER_CORRUPT_HELP_DB';\nexports[1245] = 'ER_CYCLIC_REFERENCE';\nexports[1246] = 'ER_AUTO_CONVERT';\nexports[1247] = 'ER_ILLEGAL_REFERENCE';\nexports[1248] = 'ER_DERIVED_MUST_HAVE_ALIAS';\nexports[1249] = 'ER_SELECT_REDUCED';\nexports[1250] = 'ER_TABLENAME_NOT_ALLOWED_HERE';\nexports[1251] = 'ER_NOT_SUPPORTED_AUTH_MODE';\nexports[1252] = 'ER_SPATIAL_CANT_HAVE_NULL';\nexports[1253] = 'ER_COLLATION_CHARSET_MISMATCH';\nexports[1254] = 'ER_SLAVE_WAS_RUNNING';\nexports[1255] = 'ER_SLAVE_WAS_NOT_RUNNING';\nexports[1256] = 'ER_TOO_BIG_FOR_UNCOMPRESS';\nexports[1257] = 'ER_ZLIB_Z_MEM_ERROR';\nexports[1258] = 'ER_ZLIB_Z_BUF_ERROR';\nexports[1259] = 'ER_ZLIB_Z_DATA_ERROR';\nexports[1260] = 'ER_CUT_VALUE_GROUP_CONCAT';\nexports[1261] = 'ER_WARN_TOO_FEW_RECORDS';\nexports[1262] = 'ER_WARN_TOO_MANY_RECORDS';\nexports[1263] = 'ER_WARN_NULL_TO_NOTNULL';\nexports[1264] = 'ER_WARN_DATA_OUT_OF_RANGE';\nexports[1265] = 'WARN_DATA_TRUNCATED';\nexports[1266] = 'ER_WARN_USING_OTHER_HANDLER';\nexports[1267] = 'ER_CANT_AGGREGATE_2COLLATIONS';\nexports[1268] = 'ER_DROP_USER';\nexports[1269] = 'ER_REVOKE_GRANTS';\nexports[1270] = 'ER_CANT_AGGREGATE_3COLLATIONS';\nexports[1271] = 'ER_CANT_AGGREGATE_NCOLLATIONS';\nexports[1272] = 'ER_VARIABLE_IS_NOT_STRUCT';\nexports[1273] = 'ER_UNKNOWN_COLLATION';\nexports[1274] = 'ER_SLAVE_IGNORED_SSL_PARAMS';\nexports[1275] = 'ER_SERVER_IS_IN_SECURE_AUTH_MODE';\nexports[1276] = 'ER_WARN_FIELD_RESOLVED';\nexports[1277] = 'ER_BAD_SLAVE_UNTIL_COND';\nexports[1278] = 'ER_MISSING_SKIP_SLAVE';\nexports[1279] = 'ER_UNTIL_COND_IGNORED';\nexports[1280] = 'ER_WRONG_NAME_FOR_INDEX';\nexports[1281] = 'ER_WRONG_NAME_FOR_CATALOG';\nexports[1282] = 'ER_WARN_QC_RESIZE';\nexports[1283] = 'ER_BAD_FT_COLUMN';\nexports[1284] = 'ER_UNKNOWN_KEY_CACHE';\nexports[1285] = 'ER_WARN_HOSTNAME_WONT_WORK';\nexports[1286] = 'ER_UNKNOWN_STORAGE_ENGINE';\nexports[1287] = 'ER_WARN_DEPRECATED_SYNTAX';\nexports[1288] = 'ER_NON_UPDATABLE_TABLE';\nexports[1289] = 'ER_FEATURE_DISABLED';\nexports[1290] = 'ER_OPTION_PREVENTS_STATEMENT';\nexports[1291] = 'ER_DUPLICATED_VALUE_IN_TYPE';\nexports[1292] = 'ER_TRUNCATED_WRONG_VALUE';\nexports[1293] = 'ER_TOO_MUCH_AUTO_TIMESTAMP_COLS';\nexports[1294] = 'ER_INVALID_ON_UPDATE';\nexports[1295] = 'ER_UNSUPPORTED_PS';\nexports[1296] = 'ER_GET_ERRMSG';\nexports[1297] = 'ER_GET_TEMPORARY_ERRMSG';\nexports[1298] = 'ER_UNKNOWN_TIME_ZONE';\nexports[1299] = 'ER_WARN_INVALID_TIMESTAMP';\nexports[1300] = 'ER_INVALID_CHARACTER_STRING';\nexports[1301] = 'ER_WARN_ALLOWED_PACKET_OVERFLOWED';\nexports[1302] = 'ER_CONFLICTING_DECLARATIONS';\nexports[1303] = 'ER_SP_NO_RECURSIVE_CREATE';\nexports[1304] = 'ER_SP_ALREADY_EXISTS';\nexports[1305] = 'ER_SP_DOES_NOT_EXIST';\nexports[1306] = 'ER_SP_DROP_FAILED';\nexports[1307] = 'ER_SP_STORE_FAILED';\nexports[1308] = 'ER_SP_LILABEL_MISMATCH';\nexports[1309] = 'ER_SP_LABEL_REDEFINE';\nexports[1310] = 'ER_SP_LABEL_MISMATCH';\nexports[1311] = 'ER_SP_UNINIT_VAR';\nexports[1312] = 'ER_SP_BADSELECT';\nexports[1313] = 'ER_SP_BADRETURN';\nexports[1314] = 'ER_SP_BADSTATEMENT';\nexports[1315] = 'ER_UPDATE_LOG_DEPRECATED_IGNORED';\nexports[1316] = 'ER_UPDATE_LOG_DEPRECATED_TRANSLATED';\nexports[1317] = 'ER_QUERY_INTERRUPTED';\nexports[1318] = 'ER_SP_WRONG_NO_OF_ARGS';\nexports[1319] = 'ER_SP_COND_MISMATCH';\nexports[1320] = 'ER_SP_NORETURN';\nexports[1321] = 'ER_SP_NORETURNEND';\nexports[1322] = 'ER_SP_BAD_CURSOR_QUERY';\nexports[1323] = 'ER_SP_BAD_CURSOR_SELECT';\nexports[1324] = 'ER_SP_CURSOR_MISMATCH';\nexports[1325] = 'ER_SP_CURSOR_ALREADY_OPEN';\nexports[1326] = 'ER_SP_CURSOR_NOT_OPEN';\nexports[1327] = 'ER_SP_UNDECLARED_VAR';\nexports[1328] = 'ER_SP_WRONG_NO_OF_FETCH_ARGS';\nexports[1329] = 'ER_SP_FETCH_NO_DATA';\nexports[1330] = 'ER_SP_DUP_PARAM';\nexports[1331] = 'ER_SP_DUP_VAR';\nexports[1332] = 'ER_SP_DUP_COND';\nexports[1333] = 'ER_SP_DUP_CURS';\nexports[1334] = 'ER_SP_CANT_ALTER';\nexports[1335] = 'ER_SP_SUBSELECT_NYI';\nexports[1336] = 'ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG';\nexports[1337] = 'ER_SP_VARCOND_AFTER_CURSHNDLR';\nexports[1338] = 'ER_SP_CURSOR_AFTER_HANDLER';\nexports[1339] = 'ER_SP_CASE_NOT_FOUND';\nexports[1340] = 'ER_FPARSER_TOO_BIG_FILE';\nexports[1341] = 'ER_FPARSER_BAD_HEADER';\nexports[1342] = 'ER_FPARSER_EOF_IN_COMMENT';\nexports[1343] = 'ER_FPARSER_ERROR_IN_PARAMETER';\nexports[1344] = 'ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER';\nexports[1345] = 'ER_VIEW_NO_EXPLAIN';\nexports[1346] = 'ER_FRM_UNKNOWN_TYPE';\nexports[1347] = 'ER_WRONG_OBJECT';\nexports[1348] = 'ER_NONUPDATEABLE_COLUMN';\nexports[1349] = 'ER_VIEW_SELECT_DERIVED';\nexports[1350] = 'ER_VIEW_SELECT_CLAUSE';\nexports[1351] = 'ER_VIEW_SELECT_VARIABLE';\nexports[1352] = 'ER_VIEW_SELECT_TMPTABLE';\nexports[1353] = 'ER_VIEW_WRONG_LIST';\nexports[1354] = 'ER_WARN_VIEW_MERGE';\nexports[1355] = 'ER_WARN_VIEW_WITHOUT_KEY';\nexports[1356] = 'ER_VIEW_INVALID';\nexports[1357] = 'ER_SP_NO_DROP_SP';\nexports[1358] = 'ER_SP_GOTO_IN_HNDLR';\nexports[1359] = 'ER_TRG_ALREADY_EXISTS';\nexports[1360] = 'ER_TRG_DOES_NOT_EXIST';\nexports[1361] = 'ER_TRG_ON_VIEW_OR_TEMP_TABLE';\nexports[1362] = 'ER_TRG_CANT_CHANGE_ROW';\nexports[1363] = 'ER_TRG_NO_SUCH_ROW_IN_TRG';\nexports[1364] = 'ER_NO_DEFAULT_FOR_FIELD';\nexports[1365] = 'ER_DIVISION_BY_ZERO';\nexports[1366] = 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD';\nexports[1367] = 'ER_ILLEGAL_VALUE_FOR_TYPE';\nexports[1368] = 'ER_VIEW_NONUPD_CHECK';\nexports[1369] = 'ER_VIEW_CHECK_FAILED';\nexports[1370] = 'ER_PROCACCESS_DENIED_ERROR';\nexports[1371] = 'ER_RELAY_LOG_FAIL';\nexports[1372] = 'ER_PASSWD_LENGTH';\nexports[1373] = 'ER_UNKNOWN_TARGET_BINLOG';\nexports[1374] = 'ER_IO_ERR_LOG_INDEX_READ';\nexports[1375] = 'ER_BINLOG_PURGE_PROHIBITED';\nexports[1376] = 'ER_FSEEK_FAIL';\nexports[1377] = 'ER_BINLOG_PURGE_FATAL_ERR';\nexports[1378] = 'ER_LOG_IN_USE';\nexports[1379] = 'ER_LOG_PURGE_UNKNOWN_ERR';\nexports[1380] = 'ER_RELAY_LOG_INIT';\nexports[1381] = 'ER_NO_BINARY_LOGGING';\nexports[1382] = 'ER_RESERVED_SYNTAX';\nexports[1383] = 'ER_WSAS_FAILED';\nexports[1384] = 'ER_DIFF_GROUPS_PROC';\nexports[1385] = 'ER_NO_GROUP_FOR_PROC';\nexports[1386] = 'ER_ORDER_WITH_PROC';\nexports[1387] = 'ER_LOGGING_PROHIBIT_CHANGING_OF';\nexports[1388] = 'ER_NO_FILE_MAPPING';\nexports[1389] = 'ER_WRONG_MAGIC';\nexports[1390] = 'ER_PS_MANY_PARAM';\nexports[1391] = 'ER_KEY_PART_0';\nexports[1392] = 'ER_VIEW_CHECKSUM';\nexports[1393] = 'ER_VIEW_MULTIUPDATE';\nexports[1394] = 'ER_VIEW_NO_INSERT_FIELD_LIST';\nexports[1395] = 'ER_VIEW_DELETE_MERGE_VIEW';\nexports[1396] = 'ER_CANNOT_USER';\nexports[1397] = 'ER_XAER_NOTA';\nexports[1398] = 'ER_XAER_INVAL';\nexports[1399] = 'ER_XAER_RMFAIL';\nexports[1400] = 'ER_XAER_OUTSIDE';\nexports[1401] = 'ER_XAER_RMERR';\nexports[1402] = 'ER_XA_RBROLLBACK';\nexports[1403] = 'ER_NONEXISTING_PROC_GRANT';\nexports[1404] = 'ER_PROC_AUTO_GRANT_FAIL';\nexports[1405] = 'ER_PROC_AUTO_REVOKE_FAIL';\nexports[1406] = 'ER_DATA_TOO_LONG';\nexports[1407] = 'ER_SP_BAD_SQLSTATE';\nexports[1408] = 'ER_STARTUP';\nexports[1409] = 'ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR';\nexports[1410] = 'ER_CANT_CREATE_USER_WITH_GRANT';\nexports[1411] = 'ER_WRONG_VALUE_FOR_TYPE';\nexports[1412] = 'ER_TABLE_DEF_CHANGED';\nexports[1413] = 'ER_SP_DUP_HANDLER';\nexports[1414] = 'ER_SP_NOT_VAR_ARG';\nexports[1415] = 'ER_SP_NO_RETSET';\nexports[1416] = 'ER_CANT_CREATE_GEOMETRY_OBJECT';\nexports[1417] = 'ER_FAILED_ROUTINE_BREAK_BINLOG';\nexports[1418] = 'ER_BINLOG_UNSAFE_ROUTINE';\nexports[1419] = 'ER_BINLOG_CREATE_ROUTINE_NEED_SUPER';\nexports[1420] = 'ER_EXEC_STMT_WITH_OPEN_CURSOR';\nexports[1421] = 'ER_STMT_HAS_NO_OPEN_CURSOR';\nexports[1422] = 'ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG';\nexports[1423] = 'ER_NO_DEFAULT_FOR_VIEW_FIELD';\nexports[1424] = 'ER_SP_NO_RECURSION';\nexports[1425] = 'ER_TOO_BIG_SCALE';\nexports[1426] = 'ER_TOO_BIG_PRECISION';\nexports[1427] = 'ER_M_BIGGER_THAN_D';\nexports[1428] = 'ER_WRONG_LOCK_OF_SYSTEM_TABLE';\nexports[1429] = 'ER_CONNECT_TO_FOREIGN_DATA_SOURCE';\nexports[1430] = 'ER_QUERY_ON_FOREIGN_DATA_SOURCE';\nexports[1431] = 'ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST';\nexports[1432] = 'ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE';\nexports[1433] = 'ER_FOREIGN_DATA_STRING_INVALID';\nexports[1434] = 'ER_CANT_CREATE_FEDERATED_TABLE';\nexports[1435] = 'ER_TRG_IN_WRONG_SCHEMA';\nexports[1436] = 'ER_STACK_OVERRUN_NEED_MORE';\nexports[1437] = 'ER_TOO_LONG_BODY';\nexports[1438] = 'ER_WARN_CANT_DROP_DEFAULT_KEYCACHE';\nexports[1439] = 'ER_TOO_BIG_DISPLAYWIDTH';\nexports[1440] = 'ER_XAER_DUPID';\nexports[1441] = 'ER_DATETIME_FUNCTION_OVERFLOW';\nexports[1442] = 'ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG';\nexports[1443] = 'ER_VIEW_PREVENT_UPDATE';\nexports[1444] = 'ER_PS_NO_RECURSION';\nexports[1445] = 'ER_SP_CANT_SET_AUTOCOMMIT';\nexports[1446] = 'ER_MALFORMED_DEFINER';\nexports[1447] = 'ER_VIEW_FRM_NO_USER';\nexports[1448] = 'ER_VIEW_OTHER_USER';\nexports[1449] = 'ER_NO_SUCH_USER';\nexports[1450] = 'ER_FORBID_SCHEMA_CHANGE';\nexports[1451] = 'ER_ROW_IS_REFERENCED_2';\nexports[1452] = 'ER_NO_REFERENCED_ROW_2';\nexports[1453] = 'ER_SP_BAD_VAR_SHADOW';\nexports[1454] = 'ER_TRG_NO_DEFINER';\nexports[1455] = 'ER_OLD_FILE_FORMAT';\nexports[1456] = 'ER_SP_RECURSION_LIMIT';\nexports[1457] = 'ER_SP_PROC_TABLE_CORRUPT';\nexports[1458] = 'ER_SP_WRONG_NAME';\nexports[1459] = 'ER_TABLE_NEEDS_UPGRADE';\nexports[1460] = 'ER_SP_NO_AGGREGATE';\nexports[1461] = 'ER_MAX_PREPARED_STMT_COUNT_REACHED';\nexports[1462] = 'ER_VIEW_RECURSIVE';\nexports[1463] = 'ER_NON_GROUPING_FIELD_USED';\nexports[1464] = 'ER_TABLE_CANT_HANDLE_SPKEYS';\nexports[1465] = 'ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA';\nexports[1466] = 'ER_REMOVED_SPACES';\nexports[1467] = 'ER_AUTOINC_READ_FAILED';\nexports[1468] = 'ER_USERNAME';\nexports[1469] = 'ER_HOSTNAME';\nexports[1470] = 'ER_WRONG_STRING_LENGTH';\nexports[1471] = 'ER_NON_INSERTABLE_TABLE';\nexports[1472] = 'ER_ADMIN_WRONG_MRG_TABLE';\nexports[1473] = 'ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT';\nexports[1474] = 'ER_NAME_BECOMES_EMPTY';\nexports[1475] = 'ER_AMBIGUOUS_FIELD_TERM';\nexports[1476] = 'ER_FOREIGN_SERVER_EXISTS';\nexports[1477] = 'ER_FOREIGN_SERVER_DOESNT_EXIST';\nexports[1478] = 'ER_ILLEGAL_HA_CREATE_OPTION';\nexports[1479] = 'ER_PARTITION_REQUIRES_VALUES_ERROR';\nexports[1480] = 'ER_PARTITION_WRONG_VALUES_ERROR';\nexports[1481] = 'ER_PARTITION_MAXVALUE_ERROR';\nexports[1482] = 'ER_PARTITION_SUBPARTITION_ERROR';\nexports[1483] = 'ER_PARTITION_SUBPART_MIX_ERROR';\nexports[1484] = 'ER_PARTITION_WRONG_NO_PART_ERROR';\nexports[1485] = 'ER_PARTITION_WRONG_NO_SUBPART_ERROR';\nexports[1486] = 'ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR';\nexports[1487] = 'ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR';\nexports[1488] = 'ER_FIELD_NOT_FOUND_PART_ERROR';\nexports[1489] = 'ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR';\nexports[1490] = 'ER_INCONSISTENT_PARTITION_INFO_ERROR';\nexports[1491] = 'ER_PARTITION_FUNC_NOT_ALLOWED_ERROR';\nexports[1492] = 'ER_PARTITIONS_MUST_BE_DEFINED_ERROR';\nexports[1493] = 'ER_RANGE_NOT_INCREASING_ERROR';\nexports[1494] = 'ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR';\nexports[1495] = 'ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR';\nexports[1496] = 'ER_PARTITION_ENTRY_ERROR';\nexports[1497] = 'ER_MIX_HANDLER_ERROR';\nexports[1498] = 'ER_PARTITION_NOT_DEFINED_ERROR';\nexports[1499] = 'ER_TOO_MANY_PARTITIONS_ERROR';\nexports[1500] = 'ER_SUBPARTITION_ERROR';\nexports[1501] = 'ER_CANT_CREATE_HANDLER_FILE';\nexports[1502] = 'ER_BLOB_FIELD_IN_PART_FUNC_ERROR';\nexports[1503] = 'ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF';\nexports[1504] = 'ER_NO_PARTS_ERROR';\nexports[1505] = 'ER_PARTITION_MGMT_ON_NONPARTITIONED';\nexports[1506] = 'ER_FOREIGN_KEY_ON_PARTITIONED';\nexports[1507] = 'ER_DROP_PARTITION_NON_EXISTENT';\nexports[1508] = 'ER_DROP_LAST_PARTITION';\nexports[1509] = 'ER_COALESCE_ONLY_ON_HASH_PARTITION';\nexports[1510] = 'ER_REORG_HASH_ONLY_ON_SAME_NO';\nexports[1511] = 'ER_REORG_NO_PARAM_ERROR';\nexports[1512] = 'ER_ONLY_ON_RANGE_LIST_PARTITION';\nexports[1513] = 'ER_ADD_PARTITION_SUBPART_ERROR';\nexports[1514] = 'ER_ADD_PARTITION_NO_NEW_PARTITION';\nexports[1515] = 'ER_COALESCE_PARTITION_NO_PARTITION';\nexports[1516] = 'ER_REORG_PARTITION_NOT_EXIST';\nexports[1517] = 'ER_SAME_NAME_PARTITION';\nexports[1518] = 'ER_NO_BINLOG_ERROR';\nexports[1519] = 'ER_CONSECUTIVE_REORG_PARTITIONS';\nexports[1520] = 'ER_REORG_OUTSIDE_RANGE';\nexports[1521] = 'ER_PARTITION_FUNCTION_FAILURE';\nexports[1522] = 'ER_PART_STATE_ERROR';\nexports[1523] = 'ER_LIMITED_PART_RANGE';\nexports[1524] = 'ER_PLUGIN_IS_NOT_LOADED';\nexports[1525] = 'ER_WRONG_VALUE';\nexports[1526] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE';\nexports[1527] = 'ER_FILEGROUP_OPTION_ONLY_ONCE';\nexports[1528] = 'ER_CREATE_FILEGROUP_FAILED';\nexports[1529] = 'ER_DROP_FILEGROUP_FAILED';\nexports[1530] = 'ER_TABLESPACE_AUTO_EXTEND_ERROR';\nexports[1531] = 'ER_WRONG_SIZE_NUMBER';\nexports[1532] = 'ER_SIZE_OVERFLOW_ERROR';\nexports[1533] = 'ER_ALTER_FILEGROUP_FAILED';\nexports[1534] = 'ER_BINLOG_ROW_LOGGING_FAILED';\nexports[1535] = 'ER_BINLOG_ROW_WRONG_TABLE_DEF';\nexports[1536] = 'ER_BINLOG_ROW_RBR_TO_SBR';\nexports[1537] = 'ER_EVENT_ALREADY_EXISTS';\nexports[1538] = 'ER_EVENT_STORE_FAILED';\nexports[1539] = 'ER_EVENT_DOES_NOT_EXIST';\nexports[1540] = 'ER_EVENT_CANT_ALTER';\nexports[1541] = 'ER_EVENT_DROP_FAILED';\nexports[1542] = 'ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG';\nexports[1543] = 'ER_EVENT_ENDS_BEFORE_STARTS';\nexports[1544] = 'ER_EVENT_EXEC_TIME_IN_THE_PAST';\nexports[1545] = 'ER_EVENT_OPEN_TABLE_FAILED';\nexports[1546] = 'ER_EVENT_NEITHER_M_EXPR_NOR_M_AT';\nexports[1547] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED';\nexports[1548] = 'ER_CANNOT_LOAD_FROM_TABLE';\nexports[1549] = 'ER_EVENT_CANNOT_DELETE';\nexports[1550] = 'ER_EVENT_COMPILE_ERROR';\nexports[1551] = 'ER_EVENT_SAME_NAME';\nexports[1552] = 'ER_EVENT_DATA_TOO_LONG';\nexports[1553] = 'ER_DROP_INDEX_FK';\nexports[1554] = 'ER_WARN_DEPRECATED_SYNTAX_WITH_VER';\nexports[1555] = 'ER_CANT_WRITE_LOCK_LOG_TABLE';\nexports[1556] = 'ER_CANT_LOCK_LOG_TABLE';\nexports[1557] = 'ER_FOREIGN_DUPLICATE_KEY';\nexports[1558] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE';\nexports[1559] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR';\nexports[1560] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT';\nexports[1561] = 'ER_NDB_CANT_SWITCH_BINLOG_FORMAT';\nexports[1562] = 'ER_PARTITION_NO_TEMPORARY';\nexports[1563] = 'ER_PARTITION_CONST_DOMAIN_ERROR';\nexports[1564] = 'ER_PARTITION_FUNCTION_IS_NOT_ALLOWED';\nexports[1565] = 'ER_DDL_LOG_ERROR';\nexports[1566] = 'ER_NULL_IN_VALUES_LESS_THAN';\nexports[1567] = 'ER_WRONG_PARTITION_NAME';\nexports[1568] = 'ER_CANT_CHANGE_TX_CHARACTERISTICS';\nexports[1569] = 'ER_DUP_ENTRY_AUTOINCREMENT_CASE';\nexports[1570] = 'ER_EVENT_MODIFY_QUEUE_ERROR';\nexports[1571] = 'ER_EVENT_SET_VAR_ERROR';\nexports[1572] = 'ER_PARTITION_MERGE_ERROR';\nexports[1573] = 'ER_CANT_ACTIVATE_LOG';\nexports[1574] = 'ER_RBR_NOT_AVAILABLE';\nexports[1575] = 'ER_BASE64_DECODE_ERROR';\nexports[1576] = 'ER_EVENT_RECURSION_FORBIDDEN';\nexports[1577] = 'ER_EVENTS_DB_ERROR';\nexports[1578] = 'ER_ONLY_INTEGERS_ALLOWED';\nexports[1579] = 'ER_UNSUPORTED_LOG_ENGINE';\nexports[1580] = 'ER_BAD_LOG_STATEMENT';\nexports[1581] = 'ER_CANT_RENAME_LOG_TABLE';\nexports[1582] = 'ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT';\nexports[1583] = 'ER_WRONG_PARAMETERS_TO_NATIVE_FCT';\nexports[1584] = 'ER_WRONG_PARAMETERS_TO_STORED_FCT';\nexports[1585] = 'ER_NATIVE_FCT_NAME_COLLISION';\nexports[1586] = 'ER_DUP_ENTRY_WITH_KEY_NAME';\nexports[1587] = 'ER_BINLOG_PURGE_EMFILE';\nexports[1588] = 'ER_EVENT_CANNOT_CREATE_IN_THE_PAST';\nexports[1589] = 'ER_EVENT_CANNOT_ALTER_IN_THE_PAST';\nexports[1590] = 'ER_SLAVE_INCIDENT';\nexports[1591] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT';\nexports[1592] = 'ER_BINLOG_UNSAFE_STATEMENT';\nexports[1593] = 'ER_SLAVE_FATAL_ERROR';\nexports[1594] = 'ER_SLAVE_RELAY_LOG_READ_FAILURE';\nexports[1595] = 'ER_SLAVE_RELAY_LOG_WRITE_FAILURE';\nexports[1596] = 'ER_SLAVE_CREATE_EVENT_FAILURE';\nexports[1597] = 'ER_SLAVE_MASTER_COM_FAILURE';\nexports[1598] = 'ER_BINLOG_LOGGING_IMPOSSIBLE';\nexports[1599] = 'ER_VIEW_NO_CREATION_CTX';\nexports[1600] = 'ER_VIEW_INVALID_CREATION_CTX';\nexports[1601] = 'ER_SR_INVALID_CREATION_CTX';\nexports[1602] = 'ER_TRG_CORRUPTED_FILE';\nexports[1603] = 'ER_TRG_NO_CREATION_CTX';\nexports[1604] = 'ER_TRG_INVALID_CREATION_CTX';\nexports[1605] = 'ER_EVENT_INVALID_CREATION_CTX';\nexports[1606] = 'ER_TRG_CANT_OPEN_TABLE';\nexports[1607] = 'ER_CANT_CREATE_SROUTINE';\nexports[1608] = 'ER_NEVER_USED';\nexports[1609] = 'ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT';\nexports[1610] = 'ER_SLAVE_CORRUPT_EVENT';\nexports[1611] = 'ER_LOAD_DATA_INVALID_COLUMN';\nexports[1612] = 'ER_LOG_PURGE_NO_FILE';\nexports[1613] = 'ER_XA_RBTIMEOUT';\nexports[1614] = 'ER_XA_RBDEADLOCK';\nexports[1615] = 'ER_NEED_REPREPARE';\nexports[1616] = 'ER_DELAYED_NOT_SUPPORTED';\nexports[1617] = 'WARN_NO_MASTER_INFO';\nexports[1618] = 'WARN_OPTION_IGNORED';\nexports[1619] = 'WARN_PLUGIN_DELETE_BUILTIN';\nexports[1620] = 'WARN_PLUGIN_BUSY';\nexports[1621] = 'ER_VARIABLE_IS_READONLY';\nexports[1622] = 'ER_WARN_ENGINE_TRANSACTION_ROLLBACK';\nexports[1623] = 'ER_SLAVE_HEARTBEAT_FAILURE';\nexports[1624] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE';\nexports[1625] = 'ER_NDB_REPLICATION_SCHEMA_ERROR';\nexports[1626] = 'ER_CONFLICT_FN_PARSE_ERROR';\nexports[1627] = 'ER_EXCEPTIONS_WRITE_ERROR';\nexports[1628] = 'ER_TOO_LONG_TABLE_COMMENT';\nexports[1629] = 'ER_TOO_LONG_FIELD_COMMENT';\nexports[1630] = 'ER_FUNC_INEXISTENT_NAME_COLLISION';\nexports[1631] = 'ER_DATABASE_NAME';\nexports[1632] = 'ER_TABLE_NAME';\nexports[1633] = 'ER_PARTITION_NAME';\nexports[1634] = 'ER_SUBPARTITION_NAME';\nexports[1635] = 'ER_TEMPORARY_NAME';\nexports[1636] = 'ER_RENAMED_NAME';\nexports[1637] = 'ER_TOO_MANY_CONCURRENT_TRXS';\nexports[1638] = 'WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED';\nexports[1639] = 'ER_DEBUG_SYNC_TIMEOUT';\nexports[1640] = 'ER_DEBUG_SYNC_HIT_LIMIT';\nexports[1641] = 'ER_DUP_SIGNAL_SET';\nexports[1642] = 'ER_SIGNAL_WARN';\nexports[1643] = 'ER_SIGNAL_NOT_FOUND';\nexports[1644] = 'ER_SIGNAL_EXCEPTION';\nexports[1645] = 'ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER';\nexports[1646] = 'ER_SIGNAL_BAD_CONDITION_TYPE';\nexports[1647] = 'WARN_COND_ITEM_TRUNCATED';\nexports[1648] = 'ER_COND_ITEM_TOO_LONG';\nexports[1649] = 'ER_UNKNOWN_LOCALE';\nexports[1650] = 'ER_SLAVE_IGNORE_SERVER_IDS';\nexports[1651] = 'ER_QUERY_CACHE_DISABLED';\nexports[1652] = 'ER_SAME_NAME_PARTITION_FIELD';\nexports[1653] = 'ER_PARTITION_COLUMN_LIST_ERROR';\nexports[1654] = 'ER_WRONG_TYPE_COLUMN_VALUE_ERROR';\nexports[1655] = 'ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR';\nexports[1656] = 'ER_MAXVALUE_IN_VALUES_IN';\nexports[1657] = 'ER_TOO_MANY_VALUES_ERROR';\nexports[1658] = 'ER_ROW_SINGLE_PARTITION_FIELD_ERROR';\nexports[1659] = 'ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD';\nexports[1660] = 'ER_PARTITION_FIELDS_TOO_LONG';\nexports[1661] = 'ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE';\nexports[1662] = 'ER_BINLOG_ROW_MODE_AND_STMT_ENGINE';\nexports[1663] = 'ER_BINLOG_UNSAFE_AND_STMT_ENGINE';\nexports[1664] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE';\nexports[1665] = 'ER_BINLOG_STMT_MODE_AND_ROW_ENGINE';\nexports[1666] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_MODE';\nexports[1667] = 'ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\nexports[1668] = 'ER_BINLOG_UNSAFE_LIMIT';\nexports[1669] = 'ER_BINLOG_UNSAFE_INSERT_DELAYED';\nexports[1670] = 'ER_BINLOG_UNSAFE_SYSTEM_TABLE';\nexports[1671] = 'ER_BINLOG_UNSAFE_AUTOINC_COLUMNS';\nexports[1672] = 'ER_BINLOG_UNSAFE_UDF';\nexports[1673] = 'ER_BINLOG_UNSAFE_SYSTEM_VARIABLE';\nexports[1674] = 'ER_BINLOG_UNSAFE_SYSTEM_FUNCTION';\nexports[1675] = 'ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS';\nexports[1676] = 'ER_MESSAGE_AND_STATEMENT';\nexports[1677] = 'ER_SLAVE_CONVERSION_FAILED';\nexports[1678] = 'ER_SLAVE_CANT_CREATE_CONVERSION';\nexports[1679] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT';\nexports[1680] = 'ER_PATH_LENGTH';\nexports[1681] = 'ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT';\nexports[1682] = 'ER_WRONG_NATIVE_TABLE_STRUCTURE';\nexports[1683] = 'ER_WRONG_PERFSCHEMA_USAGE';\nexports[1684] = 'ER_WARN_I_S_SKIPPED_TABLE';\nexports[1685] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT';\nexports[1686] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT';\nexports[1687] = 'ER_SPATIAL_MUST_HAVE_GEOM_COL';\nexports[1688] = 'ER_TOO_LONG_INDEX_COMMENT';\nexports[1689] = 'ER_LOCK_ABORTED';\nexports[1690] = 'ER_DATA_OUT_OF_RANGE';\nexports[1691] = 'ER_WRONG_SPVAR_TYPE_IN_LIMIT';\nexports[1692] = 'ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\nexports[1693] = 'ER_BINLOG_UNSAFE_MIXED_STATEMENT';\nexports[1694] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN';\nexports[1695] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN';\nexports[1696] = 'ER_FAILED_READ_FROM_PAR_FILE';\nexports[1697] = 'ER_VALUES_IS_NOT_INT_TYPE_ERROR';\nexports[1698] = 'ER_ACCESS_DENIED_NO_PASSWORD_ERROR';\nexports[1699] = 'ER_SET_PASSWORD_AUTH_PLUGIN';\nexports[1700] = 'ER_GRANT_PLUGIN_USER_EXISTS';\nexports[1701] = 'ER_TRUNCATE_ILLEGAL_FK';\nexports[1702] = 'ER_PLUGIN_IS_PERMANENT';\nexports[1703] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN';\nexports[1704] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX';\nexports[1705] = 'ER_STMT_CACHE_FULL';\nexports[1706] = 'ER_MULTI_UPDATE_KEY_CONFLICT';\nexports[1707] = 'ER_TABLE_NEEDS_REBUILD';\nexports[1708] = 'WARN_OPTION_BELOW_LIMIT';\nexports[1709] = 'ER_INDEX_COLUMN_TOO_LONG';\nexports[1710] = 'ER_ERROR_IN_TRIGGER_BODY';\nexports[1711] = 'ER_ERROR_IN_UNKNOWN_TRIGGER_BODY';\nexports[1712] = 'ER_INDEX_CORRUPT';\nexports[1713] = 'ER_UNDO_RECORD_TOO_BIG';\nexports[1714] = 'ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT';\nexports[1715] = 'ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE';\nexports[1716] = 'ER_BINLOG_UNSAFE_REPLACE_SELECT';\nexports[1717] = 'ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT';\nexports[1718] = 'ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT';\nexports[1719] = 'ER_BINLOG_UNSAFE_UPDATE_IGNORE';\nexports[1720] = 'ER_PLUGIN_NO_UNINSTALL';\nexports[1721] = 'ER_PLUGIN_NO_INSTALL';\nexports[1722] = 'ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT';\nexports[1723] = 'ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC';\nexports[1724] = 'ER_BINLOG_UNSAFE_INSERT_TWO_KEYS';\nexports[1725] = 'ER_TABLE_IN_FK_CHECK';\nexports[1726] = 'ER_UNSUPPORTED_ENGINE';\nexports[1727] = 'ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST';\nexports[1728] = 'ER_CANNOT_LOAD_FROM_TABLE_V2';\nexports[1729] = 'ER_MASTER_DELAY_VALUE_OUT_OF_RANGE';\nexports[1730] = 'ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT';\nexports[1731] = 'ER_PARTITION_EXCHANGE_DIFFERENT_OPTION';\nexports[1732] = 'ER_PARTITION_EXCHANGE_PART_TABLE';\nexports[1733] = 'ER_PARTITION_EXCHANGE_TEMP_TABLE';\nexports[1734] = 'ER_PARTITION_INSTEAD_OF_SUBPARTITION';\nexports[1735] = 'ER_UNKNOWN_PARTITION';\nexports[1736] = 'ER_TABLES_DIFFERENT_METADATA';\nexports[1737] = 'ER_ROW_DOES_NOT_MATCH_PARTITION';\nexports[1738] = 'ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX';\nexports[1739] = 'ER_WARN_INDEX_NOT_APPLICABLE';\nexports[1740] = 'ER_PARTITION_EXCHANGE_FOREIGN_KEY';\nexports[1741] = 'ER_NO_SUCH_KEY_VALUE';\nexports[1742] = 'ER_RPL_INFO_DATA_TOO_LONG';\nexports[1743] = 'ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE';\nexports[1744] = 'ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE';\nexports[1745] = 'ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX';\nexports[1746] = 'ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT';\nexports[1747] = 'ER_PARTITION_CLAUSE_ON_NONPARTITIONED';\nexports[1748] = 'ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET';\nexports[1749] = 'ER_NO_SUCH_PARTITION';\nexports[1750] = 'ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE';\nexports[1751] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE';\nexports[1752] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE';\nexports[1753] = 'ER_MTS_FEATURE_IS_NOT_SUPPORTED';\nexports[1754] = 'ER_MTS_UPDATED_DBS_GREATER_MAX';\nexports[1755] = 'ER_MTS_CANT_PARALLEL';\nexports[1756] = 'ER_MTS_INCONSISTENT_DATA';\nexports[1757] = 'ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING';\nexports[1758] = 'ER_DA_INVALID_CONDITION_NUMBER';\nexports[1759] = 'ER_INSECURE_PLAIN_TEXT';\nexports[1760] = 'ER_INSECURE_CHANGE_MASTER';\nexports[1761] = 'ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO';\nexports[1762] = 'ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO';\nexports[1763] = 'ER_SQLTHREAD_WITH_SECURE_SLAVE';\nexports[1764] = 'ER_TABLE_HAS_NO_FT';\nexports[1765] = 'ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER';\nexports[1766] = 'ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION';\nexports[1767] = 'ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST';\nexports[1768] =\n  'ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION_WHEN_GTID_NEXT_LIST_IS_NULL';\nexports[1769] = 'ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION';\nexports[1770] = 'ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL';\nexports[1771] = 'ER_SKIPPING_LOGGED_TRANSACTION';\nexports[1772] = 'ER_MALFORMED_GTID_SET_SPECIFICATION';\nexports[1773] = 'ER_MALFORMED_GTID_SET_ENCODING';\nexports[1774] = 'ER_MALFORMED_GTID_SPECIFICATION';\nexports[1775] = 'ER_GNO_EXHAUSTED';\nexports[1776] = 'ER_BAD_SLAVE_AUTO_POSITION';\nexports[1777] = 'ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON';\nexports[1778] = 'ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET';\nexports[1779] = 'ER_GTID_MODE_2_OR_3_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON';\nexports[1780] = 'ER_GTID_MODE_REQUIRES_BINLOG';\nexports[1781] = 'ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF';\nexports[1782] = 'ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON';\nexports[1783] = 'ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF';\nexports[1784] = 'ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF';\nexports[1785] = 'ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE';\nexports[1786] = 'ER_GTID_UNSAFE_CREATE_SELECT';\nexports[1787] = 'ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION';\nexports[1788] = 'ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME';\nexports[1789] = 'ER_MASTER_HAS_PURGED_REQUIRED_GTIDS';\nexports[1790] = 'ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID';\nexports[1791] = 'ER_UNKNOWN_EXPLAIN_FORMAT';\nexports[1792] = 'ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION';\nexports[1793] = 'ER_TOO_LONG_TABLE_PARTITION_COMMENT';\nexports[1794] = 'ER_SLAVE_CONFIGURATION';\nexports[1795] = 'ER_INNODB_FT_LIMIT';\nexports[1796] = 'ER_INNODB_NO_FT_TEMP_TABLE';\nexports[1797] = 'ER_INNODB_FT_WRONG_DOCID_COLUMN';\nexports[1798] = 'ER_INNODB_FT_WRONG_DOCID_INDEX';\nexports[1799] = 'ER_INNODB_ONLINE_LOG_TOO_BIG';\nexports[1800] = 'ER_UNKNOWN_ALTER_ALGORITHM';\nexports[1801] = 'ER_UNKNOWN_ALTER_LOCK';\nexports[1802] = 'ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS';\nexports[1803] = 'ER_MTS_RECOVERY_FAILURE';\nexports[1804] = 'ER_MTS_RESET_WORKERS';\nexports[1805] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2';\nexports[1806] = 'ER_SLAVE_SILENT_RETRY_TRANSACTION';\nexports[1807] = 'ER_DISCARD_FK_CHECKS_RUNNING';\nexports[1808] = 'ER_TABLE_SCHEMA_MISMATCH';\nexports[1809] = 'ER_TABLE_IN_SYSTEM_TABLESPACE';\nexports[1810] = 'ER_IO_READ_ERROR';\nexports[1811] = 'ER_IO_WRITE_ERROR';\nexports[1812] = 'ER_TABLESPACE_MISSING';\nexports[1813] = 'ER_TABLESPACE_EXISTS';\nexports[1814] = 'ER_TABLESPACE_DISCARDED';\nexports[1815] = 'ER_INTERNAL_ERROR';\nexports[1816] = 'ER_INNODB_IMPORT_ERROR';\nexports[1817] = 'ER_INNODB_INDEX_CORRUPT';\nexports[1818] = 'ER_INVALID_YEAR_COLUMN_LENGTH';\nexports[1819] = 'ER_NOT_VALID_PASSWORD';\nexports[1820] = 'ER_MUST_CHANGE_PASSWORD';\nexports[1821] = 'ER_FK_NO_INDEX_CHILD';\nexports[1822] = 'ER_FK_NO_INDEX_PARENT';\nexports[1823] = 'ER_FK_FAIL_ADD_SYSTEM';\nexports[1824] = 'ER_FK_CANNOT_OPEN_PARENT';\nexports[1825] = 'ER_FK_INCORRECT_OPTION';\nexports[1826] = 'ER_FK_DUP_NAME';\nexports[1827] = 'ER_PASSWORD_FORMAT';\nexports[1828] = 'ER_FK_COLUMN_CANNOT_DROP';\nexports[1829] = 'ER_FK_COLUMN_CANNOT_DROP_CHILD';\nexports[1830] = 'ER_FK_COLUMN_NOT_NULL';\nexports[1831] = 'ER_DUP_INDEX';\nexports[1832] = 'ER_FK_COLUMN_CANNOT_CHANGE';\nexports[1833] = 'ER_FK_COLUMN_CANNOT_CHANGE_CHILD';\nexports[1834] = 'ER_FK_CANNOT_DELETE_PARENT';\nexports[1835] = 'ER_MALFORMED_PACKET';\nexports[1836] = 'ER_READ_ONLY_MODE';\nexports[1837] = 'ER_GTID_NEXT_TYPE_UNDEFINED_GROUP';\nexports[1838] = 'ER_VARIABLE_NOT_SETTABLE_IN_SP';\nexports[1839] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF';\nexports[1840] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY';\nexports[1841] = 'ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY';\nexports[1842] = 'ER_GTID_PURGED_WAS_CHANGED';\nexports[1843] = 'ER_GTID_EXECUTED_WAS_CHANGED';\nexports[1844] = 'ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES';\nexports[1845] = 'ER_ALTER_OPERATION_NOT_SUPPORTED';\nexports[1846] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON';\nexports[1847] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY';\nexports[1848] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION';\nexports[1849] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME';\nexports[1850] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE';\nexports[1851] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK';\nexports[1852] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_IGNORE';\nexports[1853] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK';\nexports[1854] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC';\nexports[1855] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS';\nexports[1856] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS';\nexports[1857] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS';\nexports[1858] = 'ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE';\nexports[1859] = 'ER_DUP_UNKNOWN_IN_INDEX';\nexports[1860] = 'ER_IDENT_CAUSES_TOO_LONG_PATH';\nexports[1861] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL';\nexports[1862] = 'ER_MUST_CHANGE_PASSWORD_LOGIN';\nexports[1863] = 'ER_ROW_IN_WRONG_PARTITION';\nexports[1864] = 'ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX';\nexports[1865] = 'ER_INNODB_NO_FT_USES_PARSER';\nexports[1866] = 'ER_BINLOG_LOGICAL_CORRUPTION';\nexports[1867] = 'ER_WARN_PURGE_LOG_IN_USE';\nexports[1868] = 'ER_WARN_PURGE_LOG_IS_ACTIVE';\nexports[1869] = 'ER_AUTO_INCREMENT_CONFLICT';\nexports[1870] = 'WARN_ON_BLOCKHOLE_IN_RBR';\nexports[1871] = 'ER_SLAVE_MI_INIT_REPOSITORY';\nexports[1872] = 'ER_SLAVE_RLI_INIT_REPOSITORY';\nexports[1873] = 'ER_ACCESS_DENIED_CHANGE_USER_ERROR';\nexports[1874] = 'ER_INNODB_READ_ONLY';\nexports[1875] = 'ER_STOP_SLAVE_SQL_THREAD_TIMEOUT';\nexports[1876] = 'ER_STOP_SLAVE_IO_THREAD_TIMEOUT';\nexports[1877] = 'ER_TABLE_CORRUPT';\nexports[1878] = 'ER_TEMP_FILE_WRITE_FAILURE';\nexports[1879] = 'ER_INNODB_FT_AUX_NOT_HEX_ID';\nexports[1880] = 'ER_OLD_TEMPORALS_UPGRADED';\nexports[1881] = 'ER_INNODB_FORCED_RECOVERY';\nexports[1882] = 'ER_AES_INVALID_IV';\n", "module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81\u00E9\u00E2\\x84\u00E0\\x86\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\\x8d\\x8e\\x8f\\x90\\u0651\\u0652\u00F4\u00A4\u0640\u00FB\u00F9\u0621\u0622\u0623\u0624\u00A3\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0636\u0637\u0638\u0639\u063A\u0641\u00B5\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u2261\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "'use strict';\n\nconst Iconv = require('iconv-lite');\n\nexports.decode = function(buffer, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding);\n  }\n\n  const decoder = Iconv.getDecoder(encoding, options || {});\n\n  const res = decoder.write(buffer);\n  const trail = decoder.end();\n\n  return trail ? res + trail : res;\n};\n\nexports.encode = function(string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n\n  const res = encoder.write(string);\n  const trail = encoder.end();\n\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n", "'use strict';\n\nconst ErrorCodeToName = require('../constants/errors.js');\nconst NativeBuffer = require('buffer').Buffer;\nconst Long = require('long');\nconst StringParser = require('../parsers/string.js');\n\nconst INVALID_DATE = new Date(NaN);\n\n// this is nearly duplicate of previous function so generated code is not slower\n// due to \"if (dateStrings)\" branching\nconst pad = '000000000000';\nfunction leftPad(num, value) {\n  const s = value.toString();\n  // if we don't need to pad\n  if (s.length >= num) {\n    return s;\n  }\n  return (pad + s).slice(-num);\n}\n\n// The whole reason parse* function below exist\n// is because String creation is relatively expensive (at least with V8), and if we have\n// a buffer with \"12345\" content ideally we would like to bypass intermediate\n// \"12345\" string creation and directly build 12345 number out of\n// <Buffer 31 32 33 34 35> data.\n// In my benchmarks the difference is ~25M 8-digit numbers per second vs\n// 4.5 M using Number(packet.readLengthCodedString())\n// not used when size is close to max precision as series of *10 accumulate error\n// and approximate result mihgt be diffreent from (approximate as well) Number(bigNumStringValue))\n// In the futire node version if speed difference is smaller parse* functions might be removed\n// don't consider them as Packet public API\n\nconst minus = '-'.charCodeAt(0);\nconst plus = '+'.charCodeAt(0);\n\n// TODO: handle E notation\nconst dot = '.'.charCodeAt(0);\nconst exponent = 'e'.charCodeAt(0);\nconst exponentCapital = 'E'.charCodeAt(0);\n\nclass Packet {\n  constructor(id, buffer, start, end) {\n    // hot path, enable checks when testing only\n    // if (!Buffer.isBuffer(buffer) || typeof start == 'undefined' || typeof end == 'undefined')\n    //  throw new Error('invalid packet');\n    this.sequenceId = id;\n    this.numPackets = 1;\n    this.buffer = buffer;\n    this.start = start;\n    this.offset = start + 4;\n    this.end = end;\n  }\n\n  // ==============================\n  // readers\n  // ==============================\n  reset() {\n    this.offset = this.start + 4;\n  }\n\n  length() {\n    return this.end - this.start;\n  }\n\n  slice() {\n    return this.buffer.slice(this.start, this.end);\n  }\n\n  dump() {\n    // eslint-disable-next-line no-console\n    console.log(\n      [this.buffer.asciiSlice(this.start, this.end)],\n      this.buffer.slice(this.start, this.end),\n      this.length(),\n      this.sequenceId\n    );\n  }\n\n  haveMoreData() {\n    return this.end > this.offset;\n  }\n\n  skip(num) {\n    this.offset += num;\n  }\n\n  readInt8() {\n    return this.buffer[this.offset++];\n  }\n\n  readInt16() {\n    this.offset += 2;\n    return this.buffer.readUInt16LE(this.offset - 2);\n  }\n\n  readInt24() {\n    return this.readInt16() + (this.readInt8() << 16);\n  }\n\n  readInt32() {\n    this.offset += 4;\n    return this.buffer.readUInt32LE(this.offset - 4);\n  }\n\n  readSInt8() {\n    return this.buffer.readInt8(this.offset++);\n  }\n\n  readSInt16() {\n    this.offset += 2;\n    return this.buffer.readInt16LE(this.offset - 2);\n  }\n\n  readSInt32() {\n    this.offset += 4;\n    return this.buffer.readInt32LE(this.offset - 4);\n  }\n\n  readInt64JSNumber() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const l = new Long(word0, word1, true);\n    return l.toNumber();\n  }\n\n  readSInt64JSNumber() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    if (!(word1 & 0x80000000)) {\n      return word0 + 0x100000000 * word1;\n    }\n    const l = new Long(word0, word1, false);\n    return l.toNumber();\n  }\n\n  readInt64String() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const res = new Long(word0, word1, true);\n    return res.toString();\n  }\n\n  readSInt64String() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const res = new Long(word0, word1, false);\n    return res.toString();\n  }\n\n  readInt64() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    let res = new Long(word0, word1, true);\n    const resNumber = res.toNumber();\n    const resString = res.toString();\n    res = resNumber.toString() === resString ? resNumber : resString;\n    return res;\n  }\n\n  readSInt64() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    let res = new Long(word0, word1, false);\n    const resNumber = res.toNumber();\n    const resString = res.toString();\n    res = resNumber.toString() === resString ? resNumber : resString;\n    return res;\n  }\n\n  isEOF() {\n    return this.buffer[this.offset] === 0xfe && this.length() < 13;\n  }\n\n  eofStatusFlags() {\n    return this.buffer.readInt16LE(this.offset + 3);\n  }\n\n  eofWarningCount() {\n    return this.buffer.readInt16LE(this.offset + 1);\n  }\n\n  readLengthCodedNumber(bigNumberStrings, signed) {\n    const byte1 = this.buffer[this.offset++];\n    if (byte1 < 251) {\n      return byte1;\n    }\n    return this.readLengthCodedNumberExt(byte1, bigNumberStrings, signed);\n  }\n\n  readLengthCodedNumberSigned(bigNumberStrings) {\n    return this.readLengthCodedNumber(bigNumberStrings, true);\n  }\n\n  readLengthCodedNumberExt(tag, bigNumberStrings, signed) {\n    let word0, word1;\n    let res;\n    if (tag === 0xfb) {\n      return null;\n    }\n    if (tag === 0xfc) {\n      return this.readInt8() + (this.readInt8() << 8);\n    }\n    if (tag === 0xfd) {\n      return this.readInt8() + (this.readInt8() << 8) + (this.readInt8() << 16);\n    }\n    if (tag === 0xfe) {\n      // TODO: check version\n      // Up to MySQL 3.22, 0xfe was followed by a 4-byte integer.\n      word0 = this.readInt32();\n      word1 = this.readInt32();\n      if (word1 === 0) {\n        return word0; // don't convert to float if possible\n      }\n      if (word1 < 2097152) {\n        // max exact float point int, 2^52 / 2^32\n        return word1 * 0x100000000 + word0;\n      }\n      res = new Long(word0, word1, !signed); // Long need unsigned\n      const resNumber = res.toNumber();\n      const resString = res.toString();\n      res = resNumber.toString() === resString ? resNumber : resString;\n      return bigNumberStrings ? resString : res;\n    }\n    // eslint-disable-next-line no-console\n    console.trace();\n    throw new Error(`Should not reach here: ${tag}`);\n  }\n\n  readFloat() {\n    const res = this.buffer.readFloatLE(this.offset);\n    this.offset += 4;\n    return res;\n  }\n\n  readDouble() {\n    const res = this.buffer.readDoubleLE(this.offset);\n    this.offset += 8;\n    return res;\n  }\n\n  readBuffer(len) {\n    if (typeof len === 'undefined') {\n      len = this.end - this.offset;\n    }\n    this.offset += len;\n    return this.buffer.slice(this.offset - len, this.offset);\n  }\n\n  // DATE, DATETIME and TIMESTAMP\n  readDateTime(timezone) {\n    if (!timezone || timezone === 'Z' || timezone === 'local') {\n      const length = this.readInt8();\n      if (length === 0xfb) {\n        return null;\n      }\n      let y = 0;\n      let m = 0;\n      let d = 0;\n      let H = 0;\n      let M = 0;\n      let S = 0;\n      let ms = 0;\n      if (length > 3) {\n        y = this.readInt16();\n        m = this.readInt8();\n        d = this.readInt8();\n      }\n      if (length > 6) {\n        H = this.readInt8();\n        M = this.readInt8();\n        S = this.readInt8();\n      }\n      if (length > 10) {\n        ms = this.readInt32() / 1000;\n      }\n      if (y + m + d + H + M + S + ms === 0) {\n        return INVALID_DATE;\n      }\n      if (timezone === 'Z') {\n        return new Date(Date.UTC(y, m - 1, d, H, M, S, ms));\n      }\n      return new Date(y, m - 1, d, H, M, S, ms);\n    }\n    let str = this.readDateTimeString(6, 'T');\n    if (str.length === 10) {\n      str += 'T00:00:00';\n    }\n    return new Date(str + timezone);\n  }\n\n  readDateTimeString(decimals, timeSep) {\n    const length = this.readInt8();\n    let y = 0;\n    let m = 0;\n    let d = 0;\n    let H = 0;\n    let M = 0;\n    let S = 0;\n    let ms = 0;\n    let str;\n    if (length > 3) {\n      y = this.readInt16();\n      m = this.readInt8();\n      d = this.readInt8();\n      str = [leftPad(4, y), leftPad(2, m), leftPad(2, d)].join('-');\n    }\n    if (length > 6) {\n      H = this.readInt8();\n      M = this.readInt8();\n      S = this.readInt8();\n      str += `${timeSep || ' '}${[\n        leftPad(2, H),\n        leftPad(2, M),\n        leftPad(2, S)\n      ].join(':')}`;\n    }\n    if (length > 10) {\n      ms = this.readInt32();\n      str += '.';\n      if (decimals) {\n        ms = leftPad(6, ms);\n        if (ms.length > decimals) {\n          ms = ms.substring(0, decimals); // rounding is done at the MySQL side, only 0 are here\n        }\n      }\n      str += ms;\n    }\n    return str;\n  }\n\n  // TIME - value as a string, Can be negative\n  readTimeString(convertTtoMs) {\n    const length = this.readInt8();\n    if (length === 0) {\n      return '00:00:00';\n    }\n    const sign = this.readInt8() ? -1 : 1; // 'isNegative' flag byte\n    let d = 0;\n    let H = 0;\n    let M = 0;\n    let S = 0;\n    let ms = 0;\n    if (length > 6) {\n      d = this.readInt32();\n      H = this.readInt8();\n      M = this.readInt8();\n      S = this.readInt8();\n    }\n    if (length > 10) {\n      ms = this.readInt32();\n    }\n    if (convertTtoMs) {\n      H += d * 24;\n      M += H * 60;\n      S += M * 60;\n      ms += S * 1000;\n      ms *= sign;\n      return ms;\n    }\n    return (\n      (sign === -1 ? '-' : '') +\n      [d ? d * 24 + H : H, leftPad(2, M), leftPad(2, S)].join(':') +\n      (ms ? `.${ms}` : '')\n    );\n  }\n\n  readLengthCodedString(encoding) {\n    const len = this.readLengthCodedNumber();\n    // TODO: check manually first byte here to avoid polymorphic return type?\n    if (len === null) {\n      return null;\n    }\n    this.offset += len;\n    // TODO: Use characterSetCode to get proper encoding\n    // https://github.com/sidorares/node-mysql2/pull/374\n    return StringParser.decode(\n      this.buffer.slice(this.offset - len, this.offset),\n      encoding\n    );\n  }\n\n  readLengthCodedBuffer() {\n    const len = this.readLengthCodedNumber();\n    if (len === null) {\n      return null;\n    }\n    return this.readBuffer(len);\n  }\n\n  readNullTerminatedString(encoding) {\n    const start = this.offset;\n    let end = this.offset;\n    while (this.buffer[end]) {\n      end = end + 1; // TODO: handle OOB check\n    }\n    this.offset = end + 1;\n    return StringParser.decode(this.buffer.slice(start, end), encoding);\n  }\n\n  // TODO reuse?\n  readString(len, encoding) {\n    if ((typeof len === 'string') && (typeof encoding === 'undefined')) {\n      encoding = len\n      len = undefined\n    }\n    if (typeof len === 'undefined') {\n      len = this.end - this.offset;\n    }\n    this.offset += len;\n    return StringParser.decode(\n      this.buffer.slice(this.offset - len, this.offset),\n      encoding\n    );\n  }\n\n  parseInt(len, supportBigNumbers) {\n    if (len === null) {\n      return null;\n    }\n    if (len >= 14 && !supportBigNumbers) {\n      const s = this.buffer.toString('ascii', this.offset, this.offset + len);\n      this.offset += len;\n      return Number(s);\n    }\n    let result = 0;\n    const start = this.offset;\n    const end = this.offset + len;\n    let sign = 1;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      sign = -1;\n    }\n    // max precise int is 9007199254740992\n    let str;\n    const numDigits = end - this.offset;\n    if (supportBigNumbers) {\n      if (numDigits >= 15) {\n        str = this.readString(end - this.offset, 'binary');\n        result = parseInt(str, 10);\n        if (result.toString() === str) {\n          return sign * result;\n        }\n        return sign === -1 ? `-${str}` : str;\n      }\n      if (numDigits > 16) {\n        str = this.readString(end - this.offset);\n        return sign === -1 ? `-${str}` : str;\n      }\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      result *= 10;\n      result += this.buffer[this.offset] - 48;\n      this.offset++;\n    }\n    const num = result * sign;\n    if (!supportBigNumbers) {\n      return num;\n    }\n    str = this.buffer.toString('ascii', start, end);\n    if (num.toString() === str) {\n      return num;\n    }\n    return str;\n  }\n\n  // note that if value of inputNumberAsString is bigger than MAX_SAFE_INTEGER\n  // ( or smaller than MIN_SAFE_INTEGER ) the parseIntNoBigCheck result might be\n  // different from what you would get from Number(inputNumberAsString)\n  // String(parseIntNoBigCheck) <> String(Number(inputNumberAsString)) <> inputNumberAsString\n  parseIntNoBigCheck(len) {\n    if (len === null) {\n      return null;\n    }\n    let result = 0;\n    const end = this.offset + len;\n    let sign = 1;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      sign = -1;\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      result *= 10;\n      result += this.buffer[this.offset] - 48;\n      this.offset++;\n    }\n    return result * sign;\n  }\n\n  // copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/Parser.js\n  parseGeometryValue() {\n    const buffer = this.readLengthCodedBuffer();\n    let offset = 4;\n    if (buffer === null || !buffer.length) {\n      return null;\n    }\n    function parseGeometry() {\n      let x, y, i, j, numPoints, line;\n      let result = null;\n      const byteOrder = buffer.readUInt8(offset);\n      offset += 1;\n      const wkbType = byteOrder\n        ? buffer.readUInt32LE(offset)\n        : buffer.readUInt32BE(offset);\n      offset += 4;\n      switch (wkbType) {\n        case 1: // WKBPoint\n          x = byteOrder\n            ? buffer.readDoubleLE(offset)\n            : buffer.readDoubleBE(offset);\n          offset += 8;\n          y = byteOrder\n            ? buffer.readDoubleLE(offset)\n            : buffer.readDoubleBE(offset);\n          offset += 8;\n          result = { x: x, y: y };\n          break;\n        case 2: // WKBLineString\n          numPoints = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = numPoints; i > 0; i--) {\n            x = byteOrder\n              ? buffer.readDoubleLE(offset)\n              : buffer.readDoubleBE(offset);\n            offset += 8;\n            y = byteOrder\n              ? buffer.readDoubleLE(offset)\n              : buffer.readDoubleBE(offset);\n            offset += 8;\n            result.push({ x: x, y: y });\n          }\n          break;\n        case 3: // WKBPolygon\n          // eslint-disable-next-line no-case-declarations\n          const numRings = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = numRings; i > 0; i--) {\n            numPoints = byteOrder\n              ? buffer.readUInt32LE(offset)\n              : buffer.readUInt32BE(offset);\n            offset += 4;\n            line = [];\n            for (j = numPoints; j > 0; j--) {\n              x = byteOrder\n                ? buffer.readDoubleLE(offset)\n                : buffer.readDoubleBE(offset);\n              offset += 8;\n              y = byteOrder\n                ? buffer.readDoubleLE(offset)\n                : buffer.readDoubleBE(offset);\n              offset += 8;\n              line.push({ x: x, y: y });\n            }\n            result.push(line);\n          }\n          break;\n        case 4: // WKBMultiPoint\n        case 5: // WKBMultiLineString\n        case 6: // WKBMultiPolygon\n        case 7: // WKBGeometryCollection\n          // eslint-disable-next-line no-case-declarations\n          const num = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = num; i > 0; i--) {\n            result.push(parseGeometry());\n          }\n          break;\n      }\n      return result;\n    }\n    return parseGeometry();\n  }\n\n  parseDate(timezone) {\n    const strLen = this.readLengthCodedNumber();\n    if (strLen === null) {\n      return null;\n    }\n    if (strLen !== 10) {\n      // we expect only YYYY-MM-DD here.\n      // if for some reason it's not the case return invalid date\n      return new Date(NaN);\n    }\n    const y = this.parseInt(4);\n    this.offset++; // -\n    const m = this.parseInt(2);\n    this.offset++; // -\n    const d = this.parseInt(2);\n    if (!timezone || timezone === 'local') {\n      return new Date(y, m - 1, d);\n    }\n    if (timezone === 'Z') {\n      return new Date(Date.UTC(y, m - 1, d));\n    }\n    return new Date(\n      `${leftPad(4, y)}-${leftPad(2, m)}-${leftPad(2, d)}T00:00:00${timezone}`\n    );\n  }\n\n  parseDateTime(timezone) {\n    const str = this.readLengthCodedString('binary');\n    if (str === null) {\n      return null;\n    }\n    if (!timezone || timezone === 'local') {\n      return new Date(str);\n    }\n    return new Date(`${str}${timezone}`);\n  }\n\n  parseFloat(len) {\n    if (len === null) {\n      return null;\n    }\n    let result = 0;\n    const end = this.offset + len;\n    let factor = 1;\n    let pastDot = false;\n    let charCode = 0;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      factor = -1;\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      charCode = this.buffer[this.offset];\n      if (charCode === dot) {\n        pastDot = true;\n        this.offset++;\n      } else if (charCode === exponent || charCode === exponentCapital) {\n        this.offset++;\n        const exponentValue = this.parseInt(end - this.offset);\n        return (result / factor) * Math.pow(10, exponentValue);\n      } else {\n        result *= 10;\n        result += this.buffer[this.offset] - 48;\n        this.offset++;\n        if (pastDot) {\n          factor = factor * 10;\n        }\n      }\n    }\n    return result / factor;\n  }\n\n  parseLengthCodedIntNoBigCheck() {\n    return this.parseIntNoBigCheck(this.readLengthCodedNumber());\n  }\n\n  parseLengthCodedInt(supportBigNumbers) {\n    return this.parseInt(this.readLengthCodedNumber(), supportBigNumbers);\n  }\n\n  parseLengthCodedIntString() {\n    return this.readLengthCodedString('binary');\n  }\n\n  parseLengthCodedFloat() {\n    return this.parseFloat(this.readLengthCodedNumber());\n  }\n\n  peekByte() {\n    return this.buffer[this.offset];\n  }\n\n  // OxFE is often used as \"Alt\" flag - not ok, not error.\n  // For example, it's first byte of AuthSwitchRequest\n  isAlt() {\n    return this.peekByte() === 0xfe;\n  }\n\n  isError() {\n    return this.peekByte() === 0xff;\n  }\n\n  asError(encoding) {\n    this.reset();\n    this.readInt8(); // fieldCount\n    const errorCode = this.readInt16();\n    let sqlState = '';\n    if (this.buffer[this.offset] === 0x23) {\n      this.skip(1);\n      sqlState = this.readBuffer(5).toString();\n    }\n    const message = this.readString(undefined, encoding);\n    const err = new Error(message);\n    err.code = ErrorCodeToName[errorCode];\n    err.errno = errorCode;\n    err.sqlState = sqlState;\n    err.sqlMessage = message;\n    return err;\n  }\n\n  writeInt32(n) {\n    this.buffer.writeUInt32LE(n, this.offset);\n    this.offset += 4;\n  }\n\n  writeInt24(n) {\n    this.writeInt8(n & 0xff);\n    this.writeInt16(n >> 8);\n  }\n\n  writeInt16(n) {\n    this.buffer.writeUInt16LE(n, this.offset);\n    this.offset += 2;\n  }\n\n  writeInt8(n) {\n    this.buffer.writeUInt8(n, this.offset);\n    this.offset++;\n  }\n\n  writeDouble(n) {\n    this.buffer.writeDoubleLE(n, this.offset);\n    this.offset += 8;\n  }\n\n  writeBuffer(b) {\n    b.copy(this.buffer, this.offset);\n    this.offset += b.length;\n  }\n\n  writeNull() {\n    this.buffer[this.offset] = 0xfb;\n    this.offset++;\n  }\n\n  // TODO: refactor following three?\n  writeNullTerminatedString(s, encoding) {\n    const buf = StringParser.encode(s, encoding);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n    this.writeInt8(0);\n  }\n\n  writeString(s, encoding) {\n    if (s === null) {\n      this.writeInt8(0xfb);\n      return;\n    }\n    if (s.length === 0) {\n      return;\n    }\n    // const bytes = Buffer.byteLength(s, 'utf8');\n    // this.buffer.write(s, this.offset, bytes, 'utf8');\n    // this.offset += bytes;\n    const buf = StringParser.encode(s, encoding);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n  }\n\n  writeLengthCodedString(s, encoding) {\n    const buf = StringParser.encode(s, encoding);\n    this.writeLengthCodedNumber(buf.length);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n  }\n\n  writeLengthCodedBuffer(b) {\n    this.writeLengthCodedNumber(b.length);\n    b.copy(this.buffer, this.offset);\n    this.offset += b.length;\n  }\n\n  writeLengthCodedNumber(n) {\n    if (n < 0xfb) {\n      return this.writeInt8(n);\n    }\n    if (n < 0xffff) {\n      this.writeInt8(0xfc);\n      return this.writeInt16(n);\n    }\n    if (n < 0xffffff) {\n      this.writeInt8(0xfd);\n      return this.writeInt24(n);\n    }\n    if (n === null) {\n      return this.writeInt8(0xfb);\n    }\n    // TODO: check that n is out of int precision\n    this.writeInt8(0xfe);\n    this.buffer.writeUInt32LE(n, this.offset);\n    this.offset += 4;\n    this.buffer.writeUInt32LE(n >> 32, this.offset);\n    this.offset += 4;\n    return this.offset;\n  }\n\n  writeDate(d, timezone) {\n    this.buffer.writeUInt8(11, this.offset);\n    if (!timezone || timezone === 'local') {\n      this.buffer.writeUInt16LE(d.getFullYear(), this.offset + 1);\n      this.buffer.writeUInt8(d.getMonth() + 1, this.offset + 3);\n      this.buffer.writeUInt8(d.getDate(), this.offset + 4);\n      this.buffer.writeUInt8(d.getHours(), this.offset + 5);\n      this.buffer.writeUInt8(d.getMinutes(), this.offset + 6);\n      this.buffer.writeUInt8(d.getSeconds(), this.offset + 7);\n      this.buffer.writeUInt32LE(d.getMilliseconds() * 1000, this.offset + 8);\n    } else {\n      if (timezone !== 'Z') {\n        const offset =\n          (timezone[0] === '-' ? -1 : 1) *\n          (parseInt(timezone.substring(1, 3), 10) * 60 +\n            parseInt(timezone.substring(4), 10));\n        if (offset !== 0) {\n          d = new Date(d.getTime() + 60000 * offset);\n        }\n      }\n      this.buffer.writeUInt16LE(d.getUTCFullYear(), this.offset + 1);\n      this.buffer.writeUInt8(d.getUTCMonth() + 1, this.offset + 3);\n      this.buffer.writeUInt8(d.getUTCDate(), this.offset + 4);\n      this.buffer.writeUInt8(d.getUTCHours(), this.offset + 5);\n      this.buffer.writeUInt8(d.getUTCMinutes(), this.offset + 6);\n      this.buffer.writeUInt8(d.getUTCSeconds(), this.offset + 7);\n      this.buffer.writeUInt32LE(d.getUTCMilliseconds() * 1000, this.offset + 8);\n    }\n    this.offset += 12;\n  }\n\n  writeHeader(sequenceId) {\n    const offset = this.offset;\n    this.offset = 0;\n    this.writeInt24(this.buffer.length - 4);\n    this.writeInt8(sequenceId);\n    this.offset = offset;\n  }\n\n  clone() {\n    return new Packet(this.sequenceId, this.buffer, this.start, this.end);\n  }\n\n  type() {\n    if (this.isEOF()) {\n      return 'EOF';\n    }\n    if (this.isError()) {\n      return 'Error';\n    }\n    if (this.buffer[this.offset] === 0) {\n      return 'maybeOK'; // could be other packet types as well\n    }\n    return '';\n  }\n\n  static lengthCodedNumberLength(n) {\n    if (n < 0xfb) {\n      return 1;\n    }\n    if (n < 0xffff) {\n      return 3;\n    }\n    if (n < 0xffffff) {\n      return 5;\n    }\n    return 9;\n  }\n\n  static lengthCodedStringLength(str, encoding) {\n    const buf = StringParser.encode(str, encoding);\n    const slen = buf.length;\n    return Packet.lengthCodedNumberLength(slen) + slen;\n  }\n\n  static MockBuffer() {\n    const noop = function() {};\n    const res = Buffer.alloc(0);\n    for (const op in NativeBuffer.prototype) {\n      if (typeof res[op] === 'function') {\n        res[op] = noop;\n      }\n    }\n    return res;\n  }\n}\n\nmodule.exports = Packet;\n", "'use strict';\n\nconst Packet = require('./packets/packet.js');\n\nconst MAX_PACKET_LENGTH = 16777215;\n\nfunction readPacketLength(b, off) {\n  const b0 = b[off];\n  const b1 = b[off + 1];\n  const b2 = b[off + 2];\n  if (b1 + b2 === 0) {\n    return b0;\n  }\n  return b0 + (b1 << 8) + (b2 << 16);\n}\n\nclass PacketParser {\n  constructor(onPacket, packetHeaderLength) {\n    // 4 for normal packets, 7 for comprssed protocol packets\n    if (typeof packetHeaderLength === 'undefined') {\n      packetHeaderLength = 4;\n    }\n    // array of last payload chunks\n    // only used when current payload is not complete\n    this.buffer = [];\n    // total length of chunks on buffer\n    this.bufferLength = 0;\n    this.packetHeaderLength = packetHeaderLength;\n    // incomplete header state: number of header bytes received\n    this.headerLen = 0;\n    // expected payload length\n    this.length = 0;\n    this.largePacketParts = [];\n    this.firstPacketSequenceId = 0;\n    this.onPacket = onPacket;\n    this.execute = PacketParser.prototype.executeStart;\n    this._flushLargePacket =\n      packetHeaderLength === 7\n        ? this._flushLargePacket7\n        : this._flushLargePacket4;\n  }\n\n  _flushLargePacket4() {\n    const numPackets = this.largePacketParts.length;\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0])); // insert header\n    const body = Buffer.concat(this.largePacketParts);\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n    this.largePacketParts.length = 0;\n    packet.numPackets = numPackets;\n    this.onPacket(packet);\n  }\n\n  _flushLargePacket7() {\n    const numPackets = this.largePacketParts.length;\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0, 0, 0, 0])); // insert header\n    const body = Buffer.concat(this.largePacketParts);\n    this.largePacketParts.length = 0;\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n    packet.numPackets = numPackets;\n    this.onPacket(packet);\n  }\n\n  executeStart(chunk) {\n    let start = 0;\n    const end = chunk.length;\n    while (end - start >= 3) {\n      this.length = readPacketLength(chunk, start);\n      if (end - start >= this.length + this.packetHeaderLength) {\n        // at least one full packet\n        const sequenceId = chunk[start + 3];\n        if (\n          this.length < MAX_PACKET_LENGTH &&\n          this.largePacketParts.length === 0\n        ) {\n          this.onPacket(\n            new Packet(\n              sequenceId,\n              chunk,\n              start,\n              start + this.packetHeaderLength + this.length\n            )\n          );\n        } else {\n          // first large packet - remember it's id\n          if (this.largePacketParts.length === 0) {\n            this.firstPacketSequenceId = sequenceId;\n          }\n          this.largePacketParts.push(\n            chunk.slice(\n              start + this.packetHeaderLength,\n              start + this.packetHeaderLength + this.length\n            )\n          );\n          if (this.length < MAX_PACKET_LENGTH) {\n            this._flushLargePacket();\n          }\n        }\n        start += this.packetHeaderLength + this.length;\n      } else {\n        // payload is incomplete\n        this.buffer = [chunk.slice(start + 3, end)];\n        this.bufferLength = end - start - 3;\n        this.execute = PacketParser.prototype.executePayload;\n        return;\n      }\n    }\n    if (end - start > 0) {\n      // there is start of length header, but it's not full 3 bytes\n      this.headerLen = end - start; // 1 or 2 bytes\n      this.length = chunk[start];\n      if (this.headerLen === 2) {\n        this.length = chunk[start] + (chunk[start + 1] << 8);\n        this.execute = PacketParser.prototype.executeHeader3;\n      } else {\n        this.execute = PacketParser.prototype.executeHeader2;\n      }\n    }\n  }\n\n  executePayload(chunk) {\n    let start = 0;\n    const end = chunk.length;\n    const remainingPayload =\n      this.length - this.bufferLength + this.packetHeaderLength - 3;\n    if (end - start >= remainingPayload) {\n      // last chunk for payload\n      const payload = Buffer.allocUnsafe(this.length + this.packetHeaderLength);\n      let offset = 3;\n      for (let i = 0; i < this.buffer.length; ++i) {\n        this.buffer[i].copy(payload, offset);\n        offset += this.buffer[i].length;\n      }\n      chunk.copy(payload, offset, start, start + remainingPayload);\n      const sequenceId = payload[3];\n      if (\n        this.length < MAX_PACKET_LENGTH &&\n        this.largePacketParts.length === 0\n      ) {\n        this.onPacket(\n          new Packet(\n            sequenceId,\n            payload,\n            0,\n            this.length + this.packetHeaderLength\n          )\n        );\n      } else {\n        // first large packet - remember it's id\n        if (this.largePacketParts.length === 0) {\n          this.firstPacketSequenceId = sequenceId;\n        }\n        this.largePacketParts.push(\n          payload.slice(\n            this.packetHeaderLength,\n            this.packetHeaderLength + this.length\n          )\n        );\n        if (this.length < MAX_PACKET_LENGTH) {\n          this._flushLargePacket();\n        }\n      }\n      this.buffer = [];\n      this.bufferLength = 0;\n      this.execute = PacketParser.prototype.executeStart;\n      start += remainingPayload;\n      if (end - start > 0) {\n        return this.execute(chunk.slice(start, end));\n      }\n    } else {\n      this.buffer.push(chunk);\n      this.bufferLength += chunk.length;\n    }\n    return null;\n  }\n\n  executeHeader2(chunk) {\n    this.length += chunk[0] << 8;\n    if (chunk.length > 1) {\n      this.length += chunk[1] << 16;\n      this.execute = PacketParser.prototype.executePayload;\n      return this.executePayload(chunk.slice(2));\n    } \n    this.execute = PacketParser.prototype.executeHeader3;\n    \n    return null;\n  }\n\n  executeHeader3(chunk) {\n    this.length += chunk[0] << 16;\n    this.execute = PacketParser.prototype.executePayload;\n    return this.executePayload(chunk.slice(1));\n  }\n}\n\nmodule.exports = PacketParser;\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = require('../packets/packet');\n\nclass AuthSwitchRequest {\n  constructor(opts) {\n    this.pluginName = opts.pluginName;\n    this.pluginData = opts.pluginData;\n  }\n\n  toPacket() {\n    const length = 6 + this.pluginName.length + this.pluginData.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    // TODO: use server encoding\n    packet.writeNullTerminatedString(this.pluginName, 'cesu8');\n    packet.writeBuffer(this.pluginData);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    // assert marker == 0xfe?\n    // TODO: use server encoding\n    const name = packet.readNullTerminatedString('cesu8');\n    const data = packet.readBuffer();\n    return new AuthSwitchRequest({\n      pluginName: name,\n      pluginData: data\n    });\n  }\n}\n\nmodule.exports = AuthSwitchRequest;\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = require('../packets/packet');\n\nclass AuthSwitchRequestMoreData {\n  constructor(data) {\n    this.data = data;\n  }\n\n  toPacket() {\n    const length = 5 + this.data.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0x01);\n    packet.writeBuffer(this.data);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const data = packet.readBuffer();\n    return new AuthSwitchRequestMoreData(data);\n  }\n\n  static verifyMarker(packet) {\n    return packet.peekByte() === 0x01;\n  }\n}\n\nmodule.exports = AuthSwitchRequestMoreData;\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = require('../packets/packet');\n\nclass AuthSwitchResponse {\n  constructor(data) {\n    if (!Buffer.isBuffer(data)) {\n      data = Buffer.from(data);\n    }\n    this.data = data;\n  }\n\n  toPacket() {\n    const length = 4 + this.data.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeBuffer(this.data);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const data = packet.readBuffer();\n    return new AuthSwitchResponse(data);\n  }\n}\n\nmodule.exports = AuthSwitchResponse;\n", "'use strict';\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nexports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nexports.TINY = 0x01; // aka TINYINT, 1 byte\nexports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nexports.LONG = 0x03; // aka INT, 4 bytes\nexports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nexports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nexports.NULL = 0x06; // NULL (used for prepared statements, I think)\nexports.TIMESTAMP = 0x07; // aka TIMESTAMP\nexports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nexports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nexports.DATE = 0x0a; // aka DATE\nexports.TIME = 0x0b; // aka TIME\nexports.DATETIME = 0x0c; // aka DATETIME\nexports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nexports.NEWDATE = 0x0e; // aka ?\nexports.VARCHAR = 0x0f; // aka VARCHAR (?)\nexports.BIT = 0x10; // aka BIT, 1-8 byte\nexports.JSON = 0xf5;\nexports.NEWDECIMAL = 0xf6; // aka DECIMAL\nexports.ENUM = 0xf7; // aka ENUM\nexports.SET = 0xf8; // aka SET\nexports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nexports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nexports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nexports.BLOB = 0xfc; // aka BLOB, TEXT\nexports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nexports.STRING = 0xfe; // aka CHAR, BINARY\nexports.GEOMETRY = 0xff; // aka GEOMETRY\n", "'use strict';\n\nconst Types = require('../constants/types');\nconst Packet = require('../packets/packet');\n\nconst binaryReader = new Array(256);\n\nclass BinaryRow {\n  constructor(columns) {\n    this.columns = columns || [];\n  }\n\n  toPacket() {\n    throw new Error('Not implemented');\n  }\n\n  // TODO: complete list of types...\n  static fromPacket(fields, packet) {\n    const columns = new Array(fields.length);\n    packet.readInt8(); // TODO check it's 0\n    const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n    // TODO: read and interpret null bitmap\n    packet.skip(nullBitmapLength);\n    for (let i = 0; i < columns.length; ++i) {\n      columns[i] = binaryReader[fields[i].columnType].apply(packet);\n    }\n    return new BinaryRow(columns);\n  }\n}\n\n// TODO: replace with constants.MYSQL_TYPE_*\nbinaryReader[Types.DECIMAL] = Packet.prototype.readLengthCodedString;\nbinaryReader[1] = Packet.prototype.readInt8; // tiny\nbinaryReader[2] = Packet.prototype.readInt16; // short\nbinaryReader[3] = Packet.prototype.readInt32; // long\nbinaryReader[4] = Packet.prototype.readFloat; // float\nbinaryReader[5] = Packet.prototype.readDouble; // double\nbinaryReader[6] = Packet.prototype.assertInvalid; // null, should be skipped vie null bitmap\nbinaryReader[7] = Packet.prototype.readTimestamp; // timestamp, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIMESTAMP\nbinaryReader[8] = Packet.prototype.readInt64; // long long\nbinaryReader[9] = Packet.prototype.readInt32; // int24\nbinaryReader[10] = Packet.prototype.readTimestamp; // date\nbinaryReader[11] = Packet.prototype.readTime; // time, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIME\nbinaryReader[12] = Packet.prototype.readDateTime; // datetime, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_DATETIME\nbinaryReader[13] = Packet.prototype.readInt16; // year\nbinaryReader[Types.VAR_STRING] = Packet.prototype.readLengthCodedString; // var string\n\nmodule.exports = BinaryRow;\n", "'use strict';\n\nmodule.exports = {\n  SLEEP: 0x00, // deprecated\n  QUIT: 0x01,\n  INIT_DB: 0x02,\n  QUERY: 0x03,\n  FIELD_LIST: 0x04,\n  CREATE_DB: 0x05,\n  DROP_DB: 0x06,\n  REFRESH: 0x07,\n  SHUTDOWN: 0x08,\n  STATISTICS: 0x09,\n  PROCESS_INFO: 0x0a, // deprecated\n  CONNECT: 0x0b, // deprecated\n  PROCESS_KILL: 0x0c,\n  DEBUG: 0x0d,\n  PING: 0x0e,\n  TIME: 0x0f, // deprecated\n  DELAYED_INSERT: 0x10, // deprecated\n  CHANGE_USER: 0x11,\n  BINLOG_DUMP: 0x12,\n  TABLE_DUMP: 0x13,\n  CONNECT_OUT: 0x14,\n  REGISTER_SLAVE: 0x15,\n  STMT_PREPARE: 0x16,\n  STMT_EXECUTE: 0x17,\n  STMT_SEND_LONG_DATA: 0x18,\n  STMT_CLOSE: 0x19,\n  STMT_RESET: 0x1a,\n  SET_OPTION: 0x1b,\n  STMT_FETCH: 0x1c,\n  DAEMON: 0x1d, // deprecated\n  BINLOG_DUMP_GTID: 0x1e,\n  UNKNOWN: 0xff // bad!\n};\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\n\nconst Packet = require('../packets/packet');\nconst CommandCodes = require('../constants/commands');\n\n// TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\nclass BinlogDump {\n  constructor(opts) {\n    this.binlogPos = opts.binlogPos || 0;\n    this.serverId = opts.serverId || 0;\n    this.flags = opts.flags || 0;\n    this.filename = opts.filename || '';\n  }\n\n  toPacket() {\n    const length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.BINLOG_DUMP);\n    packet.writeInt32(this.binlogPos);\n    packet.writeInt16(this.flags);\n    packet.writeInt32(this.serverId);\n    packet.writeString(this.filename);\n    return packet;\n  }\n}\n\nmodule.exports = BinlogDump;\n", "'use strict';\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.LONG_PASSWORD = 0x00000001; /* new more secure passwords */\nexports.FOUND_ROWS = 0x00000002; /* found instead of affected rows */\nexports.LONG_FLAG = 0x00000004; /* get all column flags */\nexports.CONNECT_WITH_DB = 0x00000008; /* one can specify db on connect */\nexports.NO_SCHEMA = 0x00000010; /* don't allow database.table.column */\nexports.COMPRESS = 0x00000020; /* can use compression protocol */\nexports.ODBC = 0x00000040; /* odbc client */\nexports.LOCAL_FILES = 0x00000080; /* can use LOAD DATA LOCAL */\nexports.IGNORE_SPACE = 0x00000100; /* ignore spaces before '' */\nexports.PROTOCOL_41 = 0x00000200; /* new 4.1 protocol */\nexports.INTERACTIVE = 0x00000400; /* this is an interactive client */\nexports.SSL = 0x00000800; /* switch to ssl after handshake */\nexports.IGNORE_SIGPIPE = 0x00001000; /* IGNORE sigpipes */\nexports.TRANSACTIONS = 0x00002000; /* client knows about transactions */\nexports.RESERVED = 0x00004000; /* old flag for 4.1 protocol  */\nexports.SECURE_CONNECTION = 0x00008000; /* new 4.1 authentication */\nexports.MULTI_STATEMENTS = 0x00010000; /* enable/disable multi-stmt support */\nexports.MULTI_RESULTS = 0x00020000; /* enable/disable multi-results */\nexports.PS_MULTI_RESULTS = 0x00040000; /* multi-results in ps-protocol */\nexports.PLUGIN_AUTH = 0x00080000; /* client supports plugin authentication */\nexports.CONNECT_ATTRS = 0x00100000; /* permits connection attributes */\nexports.PLUGIN_AUTH_LENENC_CLIENT_DATA = 0x00200000; /* Understands length-encoded integer for auth response data in Protocol::HandshakeResponse41. */\nexports.CAN_HANDLE_EXPIRED_PASSWORDS = 0x00400000; /* Announces support for expired password extension. */\nexports.SESSION_TRACK = 0x00800000; /* Can set SERVER_SESSION_STATE_CHANGED in the Status Flags and send session-state change data after a OK packet. */\nexports.DEPRECATE_EOF = 0x01000000; /* Can send OK after a Text Resultset. */\n\nexports.SSL_VERIFY_SERVER_CERT = 0x40000000;\nexports.REMEMBER_OPTIONS = 0x80000000;\n", "'use strict';\n\n/*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/\n\nconst crypto = require('crypto');\n\nfunction sha1(msg, msg1, msg2) {\n  const hash = crypto.createHash('sha1');\n  hash.update(msg);\n  if (msg1) {\n    hash.update(msg1);\n  }\n\n  if (msg2) {\n    hash.update(msg2);\n  }\n\n  return hash.digest();\n}\n\nfunction xor(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a, 'binary');\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    b = Buffer.from(b, 'binary');\n  }\n\n  const result = Buffer.allocUnsafe(a.length);\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}\n\nexports.xor = xor;\n\nfunction token(password, scramble1, scramble2) {\n  // TODO: use buffers (not sure why strings here)\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha1(password);\n  return exports.calculateTokenFromPasswordSha(stage1, scramble1, scramble2);\n}\n\nexports.calculateTokenFromPasswordSha = function(\n  passwordSha,\n  scramble1,\n  scramble2\n) {\n  // we use AUTH 41 here, and we need only the bytes we just need.\n  const authPluginData1 = scramble1.slice(0, 8);\n  const authPluginData2 = scramble2.slice(0, 12);\n  const stage2 = sha1(passwordSha);\n  const stage3 = sha1(authPluginData1, authPluginData2, stage2);\n  return xor(stage3, passwordSha);\n};\n\nexports.calculateToken = token;\n\nexports.verifyToken = function(publicSeed1, publicSeed2, token, doubleSha) {\n  const hashStage1 = xor(token, sha1(publicSeed1, publicSeed2, doubleSha));\n  const candidateHash2 = sha1(hashStage1);\n  return candidateHash2.compare(doubleSha) === 0;\n};\n\nexports.doubleSha1 = function(password) {\n  return sha1(sha1(password));\n};\n\nfunction xorRotating(a, seed) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a, 'binary');\n  }\n\n  if (!Buffer.isBuffer(seed)) {\n    seed = Buffer.from(seed, 'binary');\n  }\n\n  const result = Buffer.allocUnsafe(a.length);\n  const seedLen = seed.length;\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ seed[i % seedLen];\n  }\n  return result;\n}\nexports.xorRotating = xorRotating;\n", "'use strict';\n\n// see tools/generate-charset-mapping.js\n// basicalliy result of \"SHOW COLLATION\" query\n\nmodule.exports = [\n  'utf8',\n  'big5',\n  'latin2',\n  'dec8',\n  'cp850',\n  'latin1',\n  'hp8',\n  'koi8r',\n  'latin1',\n  'latin2',\n  'swe7',\n  'ascii',\n  'eucjp',\n  'sjis',\n  'cp1251',\n  'latin1',\n  'hebrew',\n  'utf8',\n  'tis620',\n  'euckr',\n  'latin7',\n  'latin2',\n  'koi8u',\n  'cp1251',\n  'gb2312',\n  'greek',\n  'cp1250',\n  'latin2',\n  'gbk',\n  'cp1257',\n  'latin5',\n  'latin1',\n  'armscii8',\n  'cesu8',\n  'cp1250',\n  'ucs2',\n  'cp866',\n  'keybcs2',\n  'macintosh',\n  'macroman',\n  'cp852',\n  'latin7',\n  'latin7',\n  'macintosh',\n  'cp1250',\n  'utf8',\n  'utf8',\n  'latin1',\n  'latin1',\n  'latin1',\n  'cp1251',\n  'cp1251',\n  'cp1251',\n  'macroman',\n  'utf16',\n  'utf16',\n  'utf16-le',\n  'cp1256',\n  'cp1257',\n  'cp1257',\n  'utf32',\n  'utf32',\n  'utf16-le',\n  'binary',\n  'armscii8',\n  'ascii',\n  'cp1250',\n  'cp1256',\n  'cp866',\n  'dec8',\n  'greek',\n  'hebrew',\n  'hp8',\n  'keybcs2',\n  'koi8r',\n  'koi8u',\n  'cesu8',\n  'latin2',\n  'latin5',\n  'latin7',\n  'cp850',\n  'cp852',\n  'swe7',\n  'cesu8',\n  'big5',\n  'euckr',\n  'gb2312',\n  'gbk',\n  'sjis',\n  'tis620',\n  'ucs2',\n  'eucjp',\n  'geostd8',\n  'geostd8',\n  'latin1',\n  'cp932',\n  'cp932',\n  'eucjpms',\n  'eucjpms',\n  'cp1250',\n  'utf8',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf8',\n  'utf8',\n  'utf8',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'ucs2',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'cesu8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'gb18030',\n  'gb18030',\n  'gb18030',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8'\n];\n", "'use strict';\n\nconst CommandCode = require('../constants/commands.js');\nconst ClientConstants = require('../constants/client.js');\nconst Packet = require('../packets/packet.js');\nconst auth41 = require('../auth_41.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\n// https://dev.mysql.com/doc/internals/en/com-change-user.html#packet-COM_CHANGE_USER\nclass ChangeUser {\n  constructor(opts) {\n    this.flags = opts.flags;\n    this.user = opts.user || '';\n    this.database = opts.database || '';\n    this.password = opts.password || '';\n    this.passwordSha1 = opts.passwordSha1;\n    this.authPluginData1 = opts.authPluginData1;\n    this.authPluginData2 = opts.authPluginData2;\n    this.connectAttributes = opts.connectAttrinutes || {};\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    }\n    this.authToken = authToken;\n    this.charsetNumber = opts.charsetNumber;\n  }\n\n  // TODO\n  // ChangeUser.fromPacket = function(packet)\n  // };\n  serializeToBuffer(buffer) {\n    const isSet = flag => this.flags & ClientConstants[flag];\n    const packet = new Packet(0, buffer, 0, buffer.length);\n    packet.offset = 4;\n    const encoding = CharsetToEncoding[this.charsetNumber];\n    packet.writeInt8(CommandCode.CHANGE_USER);\n    packet.writeNullTerminatedString(this.user, encoding);\n    if (isSet('SECURE_CONNECTION')) {\n      packet.writeInt8(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else {\n      packet.writeBuffer(this.authToken);\n      packet.writeInt8(0);\n    }\n    packet.writeNullTerminatedString(this.database, encoding);\n    packet.writeInt16(this.charsetNumber);\n    if (isSet('PLUGIN_AUTH')) {\n      // TODO: read this from parameters\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const connectAttributes = this.connectAttributes;\n      const attrNames = Object.keys(connectAttributes);\n      let keysLength = 0;\n      for (let k = 0; k < attrNames.length; ++k) {\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n        keysLength += Packet.lengthCodedStringLength(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n      packet.writeLengthCodedNumber(keysLength);\n      for (let k = 0; k < attrNames.length; ++k) {\n        packet.writeLengthCodedString(attrNames[k], encoding);\n        packet.writeLengthCodedString(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n    }\n    return packet;\n  }\n\n  toPacket() {\n    if (typeof this.user !== 'string') {\n      throw new Error('\"user\" connection config property must be a string');\n    }\n    if (typeof this.database !== 'string') {\n      throw new Error('\"database\" connection config property must be a string');\n    }\n    // dry run: calculate resulting packet length\n    const p = this.serializeToBuffer(Packet.MockBuffer());\n    return this.serializeToBuffer(Buffer.allocUnsafe(p.offset));\n  }\n}\n\nmodule.exports = ChangeUser;\n", "'use strict';\n\nconst Packet = require('../packets/packet');\nconst CommandCodes = require('../constants/commands');\n\nclass CloseStatement {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // note: no response sent back\n  toPacket() {\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_CLOSE);\n    packet.writeInt32(this.id);\n    return packet;\n  }\n}\n\nmodule.exports = CloseStatement;\n", "'use strict';\n\nconst Packet = require('../packets/packet');\nconst StringParser = require('../parsers/string');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nconst fields = ['catalog', 'schema', 'table', 'orgTable', 'name', 'orgName'];\n\n// creating JS string is relatively expensive (compared to\n// reading few bytes from buffer) because all string properties\n// except for name are unlikely to be used we postpone\n// string conversion until property access\n//\n// TODO: watch for integration benchmarks (one with real network buffer)\n// there could be bad side effect as keeping reference to a buffer makes it\n// sit in the memory longer (usually until final .query() callback)\n// Latest v8 perform much better in regard to bufferer -> string conversion,\n// at some point of time this optimisation might become unnecessary\n// see https://github.com/sidorares/node-mysql2/pull/137\n//\nclass ColumnDefinition {\n  constructor(packet, clientEncoding) {\n    this._buf = packet.buffer;\n    this._clientEncoding = clientEncoding;\n    this._catalogLength = packet.readLengthCodedNumber();\n    this._catalogStart = packet.offset;\n    packet.offset += this._catalogLength;\n    this._schemaLength = packet.readLengthCodedNumber();\n    this._schemaStart = packet.offset;\n    packet.offset += this._schemaLength;\n    this._tableLength = packet.readLengthCodedNumber();\n    this._tableStart = packet.offset;\n    packet.offset += this._tableLength;\n    this._orgTableLength = packet.readLengthCodedNumber();\n    this._orgTableStart = packet.offset;\n    packet.offset += this._orgTableLength;\n    // name is always used, don't make it lazy\n    const _nameLength = packet.readLengthCodedNumber();\n    const _nameStart = packet.offset;\n    packet.offset += _nameLength;\n    this._orgNameLength = packet.readLengthCodedNumber();\n    this._orgNameStart = packet.offset;\n    packet.offset += this._orgNameLength;\n    packet.skip(1); //  length of the following fields (always 0x0c)\n    this.characterSet = packet.readInt16();\n    this.encoding = CharsetToEncoding[this.characterSet];\n    this.name = StringParser.decode(\n      this._buf.slice(_nameStart, _nameStart + _nameLength),\n      this.encoding === 'binary' ? this._clientEncoding : this.encoding\n    );\n    this.columnLength = packet.readInt32();\n    this.columnType = packet.readInt8();\n    this.flags = packet.readInt16();\n    this.decimals = packet.readInt8();\n  }\n\n  inspect() {\n    return {\n      catalog: this.catalog,\n      schema: this.schema,\n      name: this.name,\n      orgName: this.orgName,\n      table: this.table,\n      orgTable: this.orgTable,\n      characterSet: this.characterSet,\n      columnLength: this.columnLength,\n      columnType: this.columnType,\n      flags: this.flags,\n      decimals: this.decimals\n    };\n  }\n\n  static toPacket(column, sequenceId) {\n    let length = 17; // = 4 padding + 1 + 12 for the rest\n    fields.forEach(field => {\n      length += Packet.lengthCodedStringLength(\n        column[field],\n        CharsetToEncoding[column.characterSet]\n      );\n    });\n    const buffer = Buffer.allocUnsafe(length);\n\n    const packet = new Packet(sequenceId, buffer, 0, length);\n    function writeField(name) {\n      packet.writeLengthCodedString(\n        column[name],\n        CharsetToEncoding[column.characterSet]\n      );\n    }\n    packet.offset = 4;\n    fields.forEach(writeField);\n    packet.writeInt8(0x0c);\n    packet.writeInt16(column.characterSet);\n    packet.writeInt32(column.columnLength);\n    packet.writeInt8(column.columnType);\n    packet.writeInt16(column.flags);\n    packet.writeInt8(column.decimals);\n    packet.writeInt16(0); // filler\n    return packet;\n  }\n\n  // node-mysql compatibility: alias \"db\" to \"schema\"\n  get db() {\n    const start = this._schemaStart;\n    const end = start._shemaLength;\n    return this._buf.utf8Slice(start, end);\n  }\n}\n\nconst addString = function(name) {\n  Object.defineProperty(ColumnDefinition.prototype, name, {\n    get: function() {\n      const start = this[`_${name}Start`];\n      const end = start + this[`_${name}Length`];\n      return StringParser.decode(\n        this._buf.slice(start, end),\n        this.encoding === 'binary' ? this._clientEncoding : this.encoding\n      );\n    }\n  });\n};\n\naddString('catalog');\naddString('schema');\naddString('table');\naddString('orgTable');\naddString('orgName');\n\nmodule.exports = ColumnDefinition;\n", "'use strict';\n\nmodule.exports = {\n  NO_CURSOR: 0,\n  READ_ONLY: 1,\n  FOR_UPDATE: 2,\n  SCROLLABLE: 3\n};\n", "'use strict';\n\nconst CursorType = require('../constants/cursor');\nconst CommandCodes = require('../constants/commands');\nconst Types = require('../constants/types');\nconst Packet = require('../packets/packet');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nfunction isJSON(value) {\n  return (\n    Array.isArray(value) ||\n    value.constructor === Object ||\n    (typeof value.toJSON === 'function' && !Buffer.isBuffer(value))\n  );\n}\n\n/**\n * Converts a value to an object describing type, String/Buffer representation and length\n * @param {*} value\n */\nfunction toParameter(value, encoding, timezone) {\n  let type = Types.VAR_STRING;\n  let length;\n  let writer = function(value) {\n    // eslint-disable-next-line no-invalid-this\n    return Packet.prototype.writeLengthCodedString.call(this, value, encoding);\n  };\n  if (value !== null) {\n    switch (typeof value) {\n      case 'undefined':\n        throw new TypeError('Bind parameters must not contain undefined');\n\n      case 'number':\n        type = Types.DOUBLE;\n        length = 8;\n        writer = Packet.prototype.writeDouble;\n        break;\n\n      case 'boolean':\n        value = value | 0;\n        type = Types.TINY;\n        length = 1;\n        writer = Packet.prototype.writeInt8;\n        break;\n\n      case 'object':\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          type = Types.DATETIME;\n          length = 12;\n          writer = function(value) {\n            // eslint-disable-next-line no-invalid-this\n            return Packet.prototype.writeDate.call(this, value, timezone);\n          };\n        } else if (isJSON(value)) {\n          value = JSON.stringify(value);\n          type = Types.JSON;\n        } else if (Buffer.isBuffer(value)) {\n          length = Packet.lengthCodedNumberLength(value.length) + value.length;\n          writer = Packet.prototype.writeLengthCodedBuffer;\n        }\n        break;\n\n      default:\n        value = value.toString();\n    }\n  } else {\n    value = '';\n    type = Types.NULL;\n  }\n  if (!length) {\n    length = Packet.lengthCodedStringLength(value, encoding);\n  }\n  return { value, type, length, writer };\n}\n\nclass Execute {\n  constructor(id, parameters, charsetNumber, timezone) {\n    this.id = id;\n    this.parameters = parameters;\n    this.encoding = CharsetToEncoding[charsetNumber];\n    this.timezone = timezone;\n  }\n\n  toPacket() {\n    // TODO: don't try to calculate packet length in advance, allocate some big buffer in advance (header + 256 bytes?)\n    // and copy + reallocate if not enough\n    // 0 + 4 - length, seqId\n    // 4 + 1 - COM_EXECUTE\n    // 5 + 4 - stmtId\n    // 9 + 1 - flags\n    // 10 + 4 - iteration-count (always 1)\n    let length = 14;\n    let parameters;\n    if (this.parameters && this.parameters.length > 0) {\n      length += Math.floor((this.parameters.length + 7) / 8);\n      length += 1; // new-params-bound-flag\n      length += 2 * this.parameters.length; // type byte for each parameter if new-params-bound-flag is set\n      parameters = this.parameters.map(value =>\n        toParameter(value, this.encoding, this.timezone)\n      );\n      length += parameters.reduce(\n        (accumulator, parameter) => accumulator + parameter.length,\n        0\n      );\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_EXECUTE);\n    packet.writeInt32(this.id);\n    packet.writeInt8(CursorType.NO_CURSOR); // flags\n    packet.writeInt32(1); // iteration-count, always 1\n    if (parameters) {\n      let bitmap = 0;\n      let bitValue = 1;\n      parameters.forEach(parameter => {\n        if (parameter.type === Types.NULL) {\n          bitmap += bitValue;\n        }\n        bitValue *= 2;\n        if (bitValue === 256) {\n          packet.writeInt8(bitmap);\n          bitmap = 0;\n          bitValue = 1;\n        }\n      });\n      if (bitValue !== 1) {\n        packet.writeInt8(bitmap);\n      }\n      // TODO: explain meaning of the flag\n      // afaik, if set n*2 bytes with type of parameter are sent before parameters\n      // if not, previous execution types are used (TODO prooflink)\n      packet.writeInt8(1); // new-params-bound-flag\n      // Write parameter types\n      parameters.forEach(parameter => {\n        packet.writeInt8(parameter.type); // field type\n        packet.writeInt8(0); // parameter flag\n      });\n      // Write parameter values\n      parameters.forEach(parameter => {\n        if (parameter.type !== Types.NULL) {\n          parameter.writer.call(packet, parameter.value);\n        }\n      });\n    }\n    return packet;\n  }\n}\n\nmodule.exports = Execute;\n", "'use strict';\n\nconst Packet = require('../packets/packet');\nconst ClientConstants = require('../constants/client.js');\n\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\nclass Handshake {\n  constructor(args) {\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  setScrambleData(cb) {\n    require('crypto').randomBytes(20, (err, data) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.authPluginData1 = data.slice(0, 8);\n      this.authPluginData2 = data.slice(8, 20);\n      cb();\n    });\n  }\n\n  toPacket(sequenceId) {\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    packet.writeInt8(this.protocolVersion);\n    packet.writeString(this.serverVersion, 'cesu8');\n    packet.writeInt8(0);\n    packet.writeInt32(this.connectionId);\n    packet.writeBuffer(this.authPluginData1);\n    packet.writeInt8(0);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n    packet.writeInt8(this.characterSet);\n    packet.writeInt16(this.statusFlags);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n    packet.writeInt8(21); // authPluginDataLength\n    packet.skip(10);\n    packet.writeBuffer(this.authPluginData2);\n    packet.writeInt8(0);\n    packet.writeString('mysql_native_password', 'latin1');\n    packet.writeInt8(0);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const args = {};\n    args.protocolVersion = packet.readInt8();\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\n    args.connectionId = packet.readInt32();\n    args.authPluginData1 = packet.readBuffer(8);\n    packet.skip(1);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer[0] = packet.readInt8();\n    capabilityFlagsBuffer[1] = packet.readInt8();\n    if (packet.haveMoreData()) {\n      args.characterSet = packet.readInt8();\n      args.statusFlags = packet.readInt16();\n      // upper 2 bytes\n      capabilityFlagsBuffer[2] = packet.readInt8();\n      capabilityFlagsBuffer[3] = packet.readInt8();\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.authPluginDataLength = packet.readInt8();\n      } else {\n        args.authPluginDataLength = 0;\n        packet.skip(1);\n      }\n      packet.skip(10);\n    } else {\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n    }\n\n    const isSecureConnection =\n      args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n    if (isSecureConnection) {\n      const authPluginDataLength = args.authPluginDataLength;\n      if (authPluginDataLength === 0) {\n        // for Secure Password Authentication\n        args.authPluginDataLength = 20;\n        args.authPluginData2 = packet.readBuffer(12);\n        packet.skip(1);\n      } else {\n        // length > 0\n        // for Custom Auth Plugin (PLUGIN_AUTH)\n        const len = Math.max(13, authPluginDataLength - 8);\n        args.authPluginData2 = packet.readBuffer(len);\n      }\n    }\n\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n      args.autPluginName = packet.readNullTerminatedString('ascii');\n    }\n\n    return new Handshake(args);\n  }\n}\n\nmodule.exports = Handshake;\n", "'use strict';\n\nconst ClientConstants = require('../constants/client.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\nconst Packet = require('../packets/packet.js');\n\nconst auth41 = require('../auth_41.js');\n\nclass HandshakeResponse {\n  constructor(handshake) {\n    this.user = handshake.user || '';\n    this.database = handshake.database || '';\n    this.password = handshake.password || '';\n    this.passwordSha1 = handshake.passwordSha1;\n    this.authPluginData1 = handshake.authPluginData1;\n    this.authPluginData2 = handshake.authPluginData2;\n    this.compress = handshake.compress;\n    this.clientFlags = handshake.flags;\n    // TODO: pre-4.1 auth support\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    }\n    this.authToken = authToken;\n    this.charsetNumber = handshake.charsetNumber;\n    this.encoding = CharsetToEncoding[handshake.charsetNumber];\n    this.connectAttributes = handshake.connectAttributes;\n  }\n\n  serializeResponse(buffer) {\n    const isSet = flag => this.clientFlags & ClientConstants[flag];\n    const packet = new Packet(0, buffer, 0, buffer.length);\n    packet.offset = 4;\n    packet.writeInt32(this.clientFlags);\n    packet.writeInt32(0); // max packet size. todo: move to config\n    packet.writeInt8(this.charsetNumber);\n    packet.skip(23);\n    const encoding = this.encoding;\n    packet.writeNullTerminatedString(this.user, encoding);\n    let k;\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\n      packet.writeLengthCodedNumber(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else if (isSet('SECURE_CONNECTION')) {\n      packet.writeInt8(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else {\n      packet.writeBuffer(this.authToken);\n      packet.writeInt8(0);\n    }\n    if (isSet('CONNECT_WITH_DB')) {\n      packet.writeNullTerminatedString(this.database, encoding);\n    }\n    if (isSet('PLUGIN_AUTH')) {\n      // TODO: pass from config\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const connectAttributes = this.connectAttributes || {};\n      const attrNames = Object.keys(connectAttributes);\n      let keysLength = 0;\n      for (k = 0; k < attrNames.length; ++k) {\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n        keysLength += Packet.lengthCodedStringLength(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n      packet.writeLengthCodedNumber(keysLength);\n      for (k = 0; k < attrNames.length; ++k) {\n        packet.writeLengthCodedString(attrNames[k], encoding);\n        packet.writeLengthCodedString(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n    }\n    return packet;\n  }\n\n  toPacket() {\n    if (typeof this.user !== 'string') {\n      throw new Error('\"user\" connection config property must be a string');\n    }\n    if (typeof this.database !== 'string') {\n      throw new Error('\"database\" connection config property must be a string');\n    }\n    // dry run: calculate resulting packet length\n    const p = this.serializeResponse(Packet.MockBuffer());\n    return this.serializeResponse(Buffer.alloc(p.offset));\n  }\n  static fromPacket(packet) {\n    const args = {};\n    args.clientFlags = packet.readInt32();\n    function isSet(flag) {\n      return args.clientFlags & ClientConstants[flag];\n    }\n    args.maxPacketSize = packet.readInt32();\n    args.charsetNumber = packet.readInt8();\n    const encoding = CharsetToEncoding[args.charsetNumber];\n    args.encoding = encoding;\n    packet.skip(23);\n    args.user = packet.readNullTerminatedString(encoding);\n    let authTokenLength;\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\n      authTokenLength = packet.readLengthCodedNumber(encoding);\n      args.authToken = packet.readBuffer(authTokenLength);\n    } else if (isSet('SECURE_CONNECTION')) {\n      authTokenLength = packet.readInt8();\n      args.authToken = packet.readBuffer(authTokenLength);\n    } else {\n      args.authToken = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('CONNECT_WITH_DB')) {\n      args.database = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('PLUGIN_AUTH')) {\n      args.authPluginName = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const keysLength = packet.readLengthCodedNumber(encoding);\n      const keysEnd = packet.offset + keysLength;\n      const attrs = {};\n      while (packet.offset < keysEnd) {\n        attrs[\n          packet.readLengthCodedString(encoding)\n        ] = packet.readLengthCodedString(encoding);\n      }\n      args.connectAttributes = attrs;\n    }\n    return args;\n  }\n}\n\nmodule.exports = HandshakeResponse;\n", "'use strict';\n\nconst Packet = require('../packets/packet');\nconst CommandCodes = require('../constants/commands');\nconst StringParser = require('../parsers/string.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nclass PrepareStatement {\n  constructor(sql, charsetNumber) {\n    this.query = sql;\n    this.charsetNumber = charsetNumber;\n    this.encoding = CharsetToEncoding[charsetNumber];\n  }\n\n  toPacket() {\n    const buf = StringParser.encode(this.query, this.encoding);\n    const length = 5 + buf.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_PREPARE);\n    packet.writeBuffer(buf);\n    return packet;\n  }\n}\n\nmodule.exports = PrepareStatement;\n", "'use strict';\n\nclass PreparedStatementHeader {\n  constructor(packet) {\n    packet.skip(1); // should be 0\n    this.id = packet.readInt32();\n    this.fieldCount = packet.readInt16();\n    this.parameterCount = packet.readInt16();\n    packet.skip(1); // should be 0\n    this.warningCount = packet.readInt16();\n  }\n}\n\n// TODO: toPacket\n\nmodule.exports = PreparedStatementHeader;\n", "'use strict';\n\nconst Packet = require('../packets/packet.js');\nconst CommandCode = require('../constants/commands.js');\nconst StringParser = require('../parsers/string.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nclass Query {\n  constructor(sql, charsetNumber) {\n    this.query = sql;\n    this.charsetNumber = charsetNumber;\n    this.encoding = CharsetToEncoding[charsetNumber];\n  }\n\n  toPacket() {\n    const buf = StringParser.encode(this.query, this.encoding);\n    const length = 5 + buf.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCode.QUERY);\n    packet.writeBuffer(buf);\n    return packet;\n  }\n}\n\nmodule.exports = Query;\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/com-register-slave.html\n// note that documentation is incorrect, for example command code is actually 0x15 but documented as 0x14\n\nconst Packet = require('../packets/packet');\nconst CommandCodes = require('../constants/commands');\n\nclass RegisterSlave {\n  constructor(opts) {\n    this.serverId = opts.serverId || 0;\n    this.slaveHostname = opts.slaveHostname || '';\n    this.slaveUser = opts.slaveUser || '';\n    this.slavePassword = opts.slavePassword || '';\n    this.slavePort = opts.slavePort || 0;\n    this.replicationRank = opts.replicationRank || 0;\n    this.masterId = opts.masterId || 0;\n  }\n\n  toPacket() {\n    const length =\n      15 + // TODO: should be ascii?\n      Buffer.byteLength(this.slaveHostname, 'utf8') +\n      Buffer.byteLength(this.slaveUser, 'utf8') +\n      Buffer.byteLength(this.slavePassword, 'utf8') +\n      3 +\n      4;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.REGISTER_SLAVE);\n    packet.writeInt32(this.serverId);\n    packet.writeInt8(Buffer.byteLength(this.slaveHostname, 'utf8'));\n    packet.writeString(this.slaveHostname);\n    packet.writeInt8(Buffer.byteLength(this.slaveUser, 'utf8'));\n    packet.writeString(this.slaveUser);\n    packet.writeInt8(Buffer.byteLength(this.slavePassword, 'utf8'));\n    packet.writeString(this.slavePassword);\n    packet.writeInt16(this.slavePort);\n    packet.writeInt32(this.replicationRank);\n    packet.writeInt32(this.masterId);\n    return packet;\n  }\n}\n\nmodule.exports = RegisterSlave;\n", "'use strict';\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n\n/**\n  Is raised when a multi-statement transaction\n  has been started, either explicitly, by means\n  of BEGIN or COMMIT AND CHAIN, or\n  implicitly, by the first transactional\n  statement, when autocommit=off.\n*/\nexports.SERVER_STATUS_IN_TRANS = 1;\nexports.SERVER_STATUS_AUTOCOMMIT = 2; /* Server in auto_commit mode */\nexports.SERVER_MORE_RESULTS_EXISTS = 8; /* Multi query - next query exists */\nexports.SERVER_QUERY_NO_GOOD_INDEX_USED = 16;\nexports.SERVER_QUERY_NO_INDEX_USED = 32;\n/**\n  The server was able to fulfill the clients request and opened a\n  read-only non-scrollable cursor for a query. This flag comes\n  in reply to COM_STMT_EXECUTE and COM_STMT_FETCH commands.\n*/\nexports.SERVER_STATUS_CURSOR_EXISTS = 64;\n/**\n  This flag is sent when a read-only cursor is exhausted, in reply to\n  COM_STMT_FETCH command.\n*/\nexports.SERVER_STATUS_LAST_ROW_SENT = 128;\nexports.SERVER_STATUS_DB_DROPPED = 256; /* A database was dropped */\nexports.SERVER_STATUS_NO_BACKSLASH_ESCAPES = 512;\n/**\n  Sent to the client if after a prepared statement reprepare\n  we discovered that the new statement returns a different\n  number of result set columns.\n*/\nexports.SERVER_STATUS_METADATA_CHANGED = 1024;\nexports.SERVER_QUERY_WAS_SLOW = 2048;\n\n/**\n  To mark ResultSet containing output parameter values.\n*/\nexports.SERVER_PS_OUT_PARAMS = 4096;\n\nexports.SERVER_STATUS_IN_TRANS_READONLY = 0x2000; // in a read-only transaction\nexports.SERVER_SESSION_STATE_CHANGED = 0x4000;\n", "'use strict';\n\n// inverse of charset_encodings\n// given encoding, get matching mysql charset number\n\nmodule.exports = {\n  big5: 1,\n  latin2: 2,\n  dec8: 3,\n  cp850: 4,\n  latin1: 5,\n  hp8: 6,\n  koi8r: 7,\n  swe7: 10,\n  ascii: 11,\n  eucjp: 12,\n  sjis: 13,\n  cp1251: 14,\n  hebrew: 16,\n  tis620: 18,\n  euckr: 19,\n  latin7: 20,\n  koi8u: 22,\n  gb2312: 24,\n  greek: 25,\n  cp1250: 26,\n  gbk: 28,\n  cp1257: 29,\n  latin5: 30,\n  armscii8: 32,\n  cesu8: 33,\n  ucs2: 35,\n  cp866: 36,\n  keybcs2: 37,\n  macintosh: 38,\n  macroman: 39,\n  cp852: 40,\n  utf8: 45,\n  utf8mb4: 45,\n  utf16: 54,\n  utf16le: 56,\n  cp1256: 57,\n  utf32: 60,\n  binary: 63,\n  geostd8: 92,\n  cp932: 95,\n  eucjpms: 97,\n  gb18030: 248\n};\n", "'use strict';\n\nexports.SYSTEM_VARIABLES = 0;\nexports.SCHEMA = 1;\nexports.STATE_CHANGE = 2;\nexports.STATE_GTIDS = 3;\nexports.TRANSACTION_CHARACTERISTICS = 4;\nexports.TRANSACTION_STATE = 5;\n\nexports.FIRST_KEY = exports.SYSTEM_VARIABLES;\nexports.LAST_KEY = exports.TRANSACTION_STATE;\n", "'use strict';\n\n// TODO: rename to OK packet\n// https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html\n\nconst Packet = require('./packet.js');\nconst ClientConstants = require('../constants/client.js');\nconst ServerSatusFlags = require('../constants/server_status.js');\n\nconst EncodingToCharset = require('../constants/encoding_charset.js');\nconst sessionInfoTypes = require('../constants/session_track.js');\n\nclass ResultSetHeader {\n  constructor(packet, connection) {\n    const bigNumberStrings = connection.config.bigNumberStrings;\n    const encoding = connection.serverEncoding;\n    const flags = connection._handshakePacket.capabilityFlags;\n    const isSet = function(flag) {\n      return flags & ClientConstants[flag];\n    };\n    if (packet.buffer[packet.offset] !== 0) {\n      this.fieldCount = packet.readLengthCodedNumber();\n      if (this.fieldCount === null) {\n        this.infileName = packet.readString(undefined, encoding);\n      }\n      return;\n    }\n    this.fieldCount = packet.readInt8(); // skip OK byte\n    this.affectedRows = packet.readLengthCodedNumber(bigNumberStrings);\n    this.insertId = packet.readLengthCodedNumberSigned(bigNumberStrings);\n    this.info = '';\n    if (isSet('PROTOCOL_41')) {\n      this.serverStatus = packet.readInt16();\n      this.warningStatus = packet.readInt16();\n    } else if (isSet('TRANSACTIONS')) {\n      this.serverStatus = packet.readInt16();\n    }\n    let stateChanges = null;\n    if (isSet('SESSION_TRACK') && packet.offset < packet.end) {\n      this.info = packet.readLengthCodedString(encoding);\n\n      if (this.serverStatus && ServerSatusFlags.SERVER_SESSION_STATE_CHANGED) {\n        // session change info record - see\n        // https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html#cs-sect-packet-ok-sessioninfo\n        let len =\n          packet.offset < packet.end ? packet.readLengthCodedNumber() : 0;\n        const end = packet.offset + len;\n        let type, key, stateEnd;\n        if (len > 0) {\n          stateChanges = {\n            systemVariables: {},\n            schema: null,\n            trackStateChange: null\n          };\n        }\n        while (packet.offset < end) {\n          type = packet.readInt8();\n          len = packet.readLengthCodedNumber();\n          stateEnd = packet.offset + len;\n          if (type === sessionInfoTypes.SYSTEM_VARIABLES) {\n            key = packet.readLengthCodedString(encoding);\n            const val = packet.readLengthCodedString(encoding);\n            stateChanges.systemVariables[key] = val;\n            if (key === 'character_set_client') {\n              const charsetNumber = EncodingToCharset[val];\n              connection.config.charsetNumber = charsetNumber;\n            }\n          } else if (type === sessionInfoTypes.SCHEMA) {\n            key = packet.readLengthCodedString(encoding);\n            stateChanges.schema = key;\n          } else if (type === sessionInfoTypes.STATE_CHANGE) {\n            stateChanges.trackStateChange = packet.readLengthCodedString(\n              encoding\n            );\n          } else {\n            // unsupported session track type. For now just ignore\n          }\n          packet.offset = stateEnd;\n        }\n      }\n    } else {\n      this.info = packet.readString(undefined, encoding);\n    }\n    if (stateChanges) {\n      this.stateChanges = stateChanges;\n    }\n    const m = this.info.match(/\\schanged:\\s*(\\d+)/i);\n    if (m !== null) {\n      this.changedRows = parseInt(m[1], 10);\n    }\n  }\n\n  // TODO: should be consistent instance member, but it's just easier here to have just function\n  static toPacket(fieldCount, insertId) {\n    let length = 4 + Packet.lengthCodedNumberLength(fieldCount);\n    if (typeof insertId !== 'undefined') {\n      length += Packet.lengthCodedNumberLength(insertId);\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeLengthCodedNumber(fieldCount);\n    if (typeof insertId !== 'undefined') {\n      packet.writeLengthCodedNumber(insertId);\n    }\n    return packet;\n  }\n}\n\nmodule.exports = ResultSetHeader;\n", "'use strict';\n\nconst ClientConstants = require('../constants/client');\nconst Packet = require('../packets/packet');\n\nclass SSLRequest {\n  constructor(flags, charset) {\n    this.clientFlags = flags | ClientConstants.SSL;\n    this.charset = charset;\n  }\n\n  toPacket() {\n    const length = 36;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    buffer.fill(0);\n    packet.offset = 4;\n    packet.writeInt32(this.clientFlags);\n    packet.writeInt32(0); // max packet size. todo: move to config\n    packet.writeInt8(this.charset);\n    return packet;\n  }\n}\n\nmodule.exports = SSLRequest;\n", "'use strict';\n\nconst Packet = require('../packets/packet');\n\nclass TextRow {\n  constructor(columns) {\n    this.columns = columns || [];\n  }\n\n  static fromPacket(packet) {\n    // packet.reset(); // set offset to starting point?\n    const columns = [];\n    while (packet.haveMoreData()) {\n      columns.push(packet.readLengthCodedString());\n    }\n    return new TextRow(columns);\n  }\n\n  static toPacket(columns, encoding) {\n    const sequenceId = 0; // TODO remove, this is calculated now in connecton\n    let length = 0;\n    columns.forEach(val => {\n      if (val === null || typeof val === 'undefined') {\n        ++length;\n        return;\n      }\n      length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n    });\n    const buffer = Buffer.allocUnsafe(length + 4);\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    columns.forEach(val => {\n      if (val === null) {\n        packet.writeNull();\n        return;\n      }\n      if (typeof val === 'undefined') {\n        packet.writeInt8(0);\n        return;\n      }\n      packet.writeLengthCodedString(val.toString(10), encoding);\n    });\n    return packet;\n  }\n}\n\nmodule.exports = TextRow;\n", "'use strict';\n\nconst process = require('process');\n\nconst AuthSwitchRequest = require('./auth_switch_request');\nconst AuthSwitchRequestMoreData = require('./auth_switch_request_more_data');\nconst AuthSwitchResponse = require('./auth_switch_response');\nconst BinaryRow = require('./binary_row');\nconst BinlogDump = require('./binlog_dump');\nconst ChangeUser = require('./change_user');\nconst CloseStatement = require('./close_statement');\nconst ColumnDefinition = require('./column_definition');\nconst Execute = require('./execute');\nconst Handshake = require('./handshake');\nconst HandshakeResponse = require('./handshake_response');\nconst PrepareStatement = require('./prepare_statement');\nconst PreparedStatementHeader = require('./prepared_statement_header');\nconst Query = require('./query');\nconst RegisterSlave = require('./register_slave');\nconst ResultSetHeader = require('./resultset_header');\nconst SSLRequest = require('./ssl_request');\nconst TextRow = require('./text_row');\n\nconst ctorMap = {\n  AuthSwitchRequest,\n  AuthSwitchRequestMoreData,\n  AuthSwitchResponse,\n  BinaryRow,\n  BinlogDump,\n  ChangeUser,\n  CloseStatement,\n  ColumnDefinition,\n  Execute,\n  Handshake,\n  HandshakeResponse,\n  PrepareStatement,\n  PreparedStatementHeader,\n  Query,\n  RegisterSlave,\n  ResultSetHeader,\n  SSLRequest,\n  TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor]) => {\n  module.exports[name] = ctor;\n  // monkey-patch it to include name if debug is on\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      const old = ctor.prototype.toPacket;\n      ctor.prototype.toPacket = function() {\n        const p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n});\n\n// simple packets:\nconst Packet = require('./packet');\nexports.Packet = Packet;\n\nclass OK {\n  static toPacket(args, encoding) {\n    args = args || {};\n    const affectedRows = args.affectedRows || 0;\n    const insertId = args.insertId || 0;\n    const serverStatus = args.serverStatus || 0;\n    const warningCount = args.warningCount || 0;\n    const message = args.message || '';\n\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n    length += Packet.lengthCodedNumberLength(insertId);\n\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0);\n    packet.writeLengthCodedNumber(affectedRows);\n    packet.writeLengthCodedNumber(insertId);\n    packet.writeInt16(serverStatus);\n    packet.writeInt16(warningCount);\n    packet.writeString(message, encoding);\n    packet._name = 'OK';\n    return packet;\n  }\n}\n\nexports.OK = OK;\n\n// warnings, statusFlags\nclass EOF {\n  static toPacket(warnings, statusFlags) {\n    if (typeof warnings === 'undefined') {\n      warnings = 0;\n    }\n    if (typeof statusFlags === 'undefined') {\n      statusFlags = 0;\n    }\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    packet.writeInt16(warnings);\n    packet.writeInt16(statusFlags);\n    packet._name = 'EOF';\n    return packet;\n  }\n}\n\nexports.EOF = EOF;\n\nclass Error {\n  static toPacket(args, encoding) {\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xff);\n    packet.writeInt16(args.code);\n    // TODO: sql state parameter\n    packet.writeString('#_____', encoding);\n    packet.writeString(args.message, encoding);\n    packet._name = 'Error';\n    return packet;\n  }\n}\n\nexports.Error = Error;\n", "'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\n\nclass Command extends EventEmitter {\n  constructor() {\n    super();\n    this.next = null;\n  }\n\n  // slow. debug only\n  stateName() {\n    const state = this.next;\n    for (const i in this) {\n      if (this[i] === state && i !== 'next') {\n        return i;\n      }\n    }\n    return 'unknown name';\n  }\n\n  execute(packet, connection) {\n    if (!this.next) {\n      this.next = this.start;\n      connection._resetSequenceId();\n    }\n    if (packet && packet.isError()) {\n      const err = packet.asError(connection.clientEncoding);\n      if (this.onResult) {\n        this.onResult(err);\n        this.emit('end');\n      } else {\n        this.emit('error', err);\n        this.emit('end');\n      }\n      return true;\n    }\n    // TODO: don't return anything from execute, it's ugly and error-prone. Listen for 'end' event in connection\n    this.next = this.next(packet, connection);\n    if (this.next) {\n      return false;\n    } \n    this.emit('end');\n    return true;\n    \n  }\n}\n\nmodule.exports = Command;\n", "'use strict';\n\nconst PLUGIN_NAME = 'sha256_password';\nconst crypto = require('crypto');\nconst { xor } = require('../auth_41');\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([1]);\n\nconst STATE_INITIAL = 0;\nconst STATE_WAIT_SERVER_KEY = 1;\nconst STATE_FINAL = -1;\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xor(\n    Buffer.from(`${password}\\0`, 'utf8').toString('binary'),\n    scramble.toString('binary')\n  );\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        // if client provides key we can save one extra roundrip on first connection\n        if (pluginOptions.serverPublicKey) {\n          return authWithKey(pluginOptions.serverPublicKey);\n        }\n\n        state = STATE_WAIT_SERVER_KEY;\n        return REQUEST_SERVER_KEY_PACKET;\n\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n", "'use strict';\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\n\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = require('crypto');\nconst { xor, xorRotating } = require('../auth_41');\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\n\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\n\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\n\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password, 'utf8').toString('binary'));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(stage2 + scramble.toString('binary'));\n  return xor(stage1, stage3);\n}\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(\n    Buffer.from(`${password}\\0`, 'utf8').toString('binary'),\n    scramble.toString('binary')\n  );\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        state = STATE_TOKEN_SENT;\n        return calculateToken(password, scramble);\n\n      case STATE_TOKEN_SENT:\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n          state = STATE_FINAL;\n          return null;\n        }\n\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n          const isSecureConnection =\n            typeof pluginOptions.overrideIsSecure === 'undefined'\n              ? connection.config.ssl || connection.config.socketPath\n              : pluginOptions.overrideIsSecure;\n          if (isSecureConnection) {\n            state = STATE_FINAL;\n            return Buffer.from(`${password}\\0`, 'utf8');\n          }\n\n          // if client provides key we can save one extra roundrip on first connection\n          if (pluginOptions.serverPublicKey) {\n            return authWithKey(pluginOptions.serverPublicKey);\n          }\n\n          state = STATE_WAIT_SERVER_KEY;\n          return REQUEST_SERVER_KEY_PACKET;\n        }\n        throw new Error(\n          `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\n        );\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n", "'use strict';\n\n//const PLUGIN_NAME = 'mysql_native_password';\nconst auth41 = require('../auth_41.js');\n\nmodule.exports = pluginOptions => ({ connection, command }) => {\n  const password =\n    command.password || pluginOptions.password || connection.config.password;\n  const passwordSha1 =\n    command.passwordSha1 ||\n    pluginOptions.passwordSha1 ||\n    connection.config.passwordSha1;\n  return data => {\n    const authPluginData1 = data.slice(0, 8);\n    const authPluginData2 = data.slice(8, 20);\n    let authToken;\n    if (passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        passwordSha1,\n        authPluginData1,\n        authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        password,\n        authPluginData1,\n        authPluginData2\n      );\n    }\n    return authToken;\n  };\n};\n", "'use strict';\n\nconst Packets = require('../packets/index.js');\nconst sha256_password = require('../auth_plugins/sha256_password');\nconst caching_sha2_password = require('../auth_plugins/caching_sha2_password.js');\nconst mysql_native_password = require('../auth_plugins/mysql_native_password.js');\n\nconst standardAuthPlugins = {\n  sha256_password: sha256_password({}),\n  caching_sha2_password: caching_sha2_password({}),\n  mysql_native_password: mysql_native_password({})\n};\n\nfunction warnLegacyAuthSwitch() {\n  console.warn(\n    'WARNING! authSwitchHandler api is deprecated, please use new authPlugins api'\n  );\n}\n\nfunction authSwitchRequest(packet, connection, command) {\n  const { pluginName, pluginData } = Packets.AuthSwitchRequest.fromPacket(\n    packet\n  );\n  let authPlugin =\n    connection.config.authPlugins && connection.config.authPlugins[pluginName];\n\n  // legacy plugin api don't allow to override mysql_native_password\n  // if pluginName is mysql_native_password it's using standard auth4.1 auth\n  if (\n    connection.config.authSwitchHandler &&\n    pluginName !== 'mysql_native_password'\n  ) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginName, pluginData }, (err, data) => {\n      if (err) {\n        connection.emit('error', err);\n        return;\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n  if (!authPlugin) {\n    authPlugin = standardAuthPlugins[pluginName];\n  }\n  if (!authPlugin) {\n    throw new Error(\n      `Server requests authentication using unknown plugin ${pluginName}. See ${'TODO: add plugins doco here'} on how to configure or author authentication plugins.`\n    );\n  }\n  connection._authPlugin = authPlugin({ connection, command });\n  Promise.resolve(connection._authPlugin(pluginData)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  });\n}\n\nfunction authSwitchRequestMoreData(packet, connection) {\n  const { data } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\n\n  if (connection.config.authSwitchHandler) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginData: data }, (err, data) => {\n      if (err) {\n        connection.emit('error', err);\n        return;\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n\n  if (!connection._authPlugin) {\n    throw new Error(\n      'AuthPluginMoreData received but no auth plugin instance found'\n    );\n  }\n  Promise.resolve(connection._authPlugin(data)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  });\n}\n\nmodule.exports = {\n  authSwitchRequest,\n  authSwitchRequestMoreData\n};\n", "var EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar DEFAULT_TIMEOUT = 3000;\nvar INIT_ID = 0;\nvar EVENT_CLOSED = 'closed';\nvar EVENT_DRAINED = 'drained';\n\n/**\n * Instance a new queue\n *\n * @param {Number} timeout a global timeout for new queue\n * @class\n * @constructor\n */\nvar SeqQueue = function(timeout) {\n\tEventEmitter.call(this);\n\t\n\tif(timeout && timeout > 0) {\n\t\tthis.timeout = timeout;\n\t} else {\n\t\tthis.timeout = DEFAULT_TIMEOUT;\n\t}\n\t\n\tthis.status = SeqQueueManager.STATUS_IDLE;\n\tthis.curId = INIT_ID;\n\tthis.queue = [];\n};\nutil.inherits(SeqQueue, EventEmitter);\n\n/**\n * Add a task into queue.\n * \n * @param fn new request\n * @param ontimeout callback when task timeout\n * @param timeout timeout for current request. take the global timeout if this is invalid\n * @returns true or false\n */\nSeqQueue.prototype.push = function(fn, ontimeout, timeout) {\n\tif(this.status !== SeqQueueManager.STATUS_IDLE && this.status !== SeqQueueManager.STATUS_BUSY) {\n\t\t//ignore invalid status\n\t\treturn false;\n\t}\n\t\n\tif(typeof fn !== 'function') {\n\t\tthrow new Error('fn should be a function.');\n\t}\n\tthis.queue.push({fn: fn, ontimeout: ontimeout, timeout: timeout});\n\n\tif(this.status === SeqQueueManager.STATUS_IDLE) {\n\t\tthis.status = SeqQueueManager.STATUS_BUSY;\n\t\tvar self = this;\n\t\tprocess.nextTick(function() {\n\t\t\tself._next(self.curId);\n\t\t});\n\t}\n\treturn true;\n};\n\n/**\n * Close queue\n * \n * @param {Boolean} force if true will close the queue immediately else will execute the rest task in queue\n */\nSeqQueue.prototype.close = function(force) {\n\tif(this.status !== SeqQueueManager.STATUS_IDLE && this.status !== SeqQueueManager.STATUS_BUSY) {\n\t\t//ignore invalid status\n\t\treturn;\n\t}\n\t\n\tif(force) {\n\t\tthis.status = SeqQueueManager.STATUS_DRAINED;\n\t\tif(this.timerId) {\n\t\t\tclearTimeout(this.timerId);\n\t\t\tthis.timerId = undefined;\n\t\t}\n\t\tthis.emit(EVENT_DRAINED);\n\t} else {\n\t\tthis.status = SeqQueueManager.STATUS_CLOSED;\n\t\tthis.emit(EVENT_CLOSED);\n\t}\n};\n\n/**\n * Invoke next task\n * \n * @param {String|Number} tid last executed task id\n * @api private\n */\nSeqQueue.prototype._next = function(tid) {\n\tif(tid !== this.curId || this.status !== SeqQueueManager.STATUS_BUSY && this.status !== SeqQueueManager.STATUS_CLOSED) {\n\t\t//ignore invalid next call\n\t\treturn;\n\t}\n\t\n\tif(this.timerId) {\n\t\tclearTimeout(this.timerId);\n\t\tthis.timerId = undefined;\n\t}\n\t\n\tvar task = this.queue.shift();\n\tif(!task) {\n\t\tif(this.status === SeqQueueManager.STATUS_BUSY) {\n\t\t\tthis.status = SeqQueueManager.STATUS_IDLE;\n\t\t\tthis.curId++;\t//modify curId to invalidate timeout task\n\t\t} else {\n\t\t\tthis.status = SeqQueueManager.STATUS_DRAINED;\n\t\t\tthis.emit(EVENT_DRAINED);\n\t\t}\n\t\treturn;\n\t}\n\t\n\tvar self = this;\n\ttask.id = ++this.curId;\n\n\tvar timeout = task.timeout > 0 ? task.timeout : this.timeout;\n\ttimeout = timeout > 0 ? timeout : DEFAULT_TIMEOUT;\n\tthis.timerId = setTimeout(function() {\n\t\tprocess.nextTick(function() {\n\t\t\tself._next(task.id);\n\t\t});\n\t\tself.emit('timeout', task);\n\t\tif(task.ontimeout) {\n\t\t\ttask.ontimeout();\n\t\t}\n\t}, timeout);\n\n\ttry {\n\t\ttask.fn({\n\t\t\tdone: function() {\n\t\t\t\tvar res = task.id === self.curId;\n\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\tself._next(task.id);\n\t\t\t\t});\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t} catch(err) {\n\t\tself.emit('error', err, task);\n\t\tprocess.nextTick(function() {\n\t\t\tself._next(task.id);\n\t\t});\n\t}\n};\n\n/**\n * Queue manager.\n * \n * @module\n */\nvar SeqQueueManager = module.exports;\n\n/**\n * Queue status: idle, welcome new tasks\n *\n * @const\n * @type {Number}\n * @memberOf SeqQueueManager\n */\nSeqQueueManager.STATUS_IDLE = 0;\n\n/**\n * Queue status: busy, queue is working for some tasks now\n *\n * @const\n * @type {Number}\n * @memberOf SeqQueueManager\n */\nSeqQueueManager.STATUS_BUSY = 1;\n\n/**\n * Queue status: closed, queue has closed and would not receive task any more \n * \t\t\t\t\tand is processing the remaining tasks now.\n *\n * @const\n * @type {Number}\n * @memberOf SeqQueueManager\n */\nSeqQueueManager.STATUS_CLOSED = 2; \n\n/**\n * Queue status: drained, queue is ready to be destroy\n *\n * @const\n * @type {Number}\n * @memberOf SeqQueueManager\n */\nSeqQueueManager.STATUS_DRAINED = 3;\n\n/**\n * Create Sequence queue\n * \n * @param  {Number} timeout a global timeout for the new queue instance\n * @return {Object}         new queue instance\n * @memberOf SeqQueueManager\n */\nSeqQueueManager.createQueue = function(timeout) {\n\treturn new SeqQueue(timeout);\n};", "module.exports = require('./lib/seq-queue');", "'use strict';\n\n// connection mixins\n// implementation of http://dev.mysql.com/doc/internals/en/compression.html\n\nconst zlib = require('zlib');\nconst PacketParser = require('./packet_parser.js');\n\nfunction handleCompressedPacket(packet) {\n  // eslint-disable-next-line consistent-this, no-invalid-this\n  const connection = this;\n  const deflatedLength = packet.readInt24();\n  const body = packet.readBuffer();\n\n  if (deflatedLength !== 0) {\n    connection.inflateQueue.push(task => {\n      zlib.inflate(body, (err, data) => {\n        if (err) {\n          connection._handleNetworkError(err);\n          return;\n        }\n        connection._bumpCompressedSequenceId(packet.numPackets);\n        connection._inflatedPacketsParser.execute(data);\n        task.done();\n      });\n    });\n  } else {\n    connection.inflateQueue.push(task => {\n      connection._bumpCompressedSequenceId(packet.numPackets);\n      connection._inflatedPacketsParser.execute(body);\n      task.done();\n    });\n  }\n}\n\nfunction writeCompressed(buffer) {\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n  // note: sending a MySQL Packet of the size 2^24\u22125 to 2^24\u22121 via compression\n  // leads to at least one extra compressed packet.\n  // (this is because \"length of the packet before compression\" need to fit\n  // into 3 byte unsigned int. \"length of the packet before compression\" includes\n  // 4 byte packet header, hence 2^24\u22125)\n  const MAX_COMPRESSED_LENGTH = 16777210;\n  let start;\n  if (buffer.length > MAX_COMPRESSED_LENGTH) {\n    for (start = 0; start < buffer.length; start += MAX_COMPRESSED_LENGTH) {\n      writeCompressed.call(\n        // eslint-disable-next-line no-invalid-this\n        this,\n        buffer.slice(start, start + MAX_COMPRESSED_LENGTH)\n      );\n    }\n    return;\n  }\n\n  // eslint-disable-next-line no-invalid-this, consistent-this\n  const connection = this;\n\n  let packetLen = buffer.length;\n  const compressHeader = Buffer.allocUnsafe(7);\n\n  // seqqueue is used here because zlib async execution is routed via thread pool\n  // internally and when we have multiple compressed packets arriving we need\n  // to assemble uncompressed result sequentially\n  (function(seqId) {\n    connection.deflateQueue.push(task => {\n      zlib.deflate(buffer, (err, compressed) => {\n        if (err) {\n          connection._handleFatalError(err);\n          return;\n        }\n        let compressedLength = compressed.length;\n\n        if (compressedLength < packetLen) {\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n          compressHeader.writeUInt8(seqId, 3);\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\n          connection.writeUncompressed(compressHeader);\n          connection.writeUncompressed(compressed);\n        } else {\n          // http://dev.mysql.com/doc/internals/en/uncompressed-payload.html\n          // To send an uncompressed payload:\n          //   - set length of payload before compression to 0\n          //   - the compressed payload contains the uncompressed payload instead.\n          compressedLength = packetLen;\n          packetLen = 0;\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n          compressHeader.writeUInt8(seqId, 3);\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\n          connection.writeUncompressed(compressHeader);\n          connection.writeUncompressed(buffer);\n        }\n        task.done();\n      });\n    });\n  })(connection.compressedSequenceId);\n  connection._bumpCompressedSequenceId(1);\n}\n\nfunction enableCompression(connection) {\n  connection._lastWrittenPacketId = 0;\n  connection._lastReceivedPacketId = 0;\n\n  connection._handleCompressedPacket = handleCompressedPacket;\n  connection._inflatedPacketsParser = new PacketParser(p => {\n    connection.handlePacket(p);\n  }, 4);\n  connection._inflatedPacketsParser._lastPacket = 0;\n  connection.packetParser = new PacketParser(packet => {\n    connection._handleCompressedPacket(packet);\n  }, 7);\n\n  connection.writeUncompressed = connection.write;\n  connection.write = writeCompressed;\n\n  const seqqueue = require('seq-queue');\n  connection.inflateQueue = seqqueue.createQueue();\n  connection.deflateQueue = seqqueue.createQueue();\n}\n\nmodule.exports = {\n  enableCompression: enableCompression\n};\n", "'use strict';\n\nconst Command = require('./command.js');\nconst Packets = require('../packets/index.js');\nconst ClientConstants = require('../constants/client.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\nconst auth41 = require('../auth_41.js');\n\nfunction flagNames(flags) {\n  const res = [];\n  for (const c in ClientConstants) {\n    if (flags & ClientConstants[c]) {\n      res.push(c.replace(/_/g, ' ').toLowerCase());\n    }\n  }\n  return res;\n}\n\nclass ClientHandshake extends Command {\n  constructor(clientFlags) {\n    super();\n    this.handshake = null;\n    this.clientFlags = clientFlags;\n  }\n\n  start() {\n    return ClientHandshake.prototype.handshakeInit;\n  }\n\n  sendSSLRequest(connection) {\n    const sslRequest = new Packets.SSLRequest(\n      this.clientFlags,\n      connection.config.charsetNumber\n    );\n    connection.writePacket(sslRequest.toPacket());\n  }\n\n  sendCredentials(connection) {\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        'Sending handshake packet: flags:%d=(%s)',\n        this.clientFlags,\n        flagNames(this.clientFlags).join(', ')\n      );\n    }\n    this.user = connection.config.user;\n    this.password = connection.config.password;\n    this.passwordSha1 = connection.config.passwordSha1;\n    this.database = connection.config.database;\n    this.autPluginName = this.handshake.autPluginName;\n    const handshakeResponse = new Packets.HandshakeResponse({\n      flags: this.clientFlags,\n      user: this.user,\n      database: this.database,\n      password: this.password,\n      passwordSha1: this.passwordSha1,\n      charsetNumber: connection.config.charsetNumber,\n      authPluginData1: this.handshake.authPluginData1,\n      authPluginData2: this.handshake.authPluginData2,\n      compress: connection.config.compress,\n      connectAttributes: connection.config.connectAttributes\n    });\n    connection.writePacket(handshakeResponse.toPacket());\n  }\n\n  calculateNativePasswordAuthToken(authPluginData) {\n    // TODO: dont split into authPluginData1 and authPluginData2, instead join when 1 & 2 received\n    const authPluginData1 = authPluginData.slice(0, 8);\n    const authPluginData2 = authPluginData.slice(8, 20);\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        authPluginData1,\n        authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        authPluginData1,\n        authPluginData2\n      );\n    }\n    return authToken;\n  }\n\n  handshakeInit(helloPacket, connection) {\n    this.on('error', e => {\n      connection._fatalError = e;\n      connection._protocolError = e;\n    });\n    this.handshake = Packets.Handshake.fromPacket(helloPacket);\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        'Server hello packet: capability flags:%d=(%s)',\n        this.handshake.capabilityFlags,\n        flagNames(this.handshake.capabilityFlags).join(', ')\n      );\n    }\n    connection.serverCapabilityFlags = this.handshake.capabilityFlags;\n    connection.serverEncoding = CharsetToEncoding[this.handshake.characterSet];\n    connection.connectionId = this.handshake.connectionId;\n    const serverSSLSupport =\n      this.handshake.capabilityFlags & ClientConstants.SSL;\n    // use compression only if requested by client and supported by server\n    connection.config.compress =\n      connection.config.compress &&\n      this.handshake.capabilityFlags & ClientConstants.COMPRESS;\n    this.clientFlags = this.clientFlags | connection.config.compress;\n    if (connection.config.ssl) {\n      // client requires SSL but server does not support it\n      if (!serverSSLSupport) {\n        const err = new Error('Server does not support secure connnection');\n        err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\n        err.fatal = true;\n        this.emit('error', err);\n        return false;\n      }\n      // send ssl upgrade request and immediately upgrade connection to secure\n      this.clientFlags |= ClientConstants.SSL;\n      this.sendSSLRequest(connection);\n      connection.startTLS(err => {\n        // after connection is secure\n        if (err) {\n          // SSL negotiation error are fatal\n          err.code = 'HANDSHAKE_SSL_ERROR';\n          err.fatal = true;\n          this.emit('error', err);\n          return;\n        }\n        // rest of communication is encrypted\n        this.sendCredentials(connection);\n      });\n    } else {\n      this.sendCredentials(connection);\n    }\n    return ClientHandshake.prototype.handshakeResult;\n  }\n\n  handshakeResult(packet, connection) {\n    const marker = packet.peekByte();\n    if (marker === 0xfe || marker === 1) {\n      const authSwitch = require('./auth_switch');\n      try {\n        if (marker === 1) {\n          authSwitch.authSwitchRequestMoreData(packet, connection, this);\n        } else {\n          authSwitch.authSwitchRequest(packet, connection, this);\n        }\n        return ClientHandshake.prototype.handshakeResult;\n      } catch (err) {\n        if (this.onResult) {\n          this.onResult(err);\n        } else {\n          connection.emit('error', err);\n        }\n        return null;\n      }\n    }\n    if (marker !== 0) {\n      const err = new Error('Unexpected packet during handshake phase');\n      if (this.onResult) {\n        this.onResult(err);\n      } else {\n        connection.emit('error', err);\n      }\n      return null;\n    }\n    // this should be called from ClientHandshake command only\n    // and skipped when called from ChangeUser command\n    if (!connection.authorized) {\n      connection.authorized = true;\n      if (connection.config.compress) {\n        const enableCompression = require('../compressed_protocol.js')\n          .enableCompression;\n        enableCompression(connection);\n      }\n    }\n    if (this.onResult) {\n      this.onResult(null);\n    }\n    return null;\n  }\n}\nmodule.exports = ClientHandshake;\n", "'use strict';\n\nconst CommandCode = require('../constants/commands.js');\nconst Errors = require('../constants/errors.js');\n\nconst Command = require('./command.js');\nconst Packets = require('../packets/index.js');\n\nclass ServerHandshake extends Command {\n  constructor(args) {\n    super();\n    this.args = args;\n    /*\n    this.protocolVersion = args.protocolVersion || 10;\n    this.serverVersion   = args.serverVersion;\n    this.connectionId    = args.connectionId,\n    this.statusFlags     = args.statusFlags,\n    this.characterSet    = args.characterSet,\n    this.capabilityFlags = args.capabilityFlags || 512;\n    */\n  }\n\n  start(packet, connection) {\n    const serverHelloPacket = new Packets.Handshake(this.args);\n    this.serverHello = serverHelloPacket;\n    serverHelloPacket.setScrambleData(err => {\n      if (err) {\n        connection.emit('error', new Error('Error generating random bytes'));\n        return;\n      }\n      connection.writePacket(serverHelloPacket.toPacket(0));\n    });\n    return ServerHandshake.prototype.readClientReply;\n  }\n\n  readClientReply(packet, connection) {\n    // check auth here\n    const clientHelloReply = Packets.HandshakeResponse.fromPacket(packet);\n    // TODO check we don't have something similar already\n    connection.clientHelloReply = clientHelloReply;\n    if (this.args.authCallback) {\n      this.args.authCallback(\n        {\n          user: clientHelloReply.user,\n          database: clientHelloReply.database,\n          address: connection.stream.remoteAddress,\n          authPluginData1: this.serverHello.authPluginData1,\n          authPluginData2: this.serverHello.authPluginData2,\n          authToken: clientHelloReply.authToken\n        },\n        (err, mysqlError) => {\n          // if (err)\n          if (!mysqlError) {\n            connection.writeOk();\n          } else {\n            // TODO create constants / errorToCode\n            // 1045 = ER_ACCESS_DENIED_ERROR\n            connection.writeError({\n              message: mysqlError.message || '',\n              code: mysqlError.code || 1045\n            });\n            connection.close();\n          }\n        }\n      );\n    } else {\n      connection.writeOk();\n    }\n    return ServerHandshake.prototype.dispatchCommands;\n  }\n\n  dispatchCommands(packet, connection) {\n    // command from client to server\n    let knownCommand = true;\n    const encoding = connection.clientHelloReply.encoding;\n    const commandCode = packet.readInt8();\n    switch (commandCode) {\n      case CommandCode.QUIT:\n        if (connection.listeners('quit').length) {\n          connection.emit('quit');\n        } else {\n          connection.stream.end();\n        }\n        break;\n      case CommandCode.INIT_DB:\n        if (connection.listeners('init_db').length) {\n          const schemaName = packet.readString(undefined, encoding);\n          connection.emit('init_db', schemaName);\n        } else {\n          connection.writeOk();\n        }\n        break;\n      case CommandCode.QUERY:\n        if (connection.listeners('query').length) {\n          const query = packet.readString(undefined, encoding);\n          connection.emit('query', query);\n        } else {\n          connection.writeError({\n            code: Errors.HA_ERR_INTERNAL_ERROR,\n            message: 'No query handler'\n          });\n        }\n        break;\n      case CommandCode.FIELD_LIST:\n        if (connection.listeners('field_list').length) {\n          const table = packet.readNullTerminatedString();\n          const fields = packet.readString(undefined, encoding);\n          connection.emit('field_list', table, fields);\n        } else {\n          connection.writeError({\n            code: Errors.ER_WARN_DEPRECATED_SYNTAX,\n            message:\n              'As of MySQL 5.7.11, COM_FIELD_LIST is deprecated and will be removed in a future version of MySQL.'\n          });\n        }\n        break;\n      case CommandCode.PING:\n        if (connection.listeners('ping').length) {\n          connection.emit('ping');\n        } else {\n          connection.writeOk();\n        }\n        break;\n      default:\n        knownCommand = false;\n    }\n    if (connection.listeners('packet').length) {\n      connection.emit('packet', packet.clone(), knownCommand, commandCode);\n    } else if (!knownCommand) {\n      // eslint-disable-next-line no-console\n      console.log('Unknown command:', commandCode);\n    }\n    return ServerHandshake.prototype.dispatchCommands;\n  }\n}\n\nmodule.exports = ServerHandshake;\n\n// TODO: implement server-side 4.1 authentication\n/*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/\n", "'use strict';\n\nexports.BIG5_CHINESE_CI = 1;\nexports.LATIN2_CZECH_CS = 2;\nexports.DEC8_SWEDISH_CI = 3;\nexports.CP850_GENERAL_CI = 4;\nexports.LATIN1_GERMAN1_CI = 5;\nexports.HP8_ENGLISH_CI = 6;\nexports.KOI8R_GENERAL_CI = 7;\nexports.LATIN1_SWEDISH_CI = 8;\nexports.LATIN2_GENERAL_CI = 9;\nexports.SWE7_SWEDISH_CI = 10;\nexports.ASCII_GENERAL_CI = 11;\nexports.UJIS_JAPANESE_CI = 12;\nexports.SJIS_JAPANESE_CI = 13;\nexports.CP1251_BULGARIAN_CI = 14;\nexports.LATIN1_DANISH_CI = 15;\nexports.HEBREW_GENERAL_CI = 16;\nexports.TIS620_THAI_CI = 18;\nexports.EUCKR_KOREAN_CI = 19;\nexports.LATIN7_ESTONIAN_CS = 20;\nexports.LATIN2_HUNGARIAN_CI = 21;\nexports.KOI8U_GENERAL_CI = 22;\nexports.CP1251_UKRAINIAN_CI = 23;\nexports.GB2312_CHINESE_CI = 24;\nexports.GREEK_GENERAL_CI = 25;\nexports.CP1250_GENERAL_CI = 26;\nexports.LATIN2_CROATIAN_CI = 27;\nexports.GBK_CHINESE_CI = 28;\nexports.CP1257_LITHUANIAN_CI = 29;\nexports.LATIN5_TURKISH_CI = 30;\nexports.LATIN1_GERMAN2_CI = 31;\nexports.ARMSCII8_GENERAL_CI = 32;\nexports.UTF8_GENERAL_CI = 33;\nexports.CP1250_CZECH_CS = 34;\nexports.UCS2_GENERAL_CI = 35;\nexports.CP866_GENERAL_CI = 36;\nexports.KEYBCS2_GENERAL_CI = 37;\nexports.MACCE_GENERAL_CI = 38;\nexports.MACROMAN_GENERAL_CI = 39;\nexports.CP852_GENERAL_CI = 40;\nexports.LATIN7_GENERAL_CI = 41;\nexports.LATIN7_GENERAL_CS = 42;\nexports.MACCE_BIN = 43;\nexports.CP1250_CROATIAN_CI = 44;\nexports.UTF8MB4_GENERAL_CI = 45;\nexports.UTF8MB4_BIN = 46;\nexports.LATIN1_BIN = 47;\nexports.LATIN1_GENERAL_CI = 48;\nexports.LATIN1_GENERAL_CS = 49;\nexports.CP1251_BIN = 50;\nexports.CP1251_GENERAL_CI = 51;\nexports.CP1251_GENERAL_CS = 52;\nexports.MACROMAN_BIN = 53;\nexports.UTF16_GENERAL_CI = 54;\nexports.UTF16_BIN = 55;\nexports.UTF16LE_GENERAL_CI = 56;\nexports.CP1256_GENERAL_CI = 57;\nexports.CP1257_BIN = 58;\nexports.CP1257_GENERAL_CI = 59;\nexports.UTF32_GENERAL_CI = 60;\nexports.UTF32_BIN = 61;\nexports.UTF16LE_BIN = 62;\nexports.BINARY = 63;\nexports.ARMSCII8_BIN = 64;\nexports.ASCII_BIN = 65;\nexports.CP1250_BIN = 66;\nexports.CP1256_BIN = 67;\nexports.CP866_BIN = 68;\nexports.DEC8_BIN = 69;\nexports.GREEK_BIN = 70;\nexports.HEBREW_BIN = 71;\nexports.HP8_BIN = 72;\nexports.KEYBCS2_BIN = 73;\nexports.KOI8R_BIN = 74;\nexports.KOI8U_BIN = 75;\nexports.UTF8_TOLOWER_CI = 76;\nexports.LATIN2_BIN = 77;\nexports.LATIN5_BIN = 78;\nexports.LATIN7_BIN = 79;\nexports.CP850_BIN = 80;\nexports.CP852_BIN = 81;\nexports.SWE7_BIN = 82;\nexports.UTF8_BIN = 83;\nexports.BIG5_BIN = 84;\nexports.EUCKR_BIN = 85;\nexports.GB2312_BIN = 86;\nexports.GBK_BIN = 87;\nexports.SJIS_BIN = 88;\nexports.TIS620_BIN = 89;\nexports.UCS2_BIN = 90;\nexports.UJIS_BIN = 91;\nexports.GEOSTD8_GENERAL_CI = 92;\nexports.GEOSTD8_BIN = 93;\nexports.LATIN1_SPANISH_CI = 94;\nexports.CP932_JAPANESE_CI = 95;\nexports.CP932_BIN = 96;\nexports.EUCJPMS_JAPANESE_CI = 97;\nexports.EUCJPMS_BIN = 98;\nexports.CP1250_POLISH_CI = 99;\nexports.UTF16_UNICODE_CI = 101;\nexports.UTF16_ICELANDIC_CI = 102;\nexports.UTF16_LATVIAN_CI = 103;\nexports.UTF16_ROMANIAN_CI = 104;\nexports.UTF16_SLOVENIAN_CI = 105;\nexports.UTF16_POLISH_CI = 106;\nexports.UTF16_ESTONIAN_CI = 107;\nexports.UTF16_SPANISH_CI = 108;\nexports.UTF16_SWEDISH_CI = 109;\nexports.UTF16_TURKISH_CI = 110;\nexports.UTF16_CZECH_CI = 111;\nexports.UTF16_DANISH_CI = 112;\nexports.UTF16_LITHUANIAN_CI = 113;\nexports.UTF16_SLOVAK_CI = 114;\nexports.UTF16_SPANISH2_CI = 115;\nexports.UTF16_ROMAN_CI = 116;\nexports.UTF16_PERSIAN_CI = 117;\nexports.UTF16_ESPERANTO_CI = 118;\nexports.UTF16_HUNGARIAN_CI = 119;\nexports.UTF16_SINHALA_CI = 120;\nexports.UTF16_GERMAN2_CI = 121;\nexports.UTF16_CROATIAN_CI = 122;\nexports.UTF16_UNICODE_520_CI = 123;\nexports.UTF16_VIETNAMESE_CI = 124;\nexports.UCS2_UNICODE_CI = 128;\nexports.UCS2_ICELANDIC_CI = 129;\nexports.UCS2_LATVIAN_CI = 130;\nexports.UCS2_ROMANIAN_CI = 131;\nexports.UCS2_SLOVENIAN_CI = 132;\nexports.UCS2_POLISH_CI = 133;\nexports.UCS2_ESTONIAN_CI = 134;\nexports.UCS2_SPANISH_CI = 135;\nexports.UCS2_SWEDISH_CI = 136;\nexports.UCS2_TURKISH_CI = 137;\nexports.UCS2_CZECH_CI = 138;\nexports.UCS2_DANISH_CI = 139;\nexports.UCS2_LITHUANIAN_CI = 140;\nexports.UCS2_SLOVAK_CI = 141;\nexports.UCS2_SPANISH2_CI = 142;\nexports.UCS2_ROMAN_CI = 143;\nexports.UCS2_PERSIAN_CI = 144;\nexports.UCS2_ESPERANTO_CI = 145;\nexports.UCS2_HUNGARIAN_CI = 146;\nexports.UCS2_SINHALA_CI = 147;\nexports.UCS2_GERMAN2_CI = 148;\nexports.UCS2_CROATIAN_CI = 149;\nexports.UCS2_UNICODE_520_CI = 150;\nexports.UCS2_VIETNAMESE_CI = 151;\nexports.UCS2_GENERAL_MYSQL500_CI = 159;\nexports.UTF32_UNICODE_CI = 160;\nexports.UTF32_ICELANDIC_CI = 161;\nexports.UTF32_LATVIAN_CI = 162;\nexports.UTF32_ROMANIAN_CI = 163;\nexports.UTF32_SLOVENIAN_CI = 164;\nexports.UTF32_POLISH_CI = 165;\nexports.UTF32_ESTONIAN_CI = 166;\nexports.UTF32_SPANISH_CI = 167;\nexports.UTF32_SWEDISH_CI = 168;\nexports.UTF32_TURKISH_CI = 169;\nexports.UTF32_CZECH_CI = 170;\nexports.UTF32_DANISH_CI = 171;\nexports.UTF32_LITHUANIAN_CI = 172;\nexports.UTF32_SLOVAK_CI = 173;\nexports.UTF32_SPANISH2_CI = 174;\nexports.UTF32_ROMAN_CI = 175;\nexports.UTF32_PERSIAN_CI = 176;\nexports.UTF32_ESPERANTO_CI = 177;\nexports.UTF32_HUNGARIAN_CI = 178;\nexports.UTF32_SINHALA_CI = 179;\nexports.UTF32_GERMAN2_CI = 180;\nexports.UTF32_CROATIAN_CI = 181;\nexports.UTF32_UNICODE_520_CI = 182;\nexports.UTF32_VIETNAMESE_CI = 183;\nexports.UTF8_UNICODE_CI = 192;\nexports.UTF8_ICELANDIC_CI = 193;\nexports.UTF8_LATVIAN_CI = 194;\nexports.UTF8_ROMANIAN_CI = 195;\nexports.UTF8_SLOVENIAN_CI = 196;\nexports.UTF8_POLISH_CI = 197;\nexports.UTF8_ESTONIAN_CI = 198;\nexports.UTF8_SPANISH_CI = 199;\nexports.UTF8_SWEDISH_CI = 200;\nexports.UTF8_TURKISH_CI = 201;\nexports.UTF8_CZECH_CI = 202;\nexports.UTF8_DANISH_CI = 203;\nexports.UTF8_LITHUANIAN_CI = 204;\nexports.UTF8_SLOVAK_CI = 205;\nexports.UTF8_SPANISH2_CI = 206;\nexports.UTF8_ROMAN_CI = 207;\nexports.UTF8_PERSIAN_CI = 208;\nexports.UTF8_ESPERANTO_CI = 209;\nexports.UTF8_HUNGARIAN_CI = 210;\nexports.UTF8_SINHALA_CI = 211;\nexports.UTF8_GERMAN2_CI = 212;\nexports.UTF8_CROATIAN_CI = 213;\nexports.UTF8_UNICODE_520_CI = 214;\nexports.UTF8_VIETNAMESE_CI = 215;\nexports.UTF8_GENERAL_MYSQL500_CI = 223;\nexports.UTF8MB4_UNICODE_CI = 224;\nexports.UTF8MB4_ICELANDIC_CI = 225;\nexports.UTF8MB4_LATVIAN_CI = 226;\nexports.UTF8MB4_ROMANIAN_CI = 227;\nexports.UTF8MB4_SLOVENIAN_CI = 228;\nexports.UTF8MB4_POLISH_CI = 229;\nexports.UTF8MB4_ESTONIAN_CI = 230;\nexports.UTF8MB4_SPANISH_CI = 231;\nexports.UTF8MB4_SWEDISH_CI = 232;\nexports.UTF8MB4_TURKISH_CI = 233;\nexports.UTF8MB4_CZECH_CI = 234;\nexports.UTF8MB4_DANISH_CI = 235;\nexports.UTF8MB4_LITHUANIAN_CI = 236;\nexports.UTF8MB4_SLOVAK_CI = 237;\nexports.UTF8MB4_SPANISH2_CI = 238;\nexports.UTF8MB4_ROMAN_CI = 239;\nexports.UTF8MB4_PERSIAN_CI = 240;\nexports.UTF8MB4_ESPERANTO_CI = 241;\nexports.UTF8MB4_HUNGARIAN_CI = 242;\nexports.UTF8MB4_SINHALA_CI = 243;\nexports.UTF8MB4_GERMAN2_CI = 244;\nexports.UTF8MB4_CROATIAN_CI = 245;\nexports.UTF8MB4_UNICODE_520_CI = 246;\nexports.UTF8MB4_VIETNAMESE_CI = 247;\nexports.GB18030_CHINESE_CI = 248;\nexports.GB18030_BIN = 249;\nexports.GB18030_UNICODE_520_CI = 250;\nexports.UTF8_GENERAL50_CI = 253;\nexports.UTF8MB4_0900_AI_CI = 255;\nexports.UTF8MB4_CS_0900_AI_CI = 266;\nexports.UTF8MB4_DA_0900_AI_CI = 267;\nexports.UTF8MB4_DE_PB_0900_AI_CI = 256;\nexports.UTF8MB4_EO_0900_AI_CI = 273;\nexports.UTF8MB4_ES_0900_AI_CI = 263;\nexports.UTF8MB4_ES_TRAD_0900_AI_CI = 270;\nexports.UTF8MB4_ET_0900_AI_CI = 262;\nexports.UTF8MB4_HR_0900_AI_CI = 275;\nexports.UTF8MB4_HU_0900_AI_CI = 274;\nexports.UTF8MB4_IS_0900_AI_CI = 257;\nexports.UTF8MB4_LA_0900_AI_CI = 271;\nexports.UTF8MB4_LT_0900_AI_CI = 268;\nexports.UTF8MB4_LV_0900_AI_CI = 258;\nexports.UTF8MB4_PL_0900_AI_CI = 261;\nexports.UTF8MB4_RO_0900_AI_CI = 259;\nexports.UTF8MB4_SK_0900_AI_CI = 269;\nexports.UTF8MB4_SL_0900_AI_CI = 260;\nexports.UTF8MB4_SV_0900_AI_CI = 264;\nexports.UTF8MB4_TR_0900_AI_CI = 265;\nexports.UTF8MB4_VI_0900_AI_CI = 277;\n\n// short aliases\nexports.BIG5 = exports.BIG5_CHINESE_CI;\nexports.DEC8 = exports.DEC8_SWEDISH_CI;\nexports.CP850 = exports.CP850_GENERAL_CI;\nexports.HP8 = exports.HP8_ENGLISH_CI;\nexports.KOI8R = exports.KOI8R_GENERAL_CI;\nexports.LATIN1 = exports.LATIN1_SWEDISH_CI;\nexports.LATIN2 = exports.LATIN2_GENERAL_CI;\nexports.SWE7 = exports.SWE7_SWEDISH_CI;\nexports.ASCII = exports.ASCII_GENERAL_CI;\nexports.UJIS = exports.UJIS_JAPANESE_CI;\nexports.SJIS = exports.SJIS_JAPANESE_CI;\nexports.HEBREW = exports.HEBREW_GENERAL_CI;\nexports.TIS620 = exports.TIS620_THAI_CI;\nexports.EUCKR = exports.EUCKR_KOREAN_CI;\nexports.KOI8U = exports.KOI8U_GENERAL_CI;\nexports.GB2312 = exports.GB2312_CHINESE_CI;\nexports.GREEK = exports.GREEK_GENERAL_CI;\nexports.CP1250 = exports.CP1250_GENERAL_CI;\nexports.GBK = exports.GBK_CHINESE_CI;\nexports.LATIN5 = exports.LATIN5_TURKISH_CI;\nexports.ARMSCII8 = exports.ARMSCII8_GENERAL_CI;\nexports.UTF8 = exports.UTF8_GENERAL_CI;\nexports.UCS2 = exports.UCS2_GENERAL_CI;\nexports.CP866 = exports.CP866_GENERAL_CI;\nexports.KEYBCS2 = exports.KEYBCS2_GENERAL_CI;\nexports.MACCE = exports.MACCE_GENERAL_CI;\nexports.MACROMAN = exports.MACROMAN_GENERAL_CI;\nexports.CP852 = exports.CP852_GENERAL_CI;\nexports.LATIN7 = exports.LATIN7_GENERAL_CI;\nexports.UTF8MB4 = exports.UTF8MB4_GENERAL_CI;\nexports.CP1251 = exports.CP1251_GENERAL_CI;\nexports.UTF16 = exports.UTF16_GENERAL_CI;\nexports.UTF16LE = exports.UTF16LE_GENERAL_CI;\nexports.CP1256 = exports.CP1256_GENERAL_CI;\nexports.CP1257 = exports.CP1257_GENERAL_CI;\nexports.UTF32 = exports.UTF32_GENERAL_CI;\nexports.CP932 = exports.CP932_JAPANESE_CI;\nexports.EUCJPMS = exports.EUCJPMS_JAPANESE_CI;\nexports.GB18030 = exports.GB18030_CHINESE_CI;\nexports.GEOSTD8 = exports.GEOSTD8_GENERAL_CI;\n", "'use strict';\n\n/*\n\n  this seems to be not only shorter, but faster than\n  string.replace(/\\\\/g, '\\\\\\\\').\n            replace(/\\u0008/g, '\\\\b').\n            replace(/\\t/g, '\\\\t').\n            replace(/\\n/g, '\\\\n').\n            replace(/\\f/g, '\\\\f').\n            replace(/\\r/g, '\\\\r').\n            replace(/'/g, '\\\\\\'').\n            replace(/\"/g, '\\\\\"');\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\n  */\nfunction srcEscape(str) {\n  return JSON.stringify({\n    [str]: 1\n  }).slice(1, -3);\n}\n\nexports.srcEscape = srcEscape;\n\nlet highlightFn;\nlet cardinalRecommended = false;\ntry {\n  highlightFn = require('cardinal').highlight;\n} catch (err) {\n  highlightFn = text => {\n    if (!cardinalRecommended) {\n      // eslint-disable-next-line no-console\n      console.log('For nicer debug output consider install cardinal@^2.0.0');\n      cardinalRecommended = true;\n    }\n    return text;\n  };\n}\n\n/**\n * Prints debug message with code frame, will try to use `cardinal` if available.\n */\nfunction printDebugWithCode(msg, code) {\n  // eslint-disable-next-line no-console\n  console.log(`\\n\\n${msg}:\\n`);\n  // eslint-disable-next-line no-console\n  console.log(`${highlightFn(code)}\\n`);\n}\n\nexports.printDebugWithCode = printDebugWithCode;\n\n/**\n * checks whether the `type` is in the `list`\n */\nfunction typeMatch(type, list, Types) {\n  if (Array.isArray(list)) {\n    return list.some(t => type === Types[t]);\n  }\n\n  return !!list;\n}\n\nexports.typeMatch = typeMatch;\n", "\"use strict\"\nfunction isProperty(str) {\n  return /^[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(str)\n}\nmodule.exports = isProperty", "var util = require('util')\nvar isProperty = require('is-property')\n\nvar INDENT_START = /[\\{\\[]/\nvar INDENT_END = /[\\}\\]]/\n\n// from https://mathiasbynens.be/notes/reserved-keywords\nvar RESERVED = [\n  'do',\n  'if',\n  'in',\n  'for',\n  'let',\n  'new',\n  'try',\n  'var',\n  'case',\n  'else',\n  'enum',\n  'eval',\n  'null',\n  'this',\n  'true',\n  'void',\n  'with',\n  'await',\n  'break',\n  'catch',\n  'class',\n  'const',\n  'false',\n  'super',\n  'throw',\n  'while',\n  'yield',\n  'delete',\n  'export',\n  'import',\n  'public',\n  'return',\n  'static',\n  'switch',\n  'typeof',\n  'default',\n  'extends',\n  'finally',\n  'package',\n  'private',\n  'continue',\n  'debugger',\n  'function',\n  'arguments',\n  'interface',\n  'protected',\n  'implements',\n  'instanceof',\n  'NaN',\n  'undefined'\n]\n\nvar RESERVED_MAP = {}\n\nfor (var i = 0; i < RESERVED.length; i++) {\n  RESERVED_MAP[RESERVED[i]] = true\n}\n\nvar isVariable = function (name) {\n  return isProperty(name) && !RESERVED_MAP.hasOwnProperty(name)\n}\n\nvar formats = {\n  s: function(s) {\n    return '' + s\n  },\n  d: function(d) {\n    return '' + Number(d)\n  },\n  o: function(o) {\n    return JSON.stringify(o)\n  }\n}\n\nvar genfun = function() {\n  var lines = []\n  var indent = 0\n  var vars = {}\n\n  var push = function(str) {\n    var spaces = ''\n    while (spaces.length < indent*2) spaces += '  '\n    lines.push(spaces+str)\n  }\n\n  var pushLine = function(line) {\n    if (INDENT_END.test(line.trim()[0]) && INDENT_START.test(line[line.length-1])) {\n      indent--\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_START.test(line[line.length-1])) {\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_END.test(line.trim()[0])) {\n      indent--\n      push(line)\n      return\n    }\n\n    push(line)\n  }\n\n  var line = function(fmt) {\n    if (!fmt) return line\n\n    if (arguments.length === 1 && fmt.indexOf('\\n') > -1) {\n      var lines = fmt.trim().split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        pushLine(lines[i].trim())\n      }\n    } else {\n      pushLine(util.format.apply(util, arguments))\n    }\n\n    return line\n  }\n\n  line.scope = {}\n  line.formats = formats\n\n  line.sym = function(name) {\n    if (!name || !isVariable(name)) name = 'tmp'\n    if (!vars[name]) vars[name] = 0\n    return name + (vars[name]++ || '')\n  }\n\n  line.property = function(obj, name) {\n    if (arguments.length === 1) {\n      name = obj\n      obj = ''\n    }\n\n    name = name + ''\n\n    if (isProperty(name)) return (obj ? obj + '.' + name : name)\n    return obj ? obj + '[' + JSON.stringify(name) + ']' : JSON.stringify(name)\n  }\n\n  line.toString = function() {\n    return lines.join('\\n')\n  }\n\n  line.toFunction = function(scope) {\n    if (!scope) scope = {}\n\n    var src = 'return ('+line.toString()+')'\n\n    Object.keys(line.scope).forEach(function (key) {\n      if (!scope[key]) scope[key] = line.scope[key]\n    })\n\n    var keys = Object.keys(scope).map(function(key) {\n      return key\n    })\n\n    var vals = keys.map(function(key) {\n      return scope[key]\n    })\n\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\n  }\n\n  if (arguments.length) line.apply(null, arguments)\n\n  return line\n}\n\ngenfun.formats = formats\nmodule.exports = genfun\n", "'use strict';\n\nconst LRU = require('lru-cache');\n\nconst parserCache = new LRU({\n  max: 15000\n});\n\nfunction keyFromFields(type, fields, options, config) {\n  let res =\n    `${type}` +\n    `/${typeof options.nestTables}` +\n    `/${options.nestTables}` +\n    `/${options.rowsAsArray}` +\n    `/${options.supportBigNumbers || config.supportBigNumbers}` +\n    `/${options.bigNumberStrings || config.bigNumberStrings}` +\n    `/${typeof options.typeCast}` +\n    `/${options.timezone || config.timezone}` +\n    `/${options.decimalNumbers}` +\n    `/${options.dateStrings}`;\n  for (let i = 0; i < fields.length; ++i) {\n    const field = fields[i];\n    res += `/${field.name}:${field.columnType}:${field.flags}:${\n      field.characterSet\n    }`;\n\n    if (options.nestTables) {\n      res += `:${field.table}`\n    }\n  }\n  return res;\n}\n\nfunction getParser(type, fields, options, config, compiler) {\n  const key = keyFromFields(type, fields, options, config);\n  let parser = parserCache.get(key);\n\n  if (parser) {\n    return parser;\n  }\n\n  parser = compiler(fields, options, config);\n  parserCache.set(key, parser);\n  return parser;\n}\n\nfunction setMaxCache(max) {\n  parserCache.max = max;\n}\n\nfunction clearCache() {\n  parserCache.reset();\n}\n\nmodule.exports = {\n  getParser: getParser,\n  setMaxCache: setMaxCache,\n  clearCache: clearCache\n};\n", "'use strict';\n\nconst Types = require('../constants/types.js');\nconst Charsets = require('../constants/charsets.js');\nconst helpers = require('../helpers');\nconst genFunc = require('generate-function');\nconst parserCache = require('./parser_cache.js');\n\nconst typeNames = [];\nfor (const t in Types) {\n  typeNames[Types[t]] = t;\n}\n\nfunction readCodeFor(type, charset, encodingExpr, config, options) {\n  const supportBigNumbers =\n    options.supportBigNumbers || config.supportBigNumbers;\n  const bigNumberStrings = options.bigNumberStrings || config.bigNumberStrings;\n  const timezone = options.timezone || config.timezone;\n  const dateStrings = options.dateStrings || config.dateStrings;\n\n  switch (type) {\n    case Types.TINY:\n    case Types.SHORT:\n    case Types.LONG:\n    case Types.INT24:\n    case Types.YEAR:\n      return 'packet.parseLengthCodedIntNoBigCheck()';\n    case Types.LONGLONG:\n      if (supportBigNumbers && bigNumberStrings) {\n        return 'packet.parseLengthCodedIntString()';\n      }\n      return `packet.parseLengthCodedInt(${supportBigNumbers})`;\n    case Types.FLOAT:\n    case Types.DOUBLE:\n      return 'packet.parseLengthCodedFloat()';\n    case Types.NULL:\n      return 'packet.readLengthCodedNumber()';\n    case Types.DECIMAL:\n    case Types.NEWDECIMAL:\n      if (config.decimalNumbers) {\n        return 'packet.parseLengthCodedFloat()';\n      }\n      return 'packet.readLengthCodedString(\"ascii\")';\n    case Types.DATE:\n      if (helpers.typeMatch(type, dateStrings, Types)) {\n        return 'packet.readLengthCodedString(\"ascii\")';\n      }\n      return `packet.parseDate('${timezone}')`;\n    case Types.DATETIME:\n    case Types.TIMESTAMP:\n      if (helpers.typeMatch(type, dateStrings, Types)) {\n        return 'packet.readLengthCodedString(\"ascii\")';\n      }\n      return `packet.parseDateTime('${timezone}')`;\n    case Types.TIME:\n      return 'packet.readLengthCodedString(\"ascii\")';\n    case Types.GEOMETRY:\n      return 'packet.parseGeometryValue()';\n    case Types.JSON:\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\n      // we have to handle it according to JSON specs and use \"utf8\",\n      // see https://github.com/sidorares/node-mysql2/issues/409\n      return 'JSON.parse(packet.readLengthCodedString(\"utf8\"))';\n    default:\n      if (charset === Charsets.BINARY) {\n        return 'packet.readLengthCodedBuffer()';\n      }\n      return `packet.readLengthCodedString(${encodingExpr})`;\n  }\n}\n\nfunction compile(fields, options, config) {\n  // node-mysql typeCast compatibility wrapper\n  // see https://github.com/mysqljs/mysql/blob/96fdd0566b654436624e2375c7b6604b1f50f825/lib/protocol/packets/Field.js\n  function wrap(field, type, packet, encoding) {\n    return {\n      type: type,\n      length: field.columnLength,\n      db: field.schema,\n      table: field.table,\n      name: field.name,\n      string: function() {\n        return packet.readLengthCodedString(encoding);\n      },\n      buffer: function() {\n        return packet.readLengthCodedBuffer();\n      },\n      geometry: function() {\n        return packet.parseGeometryValue();\n      }\n    };\n  }\n\n  // use global typeCast if current query doesn't specify one\n  if (\n    typeof config.typeCast === 'function' &&\n    typeof options.typeCast !== 'function'\n  ) {\n    options.typeCast = config.typeCast;\n  }\n\n  const parserFn = genFunc();\n  let i = 0;\n\n  /* eslint-disable no-trailing-spaces */\n  /* eslint-disable no-spaced-func */\n  /* eslint-disable no-unexpected-multiline */\n  parserFn('(function () {')(\n    'return function TextRow(packet, fields, options, CharsetToEncoding) {'\n  );\n\n  if (options.rowsAsArray) {\n    parserFn(`const result = new Array(${fields.length})`);\n  }\n\n  if (typeof options.typeCast === 'function') {\n    parserFn(`const wrap = ${wrap.toString()}`);\n  }\n\n  const resultTables = {};\n  let resultTablesArray = [];\n\n  if (options.nestTables === true) {\n    for (i = 0; i < fields.length; i++) {\n      resultTables[fields[i].table] = 1;\n    }\n    resultTablesArray = Object.keys(resultTables);\n    for (i = 0; i < resultTablesArray.length; i++) {\n      parserFn(`this[${helpers.srcEscape(resultTablesArray[i])}] = {};`);\n    }\n  }\n\n  let lvalue = '';\n  let fieldName = '';\n  for (i = 0; i < fields.length; i++) {\n    fieldName = helpers.srcEscape(fields[i].name);\n    parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n    if (typeof options.nestTables === 'string') {\n      lvalue = `this[${helpers.srcEscape(\n        fields[i].table + options.nestTables + fields[i].name\n      )}]`;\n    } else if (options.nestTables === true) {\n      lvalue = `this[${helpers.srcEscape(fields[i].table)}][${fieldName}]`;\n    } else if (options.rowsAsArray) {\n      lvalue = `result[${i.toString(10)}]`;\n    } else {\n      lvalue = `this[${fieldName}]`;\n    }\n    const encodingExpr = `CharsetToEncoding[fields[${i}].characterSet]`;\n    const readCode = readCodeFor(\n      fields[i].columnType,\n      fields[i].characterSet,\n      encodingExpr,\n      config,\n      options\n    );\n    if (typeof options.typeCast === 'function') {\n      parserFn(\n        `${lvalue} = options.typeCast(wrap(fields[${i}], ${helpers.srcEscape(\n          typeNames[fields[i].columnType]\n        )}, packet, ${encodingExpr}), function() { return ${readCode};})`\n      );\n    } else if (options.typeCast === false) {\n      parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\n    } else {\n      parserFn(`${lvalue} = ${readCode};`);\n    }\n  }\n\n  if (options.rowsAsArray) {\n    parserFn('return result;');\n  }\n\n  parserFn('};')('})()');\n\n  /* eslint-enable no-trailing-spaces */\n  /* eslint-enable no-spaced-func */\n  /* eslint-enable no-unexpected-multiline */\n\n  if (config.debug) {\n    helpers.printDebugWithCode(\n      'Compiled text protocol row parser',\n      parserFn.toString()\n    );\n  }\n  return parserFn.toFunction();\n}\n\nfunction getTextParser(fields, options, config) {\n  return parserCache.getParser('text', fields, options, config, compile);\n}\n\nmodule.exports = getTextParser;\n", "'use strict';\n\nconst process = require('process');\n\nconst Readable = require('stream').Readable;\n\nconst Command = require('./command.js');\nconst Packets = require('../packets/index.js');\nconst getTextParser = require('../parsers/text_parser.js');\nconst ServerStatus = require('../constants/server_status.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nconst EmptyPacket = new Packets.Packet(0, Buffer.allocUnsafe(4), 0, 4);\n\n// http://dev.mysql.com/doc/internals/en/com-query.html\nclass Query extends Command {\n  constructor(options, callback) {\n    super();\n    this.sql = options.sql;\n    this.values = options.values;\n    this._queryOptions = options;\n    this.namedPlaceholders = options.namedPlaceholders || false;\n    this.onResult = callback;\n    this._fieldCount = 0;\n    this._rowParser = null;\n    this._fields = [];\n    this._rows = [];\n    this._receivedFieldsCount = 0;\n    this._resultIndex = 0;\n    this._localStream = null;\n    this._unpipeStream = function() {};\n    this._streamFactory = options.infileStreamFactory;\n    this._connection = null;\n  }\n\n  then() {\n    const err =\n      \"You have tried to call .then(), .catch(), or invoked await on the result of query that is not a promise, which is a programming error. Try calling con.promise().query(), or require('mysql2/promise') instead of 'mysql2' for a promise-compatible version of the query interface. To learn how to use async/await or Promises check out documentation at https://www.npmjs.com/package/mysql2#using-promise-wrapper, or the mysql2 documentation at https://github.com/sidorares/node-mysql2/tree/master/documentation/Promise-Wrapper.md\";\n    // eslint-disable-next-line\n    console.log(err);\n    throw new Error(err);\n  }\n\n  start(packet, connection) {\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log('        Sending query command: %s', this.sql);\n    }\n    this._connection = connection;\n    this.options = Object.assign({}, connection.config, this._queryOptions);\n    const cmdPacket = new Packets.Query(\n      this.sql,\n      connection.config.charsetNumber\n    );\n    connection.writePacket(cmdPacket.toPacket(1));\n    return Query.prototype.resultsetHeader;\n  }\n\n  done() {\n    this._unpipeStream();\n    if (this.onResult) {\n      let rows, fields;\n      if (this._resultIndex === 0) {\n        rows = this._rows[0];\n        fields = this._fields[0];\n      } else {\n        rows = this._rows;\n        fields = this._fields;\n      }\n      if (fields) {\n        process.nextTick(() => {\n          this.onResult(null, rows, fields);\n        });\n      } else {\n        process.nextTick(() => {\n          this.onResult(null, rows);\n        });\n      }\n    }\n    return null;\n  }\n\n  doneInsert(rs) {\n    if (this._localStreamError) {\n      if (this.onResult) {\n        this.onResult(this._localStreamError, rs);\n      } else {\n        this.emit('error', this._localStreamError);\n      }\n      return null;\n    }\n    this._rows.push(rs);\n    this._fields.push(void 0);\n    this.emit('fields', void 0);\n    this.emit('result', rs);\n    if (rs.serverStatus & ServerStatus.SERVER_MORE_RESULTS_EXISTS) {\n      this._resultIndex++;\n      return this.resultsetHeader;\n    }\n    return this.done();\n  }\n\n  resultsetHeader(packet, connection) {\n    const rs = new Packets.ResultSetHeader(packet, connection);\n    this._fieldCount = rs.fieldCount;\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        `        Resultset header received, expecting ${rs.fieldCount} column definition packets`\n      );\n    }\n    if (this._fieldCount === 0) {\n      return this.doneInsert(rs);\n    }\n    if (this._fieldCount === null) {\n      return this._streamLocalInfile(connection, rs.infileName);\n    }\n    this._receivedFieldsCount = 0;\n    this._rows.push([]);\n    this._fields.push([]);\n    return this.readField;\n  }\n\n  _streamLocalInfile(connection, path) {\n    if (this._streamFactory) {\n      this._localStream = this._streamFactory(path);\n    } else {\n      this._localStreamError = new Error(\n        `As a result of LOCAL INFILE command server wants to read ${path} file, but as of v2.0 you must provide streamFactory option returning ReadStream.`\n      );\n      connection.writePacket(EmptyPacket);\n      return this.infileOk;\n    }\n\n    const onConnectionError = () => {\n      this._unpipeStream();\n    };\n    const onDrain = () => {\n      this._localStream.resume();\n    };\n    const onPause = () => {\n      this._localStream.pause();\n    };\n    const onData = function(data) {\n      const dataWithHeader = Buffer.allocUnsafe(data.length + 4);\n      data.copy(dataWithHeader, 4);\n      connection.writePacket(\n        new Packets.Packet(0, dataWithHeader, 0, dataWithHeader.length)\n      );\n    };\n    const onEnd = () => {\n      connection.removeListener('error', onConnectionError);\n      connection.writePacket(EmptyPacket);\n    };\n    const onError = err => {\n      this._localStreamError = err;\n      connection.removeListener('error', onConnectionError);\n      connection.writePacket(EmptyPacket);\n    };\n    this._unpipeStream = () => {\n      connection.stream.removeListener('pause', onPause);\n      connection.stream.removeListener('drain', onDrain);\n      this._localStream.removeListener('data', onData);\n      this._localStream.removeListener('end', onEnd);\n      this._localStream.removeListener('error', onError);\n    };\n    connection.stream.on('pause', onPause);\n    connection.stream.on('drain', onDrain);\n    this._localStream.on('data', onData);\n    this._localStream.on('end', onEnd);\n    this._localStream.on('error', onError);\n    connection.once('error', onConnectionError);\n    return this.infileOk;\n  }\n\n  readField(packet, connection) {\n    this._receivedFieldsCount++;\n    // Often there is much more data in the column definition than in the row itself\n    // If you set manually _fields[0] to array of ColumnDefinition's (from previous call)\n    // you can 'cache' result of parsing. Field packets still received, but ignored in that case\n    // this is the reason _receivedFieldsCount exist (otherwise we could just use current length of fields array)\n    if (this._fields[this._resultIndex].length !== this._fieldCount) {\n      const field = new Packets.ColumnDefinition(\n        packet,\n        connection.clientEncoding\n      );\n      this._fields[this._resultIndex].push(field);\n      if (connection.config.debug) {\n        /* eslint-disable no-console */\n        console.log('        Column definition:');\n        console.log(`          name: ${field.name}`);\n        console.log(`          type: ${field.columnType}`);\n        console.log(`         flags: ${field.flags}`);\n        /* eslint-enable no-console */\n      }\n    }\n    // last field received\n    if (this._receivedFieldsCount === this._fieldCount) {\n      const fields = this._fields[this._resultIndex];\n      this.emit('fields', fields);\n      this._rowParser = getTextParser(fields, this.options, connection.config);\n      return Query.prototype.fieldsEOF;\n    }\n    return Query.prototype.readField;\n  }\n\n  fieldsEOF(packet, connection) {\n    // check EOF\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet');\n    }\n    return this.row;\n  }\n\n  row(packet) {\n    if (packet.isEOF()) {\n      const status = packet.eofStatusFlags();\n      const moreResults = status & ServerStatus.SERVER_MORE_RESULTS_EXISTS;\n      if (moreResults) {\n        this._resultIndex++;\n        return Query.prototype.resultsetHeader;\n      }\n      return this.done();\n    }\n    let row;\n    try {\n      row = new this._rowParser(\n        packet,\n        this._fields[this._resultIndex],\n        this.options,\n        CharsetToEncoding\n      );\n    } catch (err) {\n      this._localStreamError = err;\n      return this.doneInsert(null);\n    }\n    if (this.onResult) {\n      this._rows[this._resultIndex].push(row);\n    } else {\n      this.emit('result', row);\n    }\n    return Query.prototype.row;\n  }\n\n  infileOk(packet, connection) {\n    const rs = new Packets.ResultSetHeader(packet, connection);\n    return this.doneInsert(rs);\n  }\n\n  stream(options) {\n    options = options || {};\n    options.objectMode = true;\n    const stream = new Readable(options);\n    stream._read = () => {\n      this._connection && this._connection.resume();\n    };\n    this.on('result', row => {\n      if (!stream.push(row)) {\n        this._connection.pause();\n      }\n      stream.emit('result', row); // replicate old emitter\n    });\n    this.on('error', err => {\n      stream.emit('error', err); // Pass on any errors\n    });\n    this.on('end', () => {\n      stream.push(null); // pushing null, indicating EOF\n      stream.emit('close'); // notify readers that query has completed\n    });\n    this.on('fields', fields => {\n      stream.emit('fields', fields); // replicate old emitter\n    });\n    return stream;\n  }\n}\n\nQuery.prototype.catch = Query.prototype.then;\n\nmodule.exports = Query;\n", "'use strict';\n\nconst Command = require('./command');\nconst Packets = require('../packets/index.js');\n\nclass CloseStatement extends Command {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  start(packet, connection) {\n    connection.writePacket(new Packets.CloseStatement(this.id).toPacket(1));\n    return null;\n  }\n}\n\nmodule.exports = CloseStatement;\n", "'use strict';\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.NOT_NULL = 1; /* Field can't be NULL */\nexports.PRI_KEY = 2; /* Field is part of a primary key */\nexports.UNIQUE_KEY = 4; /* Field is part of a unique key */\nexports.MULTIPLE_KEY = 8; /* Field is part of a key */\nexports.BLOB = 16; /* Field is a blob */\nexports.UNSIGNED = 32; /* Field is unsigned */\nexports.ZEROFILL = 64; /* Field is zerofill */\nexports.BINARY = 128; /* Field is binary   */\n\n/* The following are only sent to new clients */\nexports.ENUM = 256; /* field is an enum */\nexports.AUTO_INCREMENT = 512; /* field is a autoincrement field */\nexports.TIMESTAMP = 1024; /* Field is a timestamp */\nexports.SET = 2048; /* field is a set */\nexports.NO_DEFAULT_VALUE = 4096; /* Field doesn't have default value */\nexports.ON_UPDATE_NOW = 8192; /* Field is set to NOW on UPDATE */\nexports.NUM = 32768; /* Field is num (for clients) */\n", "'use strict';\n\nconst FieldFlags = require('../constants/field_flags.js');\nconst Charsets = require('../constants/charsets.js');\nconst Types = require('../constants/types.js');\nconst helpers = require('../helpers');\nconst genFunc = require('generate-function');\nconst parserCache = require('./parser_cache.js');\nconst typeNames = [];\nfor (const t in Types) {\n  typeNames[Types[t]] = t;\n}\n\nfunction readCodeFor(field, config, options, fieldNum) {\n  const supportBigNumbers =\n    options.supportBigNumbers || config.supportBigNumbers;\n  const bigNumberStrings = options.bigNumberStrings || config.bigNumberStrings;\n  const timezone = options.timezone || config.timezone;\n  const dateStrings = options.dateStrings || config.dateStrings;\n  const unsigned = field.flags & FieldFlags.UNSIGNED;\n  switch (field.columnType) {\n    case Types.TINY:\n      return unsigned ? 'packet.readInt8();' : 'packet.readSInt8();';\n    case Types.SHORT:\n      return unsigned ? 'packet.readInt16();' : 'packet.readSInt16();';\n    case Types.LONG:\n    case Types.INT24: // in binary protocol int24 is encoded in 4 bytes int32\n      return unsigned ? 'packet.readInt32();' : 'packet.readSInt32();';\n    case Types.YEAR:\n      return 'packet.readInt16()';\n    case Types.FLOAT:\n      return 'packet.readFloat();';\n    case Types.DOUBLE:\n      return 'packet.readDouble();';\n    case Types.NULL:\n      return 'null;';\n    case Types.DATE:\n    case Types.DATETIME:\n    case Types.TIMESTAMP:\n    case Types.NEWDATE:\n      if (helpers.typeMatch(field.columnType, dateStrings, Types)) {\n        return `packet.readDateTimeString(${field.decimals});`;\n      }\n      return `packet.readDateTime('${timezone}');`;\n    case Types.TIME:\n      return 'packet.readTimeString()';\n    case Types.DECIMAL:\n    case Types.NEWDECIMAL:\n      if (config.decimalNumbers) {\n        return 'packet.parseLengthCodedFloat();';\n      }\n      return 'packet.readLengthCodedString(\"ascii\");';\n    case Types.GEOMETRY:\n      return 'packet.parseGeometryValue();';\n    case Types.JSON:\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\n      // we have to handle it according to JSON specs and use \"utf8\",\n      // see https://github.com/sidorares/node-mysql2/issues/409\n      return 'JSON.parse(packet.readLengthCodedString(\"utf8\"));';\n    case Types.LONGLONG:\n      if (!supportBigNumbers) {\n        return unsigned\n          ? 'packet.readInt64JSNumber();'\n          : 'packet.readSInt64JSNumber();';\n      }\n      if (bigNumberStrings) {\n        return unsigned\n          ? 'packet.readInt64String();'\n          : 'packet.readSInt64String();';\n      }\n      return unsigned ? 'packet.readInt64();' : 'packet.readSInt64();';\n\n    default:\n      if (field.characterSet === Charsets.BINARY) {\n        return 'packet.readLengthCodedBuffer();';\n      }\n      return `packet.readLengthCodedString(CharsetToEncoding[fields[${fieldNum}].characterSet])`;\n  }\n}\n\nfunction compile(fields, options, config) {\n  const parserFn = genFunc();\n  let i = 0;\n  const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n\n  /* eslint-disable no-trailing-spaces */\n  /* eslint-disable no-spaced-func */\n  /* eslint-disable no-unexpected-multiline */\n\n  parserFn('(function(){')(\n    'return function BinaryRow(packet, fields, options, CharsetToEncoding) {'\n  );\n\n  if (options.rowsAsArray) {\n    parserFn(`const result = new Array(${fields.length});`);\n  }\n\n  const resultTables = {};\n  let resultTablesArray = [];\n\n  if (options.nestTables === true) {\n    for (i = 0; i < fields.length; i++) {\n      resultTables[fields[i].table] = 1;\n    }\n    resultTablesArray = Object.keys(resultTables);\n    for (i = 0; i < resultTablesArray.length; i++) {\n      parserFn(`this[${helpers.srcEscape(resultTablesArray[i])}] = {};`);\n    }\n  }\n\n  parserFn('packet.readInt8();'); // status byte\n  for (i = 0; i < nullBitmapLength; ++i) {\n    parserFn(`const nullBitmaskByte${i} = packet.readInt8();`);\n  }\n\n  let lvalue = '';\n  let currentFieldNullBit = 4;\n  let nullByteIndex = 0;\n  let fieldName = '';\n  let tableName = '';\n\n  for (i = 0; i < fields.length; i++) {\n    fieldName = helpers.srcEscape(fields[i].name);\n    parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n\n    if (typeof options.nestTables === 'string') {\n      tableName = helpers.srcEscape(fields[i].table);\n      lvalue = `this[${helpers.srcEscape(\n        fields[i].table + options.nestTables + fields[i].name\n      )}]`;\n    } else if (options.nestTables === true) {\n      tableName = helpers.srcEscape(fields[i].table);\n      lvalue = `this[${tableName}][${fieldName}]`;\n    } else if (options.rowsAsArray) {\n      lvalue = `result[${i.toString(10)}]`;\n    } else {\n      lvalue = `this[${helpers.srcEscape(fields[i].name)}]`;\n    }\n\n    // TODO: this used to be an optimisation ( if column marked as NOT_NULL don't include code to check null\n    // bitmap at all, but it seems that we can't rely on this flag, see #178\n    // TODO: benchmark performance difference\n    //\n    // if (fields[i].flags & FieldFlags.NOT_NULL) { // don't need to check null bitmap if field can't be null.\n    //  result.push(lvalue + ' = ' + readCodeFor(fields[i], config));\n    // } else if (fields[i].columnType == Types.NULL) {\n    //  result.push(lvalue + ' = null;');\n    // } else {\n    parserFn(`if (nullBitmaskByte${nullByteIndex} & ${currentFieldNullBit})`);\n    parserFn(`${lvalue} = null;`);\n    parserFn('else');\n    parserFn(`${lvalue} = ${readCodeFor(fields[i], config, options, i)}`);\n    // }\n    currentFieldNullBit *= 2;\n    if (currentFieldNullBit === 0x100) {\n      currentFieldNullBit = 1;\n      nullByteIndex++;\n    }\n  }\n\n  if (options.rowsAsArray) {\n    parserFn('return result;');\n  }\n\n  parserFn('};')('})()');\n\n  /* eslint-enable no-trailing-spaces */\n  /* eslint-enable no-spaced-func */\n  /* eslint-enable no-unexpected-multiline */\n\n  if (config.debug) {\n    helpers.printDebugWithCode(\n      'Compiled binary protocol row parser',\n      parserFn.toString()\n    );\n  }\n  return parserFn.toFunction();\n}\n\nfunction getBinaryParser(fields, options, config) {\n  return parserCache.getParser('binary', fields, options, config, compile);\n}\n\nmodule.exports = getBinaryParser;\n", "'use strict';\n\nconst Command = require('./command.js');\nconst Query = require('./query.js');\nconst Packets = require('../packets/index.js');\n\nconst getBinaryParser = require('../parsers/binary_parser.js');\n\nclass Execute extends Command {\n  constructor(options, callback) {\n    super();\n    this.statement = options.statement;\n    this.sql = options.sql;\n    this.values = options.values;\n    this.onResult = callback;\n    this.parameters = options.values;\n    this.insertId = 0;\n    this._rows = [];\n    this._fields = [];\n    this._result = [];\n    this._fieldCount = 0;\n    this._rowParser = null;\n    this._executeOptions = options;\n    this._resultIndex = 0;\n    this._localStream = null;\n    this._unpipeStream = function() {};\n    this._streamFactory = options.infileStreamFactory;\n    this._connection = null;\n  }\n\n  buildParserFromFields(fields, connection) {\n    return getBinaryParser(fields, this.options, connection.config);\n  }\n\n  start(packet, connection) {\n    this._connection = connection;\n    this.options = Object.assign({}, connection.config, this._executeOptions);\n    const executePacket = new Packets.Execute(\n      this.statement.id,\n      this.parameters,\n      connection.config.charsetNumber,\n      connection.config.timezone\n    );\n    //For reasons why this try-catch is here, please see\n    // https://github.com/sidorares/node-mysql2/pull/689\n    //For additional discussion, see\n    // 1. https://github.com/sidorares/node-mysql2/issues/493\n    // 2. https://github.com/sidorares/node-mysql2/issues/187\n    // 3. https://github.com/sidorares/node-mysql2/issues/480\n    try {\n      connection.writePacket(executePacket.toPacket(1));\n    } catch (error) {\n      this.onResult(error);\n    }\n    return Execute.prototype.resultsetHeader;\n  }\n\n  readField(packet, connection) {\n    let fields;\n    // disabling for now, but would be great to find reliable way to parse fields only once\n    // fields reported by prepare can be empty at all or just incorrect - see #169\n    //\n    // perfomance optimisation: if we already have this field parsed in statement header, use one from header\n    // const field = this.statement.columns.length == this._fieldCount ?\n    //  this.statement.columns[this._receivedFieldsCount] : new Packets.ColumnDefinition(packet);\n    const field = new Packets.ColumnDefinition(\n      packet,\n      connection.clientEncoding\n    );\n    this._receivedFieldsCount++;\n    this._fields[this._resultIndex].push(field);\n    if (this._receivedFieldsCount === this._fieldCount) {\n      fields = this._fields[this._resultIndex];\n      this.emit('fields', fields, this._resultIndex);\n      return Execute.prototype.fieldsEOF;\n    }\n    return Execute.prototype.readField;\n  }\n\n  fieldsEOF(packet, connection) {\n    // check EOF\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet');\n    }\n    this._rowParser = this.buildParserFromFields(\n      this._fields[this._resultIndex],\n      connection\n    );\n    return Execute.prototype.row;\n  }\n}\n\nExecute.prototype.done = Query.prototype.done;\nExecute.prototype.doneInsert = Query.prototype.doneInsert;\nExecute.prototype.resultsetHeader = Query.prototype.resultsetHeader;\nExecute.prototype._findOrCreateReadStream =\n  Query.prototype._findOrCreateReadStream;\nExecute.prototype._streamLocalInfile = Query.prototype._streamLocalInfile;\nExecute.prototype.row = Query.prototype.row;\nExecute.prototype.stream = Query.prototype.stream;\n\nmodule.exports = Execute;\n", "'use strict';\n\nconst Packets = require('../packets/index.js');\nconst Command = require('./command.js');\nconst CloseStatement = require('./close_statement.js');\nconst Execute = require('./execute.js');\n\nclass PreparedStatementInfo {\n  constructor(query, id, columns, parameters, connection) {\n    this.query = query;\n    this.id = id;\n    this.columns = columns;\n    this.parameters = parameters;\n    this.rowParser = null;\n    this._connection = connection;\n  }\n\n  close() {\n    return this._connection.addCommand(new CloseStatement(this.id));\n  }\n\n  execute(parameters, callback) {\n    if (typeof parameters === 'function') {\n      callback = parameters;\n      parameters = [];\n    }\n    return this._connection.addCommand(\n      new Execute({ statement: this, values: parameters }, callback)\n    );\n  }\n}\n\nclass Prepare extends Command {\n  constructor(options, callback) {\n    super();\n    this.query = options.sql;\n    this.onResult = callback;\n    this.id = 0;\n    this.fieldCount = 0;\n    this.parameterCount = 0;\n    this.fields = [];\n    this.parameterDefinitions = [];\n    this.options = options;\n  }\n\n  start(packet, connection) {\n    const Connection = connection.constructor;\n    this.key = Connection.statementKey(this.options);\n    const statement = connection._statements.get(this.key);\n    if (statement) {\n      if (this.onResult) {\n        this.onResult(null, statement);\n      }\n      return null;\n    }\n    const cmdPacket = new Packets.PrepareStatement(\n      this.query,\n      connection.config.charsetNumber\n    );\n    connection.writePacket(cmdPacket.toPacket(1));\n    return Prepare.prototype.prepareHeader;\n  }\n\n  prepareHeader(packet, connection) {\n    const header = new Packets.PreparedStatementHeader(packet);\n    this.id = header.id;\n    this.fieldCount = header.fieldCount;\n    this.parameterCount = header.parameterCount;\n    if (this.parameterCount > 0) {\n      return Prepare.prototype.readParameter;\n    } if (this.fieldCount > 0) {\n      return Prepare.prototype.readField;\n    } \n    return this.prepareDone(connection);\n    \n  }\n\n  readParameter(packet, connection) {\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n    this.parameterDefinitions.push(def);\n    if (this.parameterDefinitions.length === this.parameterCount) {\n      return Prepare.prototype.parametersEOF;\n    }\n    return this.readParameter;\n  }\n\n  readField(packet, connection) {\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n    this.fields.push(def);\n    if (this.fields.length === this.fieldCount) {\n      return Prepare.prototype.fieldsEOF;\n    }\n    return Prepare.prototype.readField;\n  }\n\n  parametersEOF(packet, connection) {\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet after parameters');\n    }\n    if (this.fieldCount > 0) {\n      return Prepare.prototype.readField;\n    } \n    return this.prepareDone(connection);\n    \n  }\n\n  fieldsEOF(packet, connection) {\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet after fields');\n    }\n    return this.prepareDone(connection);\n  }\n\n  prepareDone(connection) {\n    const statement = new PreparedStatementInfo(\n      this.query,\n      this.id,\n      this.fields,\n      this.parameterDefinitions,\n      connection\n    );\n    connection._statements.set(this.key, statement);\n    if (this.onResult) {\n      this.onResult(null, statement);\n    }\n    return null;\n  }\n}\n\nmodule.exports = Prepare;\n", "'use strict';\n\nconst Command = require('./command');\nconst CommandCode = require('../constants/commands');\nconst Packet = require('../packets/packet');\n\n// TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\nclass Ping extends Command {\n  constructor(callback) {\n    super();\n    this.onResult = callback;\n  }\n\n  start(packet, connection) {\n    const ping = new Packet(\n      0,\n      Buffer.from([1, 0, 0, 0, CommandCode.PING]),\n      0,\n      5\n    );\n    connection.writePacket(ping);\n    return Ping.prototype.pingResponse;\n  }\n\n  pingResponse() {\n    // TODO: check it's OK packet. error check already done in caller\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = Ping;\n", "'use strict';\n\nconst Command = require('./command');\nconst Packets = require('../packets');\n\nclass RegisterSlave extends Command {\n  constructor(opts, callback) {\n    super();\n    this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.RegisterSlave(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return RegisterSlave.prototype.registerResponse;\n  }\n\n  registerResponse() {\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = RegisterSlave;\n", "'use strict';\n\n// http://dev.mysql.com/doc/internals/en/query-event.html\n\nconst keys = {\n  FLAGS2: 0,\n  SQL_MODE: 1,\n  CATALOG: 2,\n  AUTO_INCREMENT: 3,\n  CHARSET: 4,\n  TIME_ZONE: 5,\n  CATALOG_NZ: 6,\n  LC_TIME_NAMES: 7,\n  CHARSET_DATABASE: 8,\n  TABLE_MAP_FOR_UPDATE: 9,\n  MASTER_DATA_WRITTEN: 10,\n  INVOKERS: 11,\n  UPDATED_DB_NAMES: 12,\n  MICROSECONDS: 3\n};\n\nmodule.exports = function parseStatusVars(buffer) {\n  const result = {};\n  let offset = 0;\n  let key, length, prevOffset;\n  while (offset < buffer.length) {\n    key = buffer[offset++];\n    switch (key) {\n      case keys.FLAGS2:\n        result.flags = buffer.readUInt32LE(offset);\n        offset += 4;\n        break;\n      case keys.SQL_MODE:\n        // value is 8 bytes, but all dcumented flags are in first 4 bytes\n        result.sqlMode = buffer.readUInt32LE(offset);\n        offset += 8;\n        break;\n      case keys.CATALOG:\n        length = buffer[offset++];\n        result.catalog = buffer.toString('utf8', offset, offset + length);\n        offset += length + 1; // null byte after string\n        break;\n      case keys.CHARSET:\n        result.clientCharset = buffer.readUInt16LE(offset);\n        result.connectionCollation = buffer.readUInt16LE(offset + 2);\n        result.serverCharset = buffer.readUInt16LE(offset + 4);\n        offset += 6;\n        break;\n      case keys.TIME_ZONE:\n        length = buffer[offset++];\n        result.timeZone = buffer.toString('utf8', offset, offset + length);\n        offset += length; // no null byte\n        break;\n      case keys.CATALOG_NZ:\n        length = buffer[offset++];\n        result.catalogNz = buffer.toString('utf8', offset, offset + length);\n        offset += length; // no null byte\n        break;\n      case keys.LC_TIME_NAMES:\n        result.lcTimeNames = buffer.readUInt16LE(offset);\n        offset += 2;\n        break;\n      case keys.CHARSET_DATABASE:\n        result.schemaCharset = buffer.readUInt16LE(offset);\n        offset += 2;\n        break;\n      case keys.TABLE_MAP_FOR_UPDATE:\n        result.mapForUpdate1 = buffer.readUInt32LE(offset);\n        result.mapForUpdate2 = buffer.readUInt32LE(offset + 4);\n        offset += 8;\n        break;\n      case keys.MASTER_DATA_WRITTEN:\n        result.masterDataWritten = buffer.readUInt32LE(offset);\n        offset += 4;\n        break;\n      case keys.INVOKERS:\n        length = buffer[offset++];\n        result.invokerUsername = buffer.toString(\n          'utf8',\n          offset,\n          offset + length\n        );\n        offset += length;\n        length = buffer[offset++];\n        result.invokerHostname = buffer.toString(\n          'utf8',\n          offset,\n          offset + length\n        );\n        offset += length;\n        break;\n      case keys.UPDATED_DB_NAMES:\n        length = buffer[offset++];\n        // length - number of null-terminated strings\n        result.updatedDBs = []; // we'll store them as array here\n        for (; length; --length) {\n          prevOffset = offset;\n          // fast forward to null terminating byte\n          while (buffer[offset++] && offset < buffer.length) {\n            // empty body, everything inside while condition\n          }\n          result.updatedDBs.push(\n            buffer.toString('utf8', prevOffset, offset - 1)\n          );\n        }\n        break;\n      case keys.MICROSECONDS:\n        result.microseconds =\n          // REVIEW: INVALID UNKNOWN VARIABLE!\n          buffer.readInt16LE(offset) + (buffer[offset + 2] << 16);\n        offset += 3;\n    }\n  }\n  return result;\n};\n", "'use strict';\n\nconst Command = require('./command');\nconst Packets = require('../packets');\n\nconst eventParsers = [];\n\nclass BinlogEventHeader {\n  constructor(packet) {\n    this.timestamp = packet.readInt32();\n    this.eventType = packet.readInt8();\n    this.serverId = packet.readInt32();\n    this.eventSize = packet.readInt32();\n    this.logPos = packet.readInt32();\n    this.flags = packet.readInt16();\n  }\n}\n\nclass BinlogDump extends Command {\n  constructor(opts) {\n    super();\n    // this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.BinlogDump(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return BinlogDump.prototype.binlogData;\n  }\n\n  binlogData(packet) {\n    // ok - continue consuming events\n    // error - error\n    // eof - end of binlog\n    if (packet.isEOF()) {\n      this.emit('eof');\n      return null;\n    }\n    // binlog event header\n    packet.readInt8();\n    const header = new BinlogEventHeader(packet);\n    const EventParser = eventParsers[header.eventType];\n    let event;\n    if (EventParser) {\n      event = new EventParser(packet);\n    } else {\n      event = {\n        name: 'UNKNOWN'\n      };\n    }\n    event.header = header;\n    this.emit('event', event);\n    return BinlogDump.prototype.binlogData;\n  }\n}\n\nclass RotateEvent {\n  constructor(packet) {\n    this.pposition = packet.readInt32();\n    // TODO: read uint64 here\n    packet.readInt32(); // positionDword2\n    this.nextBinlog = packet.readString();\n    this.name = 'RotateEvent';\n  }\n}\n\nclass FormatDescriptionEvent {\n  constructor(packet) {\n    this.binlogVersion = packet.readInt16();\n    this.serverVersion = packet.readString(50).replace(/\\u0000.*/, ''); // eslint-disable-line no-control-regex\n    this.createTimestamp = packet.readInt32();\n    this.eventHeaderLength = packet.readInt8(); // should be 19\n    this.eventsLength = packet.readBuffer();\n    this.name = 'FormatDescriptionEvent';\n  }\n}\n\nclass QueryEvent {\n  constructor(packet) {\n    const parseStatusVars = require('../packets/binlog_query_statusvars.js');\n    this.slaveProxyId = packet.readInt32();\n    this.executionTime = packet.readInt32();\n    const schemaLength = packet.readInt8();\n    this.errorCode = packet.readInt16();\n    const statusVarsLength = packet.readInt16();\n    const statusVars = packet.readBuffer(statusVarsLength);\n    this.schema = packet.readString(schemaLength);\n    packet.readInt8(); // should be zero\n    this.statusVars = parseStatusVars(statusVars);\n    this.query = packet.readString();\n    this.name = 'QueryEvent';\n  }\n}\n\nclass XidEvent {\n  constructor(packet) {\n    this.binlogVersion = packet.readInt16();\n    this.xid = packet.readInt64();\n    this.name = 'XidEvent';\n  }\n}\n\neventParsers[2] = QueryEvent;\neventParsers[4] = RotateEvent;\neventParsers[15] = FormatDescriptionEvent;\neventParsers[16] = XidEvent;\n\nmodule.exports = BinlogDump;\n", "'use strict';\n\nconst Command = require('./command.js');\nconst Packets = require('../packets/index.js');\nconst ClientHandshake = require('./client_handshake.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nclass ChangeUser extends Command {\n  constructor(options, callback) {\n    super();\n    this.onResult = callback;\n    this.user = options.user;\n    this.password = options.password;\n    this.database = options.database;\n    this.passwordSha1 = options.passwordSha1;\n    this.charsetNumber = options.charsetNumber;\n    this.currentConfig = options.currentConfig;\n  }\n  start(packet, connection) {\n    const newPacket = new Packets.ChangeUser({\n      flags: connection.config.clientFlags,\n      user: this.user,\n      database: this.database,\n      charsetNumber: this.charsetNumber,\n      password: this.password,\n      passwordSha1: this.passwordSha1,\n      authPluginData1: connection._handshakePacket.authPluginData1,\n      authPluginData2: connection._handshakePacket.authPluginData2\n    });\n    this.currentConfig.user = this.user;\n    this.currentConfig.password = this.password;\n    this.currentConfig.database = this.database;\n    this.currentConfig.charsetNumber = this.charsetNumber;\n    connection.clientEncoding = CharsetToEncoding[this.charsetNumber];\n    // reset prepared statements cache as all statements become invalid after changeUser\n    connection._statements.reset();\n    connection.writePacket(newPacket.toPacket());\n    return ChangeUser.prototype.handshakeResult;\n  }\n}\n\nChangeUser.prototype.handshakeResult =\n  ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken =\n  ClientHandshake.prototype.calculateNativePasswordAuthToken;\n\nmodule.exports = ChangeUser;\n", "'use strict';\n\nconst Command = require('./command.js');\nconst CommandCode = require('../constants/commands.js');\nconst Packet = require('../packets/packet.js');\n\nclass Quit extends Command {\n  constructor(callback) {\n    super();\n    this.done = callback;\n  }\n\n  start(packet, connection) {\n    connection._closing = true;\n    const quit = new Packet(\n      0,\n      Buffer.from([1, 0, 0, 0, CommandCode.QUIT]),\n      0,\n      5\n    );\n    if (this.done) {\n      this.done();\n    }\n    connection.writePacket(quit);\n    return null;\n  }\n}\n\nmodule.exports = Quit;\n", "'use strict';\n\nconst ClientHandshake = require('./client_handshake.js');\nconst ServerHandshake = require('./server_handshake.js');\nconst Query = require('./query.js');\nconst Prepare = require('./prepare.js');\nconst CloseStatement = require('./close_statement.js');\nconst Execute = require('./execute.js');\nconst Ping = require('./ping.js');\nconst RegisterSlave = require('./register_slave.js');\nconst BinlogDump = require('./binlog_dump.js');\nconst ChangeUser = require('./change_user.js');\nconst Quit = require('./quit.js');\n\nmodule.exports = {\n  ClientHandshake,\n  ServerHandshake,\n  Query,\n  Prepare,\n  CloseStatement,\n  Execute,\n  Ping,\n  RegisterSlave,\n  BinlogDump,\n  ChangeUser,\n  Quit\n};\n", "'use strict';\n\n// Certificate for Amazon RDS (Updated for 2019)\n// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html\n// https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.tls\nexports['Amazon RDS'] = {\n  ca: [\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID9DCCAtygAwIBAgIBQjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUwOTExMzFaFw0y\\n' +\n      'MDAzMDUwOTExMzFaMIGKMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEbMBkGA1UEAwwSQW1hem9uIFJE\\n' +\n      'UyBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuD8nrZ8V\\n' +\n      'u+VA8yVlUipCZIKPTDcOILYpUe8Tct0YeQQr0uyl018StdBsa3CjBgvwpDRq1HgF\\n' +\n      'Ji2N3+39+shCNspQeE6aYU+BHXhKhIIStt3r7gl/4NqYiDDMWKHxHq0nsGDFfArf\\n' +\n      'AOcjZdJagOMqb3fF46flc8k2E7THTm9Sz4L7RY1WdABMuurpICLFE3oHcGdapOb9\\n' +\n      'T53pQR+xpHW9atkcf3pf7gbO0rlKVSIoUenBlZipUlp1VZl/OD/E+TtRhDDNdI2J\\n' +\n      'P/DSMM3aEsq6ZQkfbz/Ilml+Lx3tJYXUDmp+ZjzMPLk/+3beT8EhrwtcG3VPpvwp\\n' +\n      'BIOqsqVVTvw/CwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw\\n' +\n      'AwEB/zAdBgNVHQ4EFgQUTgLurD72FchM7Sz1BcGPnIQISYMwHwYDVR0jBBgwFoAU\\n' +\n      'TgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQEFBQADggEBAHZcgIio8pAm\\n' +\n      'MjHD5cl6wKjXxScXKtXygWH2BoDMYBJF9yfyKO2jEFxYKbHePpnXB1R04zJSWAw5\\n' +\n      '2EUuDI1pSBh9BA82/5PkuNlNeSTB3dXDD2PEPdzVWbSKvUB8ZdooV+2vngL0Zm4r\\n' +\n      '47QPyd18yPHrRIbtBtHR/6CwKevLZ394zgExqhnekYKIqqEX41xsUV0Gm6x4vpjf\\n' +\n      '2u6O/+YE2U+qyyxHE5Wd5oqde0oo9UUpFETJPVb6Q2cEeQib8PBAyi0i6KnF+kIV\\n' +\n      'A9dY7IHSubtCK/i8wxMVqfd5GtbA8mmpeJFwnDvm9rBEsHybl08qlax9syEwsUYr\\n' +\n      '/40NawZfTUU=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIBRDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMDZaFw0y\\n' +\n      'MDAzMDUyMjAzMDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n' +\n      'UyBhcC1ub3J0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n' +\n      'ggEBAMmM2B4PfTXCZjbZMWiDPyxvk/eeNwIRJAhfzesiGUiLozX6CRy3rwC1ZOPV\\n' +\n      'AcQf0LB+O8wY88C/cV+d4Q2nBDmnk+Vx7o2MyMh343r5rR3Na+4izd89tkQVt0WW\\n' +\n      'vO21KRH5i8EuBjinboOwAwu6IJ+HyiQiM0VjgjrmEr/YzFPL8MgHD/YUHehqjACn\\n' +\n      'C0+B7/gu7W4qJzBL2DOf7ub2qszGtwPE+qQzkCRDwE1A4AJmVE++/FLH2Zx78Egg\\n' +\n      'fV1sUxPtYgjGH76VyyO6GNKM6rAUMD/q5mnPASQVIXgKbupr618bnH+SWHFjBqZq\\n' +\n      'HvDGPMtiiWII41EmGUypyt5AbysCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n' +\n      'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIiKM0Q6n1K4EmLxs3ZXxINbwEwR\\n' +\n      'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n' +\n      'A4IBAQBezGbE9Rw/k2e25iGjj5n8r+M3dlye8ORfCE/dijHtxqAKasXHgKX8I9Tw\\n' +\n      'JkBiGWiuzqn7gO5MJ0nMMro1+gq29qjZnYX1pDHPgsRjUX8R+juRhgJ3JSHijRbf\\n' +\n      '4qNJrnwga7pj94MhcLq9u0f6dxH6dXbyMv21T4TZMTmcFduf1KgaiVx1PEyJjC6r\\n' +\n      'M+Ru+A0eM+jJ7uCjUoZKcpX8xkj4nmSnz9NMPog3wdOSB9cAW7XIc5mHa656wr7I\\n' +\n      'WJxVcYNHTXIjCcng2zMKd1aCcl2KSFfy56sRfT7J5Wp69QSr+jq8KM55gw8uqAwi\\n' +\n      'VPrXn2899T1rcTtFYFP16WXjGuc0\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIBRTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMTlaFw0y\\n' +\n      'MDAzMDUyMjAzMTlaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n' +\n      'UyBhcC1zb3V0aGVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n' +\n      'ggEBANaXElmSEYt/UtxHFsARFhSUahTf1KNJzR0Dmay6hqOXQuRVbKRwPd19u5vx\\n' +\n      'DdF1sLT7D69IK3VDnUiQScaCv2Dpu9foZt+rLx+cpx1qiQd1UHrvqq8xPzQOqCdC\\n' +\n      'RFStq6yVYZ69yfpfoI67AjclMOjl2Vph3ftVnqP0IgVKZdzeC7fd+umGgR9xY0Qr\\n' +\n      'Ubhd/lWdsbNvzK3f1TPWcfIKQnpvSt85PIEDJir6/nuJUKMtmJRwTymJf0i+JZ4x\\n' +\n      '7dJa341p2kHKcHMgOPW7nJQklGBA70ytjUV6/qebS3yIugr/28mwReflg3TJzVDl\\n' +\n      'EOvi6pqbqNbkMuEwGDCmEQIVqgkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n' +\n      'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAu93/4k5xbWOsgdCdn+/KdiRuit\\n' +\n      'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n' +\n      'A4IBAQBlcjSyscpPjf5+MgzMuAsCxByqUt+WFspwcMCpwdaBeHOPSQrXNqX2Sk6P\\n' +\n      'kth6oCivA64trWo8tFMvPYlUA1FYVD5WpN0kCK+P5pD4KHlaDsXhuhClJzp/OP8t\\n' +\n      'pOyUr5109RHLxqoKB5J5m1XA7rgcFjnMxwBSWFe3/4uMk/+4T53YfCVXuc6QV3i7\\n' +\n      'I/2LAJwFf//pTtt6fZenYfCsahnr2nvrNRNyAxcfvGZ/4Opn/mJtR6R/AjvQZHiR\\n' +\n      'bkRNKF2GW0ueK5W4FkZVZVhhX9xh1Aj2Ollb+lbOqADaVj+AT3PoJPZ3MPQHKCXm\\n' +\n      'xwG0LOLlRr/TfD6li1AfOVTAJXv9\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIBRjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMjRaFw0y\\n' +\n      'MDAzMDUyMjAzMjRaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n' +\n      'UyBhcC1zb3V0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n' +\n      'ggEBAJqBAJutz69hFOh3BtLHZTbwE8eejGGKayn9hu98YMDPzWzGXWCmW+ZYWELA\\n' +\n      'cY3cNWNF8K4FqKXFr2ssorBYim1UtYFX8yhydT2hMD5zgQ2sCGUpuidijuPA6zaq\\n' +\n      'Z3tdhVR94f0q8mpwpv2zqR9PcqaGDx2VR1x773FupRPRo7mEW1vC3IptHCQlP/zE\\n' +\n      '7jQiLl28bDIH2567xg7e7E9WnZToRnhlYdTaDaJsHTzi5mwILi4cihSok7Shv/ME\\n' +\n      'hnukvxeSPUpaVtFaBhfBqq055ePq9I+Ns4KGreTKMhU0O9fkkaBaBmPaFgmeX/XO\\n' +\n      'n2AX7gMouo3mtv34iDTZ0h6YCGkCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n' +\n      'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFIlQnY0KHYWn1jYumSdJYfwj/Nfw\\n' +\n      'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n' +\n      'A4IBAQA0wVU6/l41cTzHc4azc4CDYY2Wd90DFWiH9C/mw0SgToYfCJ/5Cfi0NT/Y\\n' +\n      'PRnk3GchychCJgoPA/k9d0//IhYEAIiIDjyFVgjbTkKV3sh4RbdldKVOUB9kumz/\\n' +\n      'ZpShplsGt3z4QQiVnKfrAgqxWDjR0I0pQKkxXa6Sjkicos9LQxVtJ0XA4ieG1E7z\\n' +\n      'zJr+6t80wmzxvkInSaWP3xNJK9azVRTrgQZQlvkbpDbExl4mNTG66VD3bAp6t3Wa\\n' +\n      'B49//uDdfZmPkqqbX+hsxp160OH0rxJppwO3Bh869PkDnaPEd/Pxw7PawC+li0gi\\n' +\n      'NRV8iCEx85aFxcyOhqn0WZOasxee\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIBRzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzFaFw0y\\n' +\n      'MDAzMDUyMjAzMzFaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJE\\n' +\n      'UyBldS1jZW50cmFsLTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n' +\n      'AQDFtP2dhSLuaPOI4ZrrPWsK4OY9ocQBp3yApH1KJYmI9wpQKZG/KCH2E6Oo7JAw\\n' +\n      'QORU519r033T+FO2Z7pFPlmz1yrxGXyHpJs8ySx3Yo5S8ncDCdZJCLmtPiq/hahg\\n' +\n      '5/0ffexMFUCQaYicFZsrJ/cStdxUV+tSw2JQLD7UxS9J97LQWUPyyG+ZrjYVTVq+\\n' +\n      'zudnFmNSe4QoecXMhAFTGJFQXxP7nhSL9Ao5FGgdXy7/JWeWdQIAj8ku6cBDKPa6\\n' +\n      'Y6kP+ak+In+Lye8z9qsCD/afUozfWjPR2aA4JoIZVF8dNRShIMo8l0XfgfM2q0+n\\n' +\n      'ApZWZ+BjhIO5XuoUgHS3D2YFAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNV\\n' +\n      'HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRm4GsWIA/M6q+tK8WGHWDGh2gcyTAf\\n' +\n      'BgNVHSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOC\\n' +\n      'AQEAHpMmeVQNqcxgfQdbDIi5UIy+E7zZykmtAygN1XQrvga9nXTis4kOTN6g5/+g\\n' +\n      'HCx7jIXeNJzAbvg8XFqBN84Quqgpl/tQkbpco9Jh1HDs558D5NnZQxNqH5qXQ3Mm\\n' +\n      'uPgCw0pYcPOa7bhs07i+MdVwPBsX27CFDtsgAIru8HvKxY1oTZrWnyIRo93tt/pk\\n' +\n      'WuItVMVHjaQZVfTCow0aDUbte6Vlw82KjUFq+n2NMSCJDiDKsDDHT6BJc4AJHIq3\\n' +\n      '/4Z52MSC9KMr0yAaaoWfW/yMEj9LliQauAgwVjArF4q78rxpfKTG9Rfd8U1BZANP\\n' +\n      '7FrFMN0ThjfA1IvmOYcgskY5bQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBSDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzMzVaFw0y\\n' +\n      'MDAzMDUyMjAzMzVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyBldS13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx\\n' +\n      'PdbqQ0HKRj79Pmocxvjc+P6i4Ux24kgFIl+ckiir1vzkmesc3a58gjrMlCksEObt\\n' +\n      'Yihs5IhzEq1ePT0gbfS9GYFp34Uj/MtPwlrfCBWG4d2TcrsKRHr1/EXUYhWqmdrb\\n' +\n      'RhX8XqoRhVkbF/auzFSBhTzcGGvZpQ2KIaxRcQfcXlMVhj/pxxAjh8U4F350Fb0h\\n' +\n      'nX1jw4/KvEreBL0Xb2lnlGTkwVxaKGSgXEnOgIyOFdOQc61vdome0+eeZsP4jqeR\\n' +\n      'TGYJA9izJsRbe2YJxHuazD+548hsPlM3vFzKKEVURCha466rAaYAHy3rKur3HYQx\\n' +\n      'Yt+SoKcEz9PXuSGj96ejAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBTebg//h2oeXbZjQ4uuoiuLYzuiPDAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n' +\n      'TikPaGeZasTPw+4RBemlsyPAjtFFQLo7ddaFdORLgdEysVf8aBqndvbA6MT/v4lj\\n' +\n      'GtEtUdF59ZcbWOrVm+fBZ2h/jYJ59dYF/xzb09nyRbdMSzB9+mkSsnOMqluq5y8o\\n' +\n      'DY/PfP2vGhEg/2ZncRC7nlQU1Dm8F4lFWEiQ2fi7O1cW852Vmbq61RIfcYsH/9Ma\\n' +\n      'kpgk10VZ75b8m3UhmpZ/2uRY+JEHImH5WpcTJ7wNiPNJsciZMznGtrgOnPzYco8L\\n' +\n      'cDleOASIZifNMQi9PKOJKvi0ITz0B/imr8KBsW0YjZVJ54HMa7W1lwugSM7aMAs+\\n' +\n      'E3Sd5lS+SHwWaOCHwhOEVA==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBSTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDBaFw0y\\n' +\n      'MDAzMDUyMjAzNDBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyBzYS1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCU\\n' +\n      'X4OBnQ5xA6TLJAiFEI6l7bUWjoVJBa/VbMdCCSs2i2dOKmqUaXu2ix2zcPILj3lZ\\n' +\n      'GMk3d/2zvTK/cKhcFrewHUBamTeVHdEmynhMQamqNmkM4ptYzFcvEUw1TGxHT4pV\\n' +\n      'Q6gSN7+/AJewQvyHexHo8D0+LDN0/Wa9mRm4ixCYH2CyYYJNKaZt9+EZfNu+PPS4\\n' +\n      '8iB0TWH0DgQkbWMBfCRgolLLitAZklZ4dvdlEBS7evN1/7ttBxUK6SvkeeSx3zBl\\n' +\n      'ww3BlXqc3bvTQL0A+RRysaVyFbvtp9domFaDKZCpMmDFAN/ntx215xmQdrSt+K3F\\n' +\n      'cXdGQYHx5q410CAclGnbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT6iVWnm/uakS+tEX2mzIfw+8JL0zAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n' +\n      'FmDD+QuDklXn2EgShwQxV13+txPRuVdOSrutHhoCgMwFWCMtPPtBAKs6KPY7Guvw\\n' +\n      'DpJoZSehDiOfsgMirjOWjvfkeWSNvKfjWTVneX7pZD9W5WPnsDBvTbCGezm+v87z\\n' +\n      'b+ZM2ZMo98m/wkMcIEAgdSKilR2fuw8rLkAjhYFfs0A7tDgZ9noKwgHvoE4dsrI0\\n' +\n      'KZYco6DlP/brASfHTPa2puBLN9McK3v+h0JaSqqm5Ro2Bh56tZkQh8AWy/miuDuK\\n' +\n      '3+hNEVdxosxlkM1TPa1DGj0EzzK0yoeerXuH2HX7LlCrrxf6/wdKnjR12PMrLQ4A\\n' +\n      'pCqkcWw894z6bV9MAvKe6A==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBQzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMTU0MDRaFw0y\\n' +\n      'MDAzMDUyMTU0MDRaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyB1cy1lYXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI\\n' +\n      'UIuwh8NusKHk1SqPXcP7OqxY3S/M2ZyQWD3w7Bfihpyyy/fc1w0/suIpX3kbMhAV\\n' +\n      '2ESwged2/2zSx4pVnjp/493r4luhSqQYzru78TuPt9bhJIJ51WXunZW2SWkisSaf\\n' +\n      'USYUzVN9ezR/bjXTumSUQaLIouJt3OHLX49s+3NAbUyOI8EdvgBQWD68H1epsC0n\\n' +\n      'CI5s+pIktyOZ59c4DCDLQcXErQ+tNbDC++oct1ANd/q8p9URonYwGCGOBy7sbCYq\\n' +\n      '9eVHh1Iy2M+SNXddVOGw5EuruvHoCIQyOz5Lz4zSuZA9dRbrfztNOpezCNYu6NKM\\n' +\n      'n+hzcvdiyxv77uNm8EaxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBQSQG3TmMe6Sa3KufaPBa72v4QFDzAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n' +\n      'L/mOZfB3187xTmjOHMqN2G2oSKHBKiQLM9uv8+97qT+XR+TVsBT6b3yoPpMAGhHA\\n' +\n      'Pc7nxAF5gPpuzatx0OTLPcmYucFmfqT/1qA5WlgCnMNtczyNMH97lKFTNV7Njtek\\n' +\n      'jWEzAEQSyEWrkNpNlC4j6kMYyPzVXQeXUeZTgJ9FNnVZqmvfjip2N22tawMjrCn5\\n' +\n      '7KN/zN65EwY2oO9XsaTwwWmBu3NrDdMbzJnbxoWcFWj4RBwanR1XjQOVNhDwmCOl\\n' +\n      '/1Et13b8CPyj69PC8BOVU6cfTSx8WUVy0qvYOKHNY9Bqa5BDnIL3IVmUkeTlM1mt\\n' +\n      'enRpyBj+Bk9rh/ICdiRKmA==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBSjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNDVaFw0y\\n' +\n      'MDAzMDUyMjAzNDVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyB1cy13ZXN0LTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDE\\n' +\n      'Dhw+uw/ycaiIhhyu2pXFRimq0DlB8cNtIe8hdqndH8TV/TFrljNgR8QdzOgZtZ9C\\n' +\n      'zzQ2GRpInN/qJF6slEd6wO+6TaDBQkPY+07TXNt52POFUhdVkhJXHpE2BS7Xn6J7\\n' +\n      '7RFAOeG1IZmc2DDt+sR1BgXzUqHslQGfFYNS0/MBO4P+ya6W7IhruB1qfa4HiYQS\\n' +\n      'dbe4MvGWnv0UzwAqdR7OF8+8/5c58YXZIXCO9riYF2ql6KNSL5cyDPcYK5VK0+Q9\\n' +\n      'VI6vuJHSMYcF7wLePw8jtBktqAFE/wbdZiIHhZvNyiNWPPNTGUmQbaJ+TzQEHDs5\\n' +\n      '8en+/W7JKnPyBOkxxENbAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBS0nw/tFR9bCjgqWTPJkyy4oOD8bzAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n' +\n      'CXGAY3feAak6lHdqj6+YWjy6yyUnLK37bRxZDsyDVXrPRQaXRzPTzx79jvDwEb/H\\n' +\n      'Q/bdQ7zQRWqJcbivQlwhuPJ4kWPUZgSt3JUUuqkMsDzsvj/bwIjlrEFDOdHGh0mi\\n' +\n      'eVIngFEjUXjMh+5aHPEF9BlQnB8LfVtKj18e15UDTXFa+xJPFxUR7wDzCfo4WI1m\\n' +\n      'sUMG4q1FkGAZgsoyFPZfF8IVvgCuGdR8z30VWKklFxttlK0eGLlPAyIO0CQxPQlo\\n' +\n      'saNJrHf4tLOgZIWk+LpDhNd9Et5EzvJ3aURUsKY4pISPPF5WdvM9OE59bERwUErd\\n' +\n      'nuOuQWQeeadMceZnauRzJQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBSzANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTAyMDUyMjAzNTBaFw0y\\n' +\n      'MDAzMDUyMjAzNTBaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyB1cy13ZXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDM\\n' +\n      'H58SR48U6jyERC1vYTnub34smf5EQVXyzaTmspWGWGzT31NLNZGSDFaa7yef9kdO\\n' +\n      'mzJsgebR5tXq6LdwlIoWkKYQ7ycUaadtVKVYdI40QcI3cHn0qLFlg2iBXmWp/B+i\\n' +\n      'Z34VuVlCh31Uj5WmhaBoz8t/GRqh1V/aCsf3Wc6jCezH3QfuCjBpzxdOOHN6Ie2v\\n' +\n      'xX09O5qmZTvMoRBAvPkxdaPg/Mi7fxueWTbEVk78kuFbF1jHYw8U1BLILIAhcqlq\\n' +\n      'x4u8nl73t3O3l/soNUcIwUDK0/S+Kfqhwn9yQyPlhb4Wy3pfnZLJdkyHldktnQav\\n' +\n      '9TB9u7KH5Lk0aAYslMLxAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBT8roM4lRnlFHWMPWRz0zkwFZog1jAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQUFAAOCAQEA\\n' +\n      'JwrxwgwmPtcdaU7O7WDdYa4hprpOMamI49NDzmE0s10oGrqmLwZygcWU0jT+fJ+Y\\n' +\n      'pJe1w0CVfKaeLYNsOBVW3X4ZPmffYfWBheZiaiEflq/P6t7/Eg81gaKYnZ/x1Dfa\\n' +\n      'sUYkzPvCkXe9wEz5zdUTOCptDt89rBR9CstL9vE7WYUgiVVmBJffWbHQLtfjv6OF\\n' +\n      'NMb0QME981kGRzc2WhgP71YS2hHd1kXtsoYP1yTu4vThSKsoN4bkiHsaC1cRkLoy\\n' +\n      '0fFA4wpB3WloMEvCDaUvvH1LZlBXTNlwi9KtcwD4tDxkkBt4tQczKLGpQ/nF/W9n\\n' +\n      '8YDWk3IIc1sd0bkZqoau2Q==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIBTDANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNTExMDYwMDA1NDZaFw0y\\n' +\n      'MDAzMDUwMDA1NDZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n' +\n      'UyBhcC1ub3J0aGVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n' +\n      'ggEBAKSwd+RVUzTRH0FgnbwoTK8TMm/zMT4+2BvALpAUe6YXbkisg2goycWuuWLg\\n' +\n      'jOpFBB3GtyvXZnkqi7MkDWUmj1a2kf8l2oLyoaZ+Hm9x/sV+IJzOqPvj1XVUGjP6\\n' +\n      'yYYnPJmUYqvZeI7fEkIGdFkP2m4/sgsSGsFvpD9FK1bL1Kx2UDpYX0kHTtr18Zm/\\n' +\n      '1oN6irqWALSmXMDydb8hE0FB2A1VFyeKE6PnoDj/Y5cPHwPPdEi6/3gkDkSaOG30\\n' +\n      'rWeQfL3pOcKqzbHaWTxMphd0DSL/quZ64Nr+Ly65Q5PRcTrtr55ekOUziuqXwk+o\\n' +\n      '9QpACMwcJ7ROqOznZTqTzSFVXFECAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n' +\n      'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFM6Nox/QWbhzWVvzoJ/y0kGpNPK+\\n' +\n      'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n' +\n      'A4IBAQCTkWBqNvyRf3Y/W21DwFx3oT/AIWrHt0BdGZO34tavummXemTH9LZ/mqv9\\n' +\n      'aljt6ZuDtf5DEQjdsAwXMsyo03ffnP7doWm8iaF1+Mui77ot0TmTsP/deyGwukvJ\\n' +\n      'tkxX8bZjDh+EaNauWKr+CYnniNxCQLfFtXYJsfOdVBzK3xNL+Z3ucOQRhr2helWc\\n' +\n      'CDQgwfhP1+3pRVKqHvWCPC4R3fT7RZHuRmZ38kndv476GxRntejh+ePffif78bFI\\n' +\n      '3rIZCPBGobrrUMycafSbyXteoGca/kA+/IqrAPlk0pWQ4aEL0yTWN2h2dnjoD7oX\\n' +\n      'byIuL/g9AGRh97+ssn7D6bDRPTbW\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/TCCAuWgAwIBAgIBTTANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA1MDMyMTI5MjJaFw0y\\n' +\n      'MDAzMDUyMTI5MjJaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UEAwwYQW1hem9uIFJE\\n' +\n      'UyBhcC1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      '06eWGLE0TeqL9kyWOLkS8q0fXO97z+xyBV3DKSB2lg2GkgBz3B98MkmkeB0SZy3G\\n' +\n      'Ce4uCpCPbFKiFEdiUclOlhZsrBuCeaimxLM3Ig2wuenElO/7TqgaYHYUbT3d+VQW\\n' +\n      'GUbLn5GRZJZe1OAClYdOWm7A1CKpuo+cVV1vxbY2nGUQSJPpVn2sT9gnwvjdE60U\\n' +\n      'JGYU/RLCTm8zmZBvlWaNIeKDnreIc4rKn6gUnJ2cQn1ryCVleEeyc3xjYDSrjgdn\\n' +\n      'FLYGcp9mphqVT0byeQMOk0c7RHpxrCSA0V5V6/CreFV2LteK50qcDQzDSM18vWP/\\n' +\n      'p09FoN8O7QrtOeZJzH/lmwIDAQABo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0T\\n' +\n      'AQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU2i83QHuEl/d0keXF+69HNJph7cMwHwYD\\n' +\n      'VR0jBBgwFoAUTgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQELBQADggEB\\n' +\n      'ACqnH2VjApoDqoSQOky52QBwsGaj+xWYHW5Gm7EvCqvQuhWMkeBuD6YJmMvNyA9G\\n' +\n      'I2lh6/o+sUk/RIsbYbxPRdhNPTOgDR9zsNRw6qxaHztq/CEC+mxDCLa3O1hHBaDV\\n' +\n      'BmB3nCZb93BvO0EQSEk7aytKq/f+sjyxqOcs385gintdHGU9uM7gTZHnU9vByJsm\\n' +\n      '/TL07Miq67X0NlhIoo3jAk+xHaeKJdxdKATQp0448P5cY20q4b8aMk1twcNaMvCP\\n' +\n      'dG4M5doaoUA8OQ/0ukLLae/LBxLeTw04q1/a2SyFaVUX2Twbb1S3xVWwLA8vsyGr\\n' +\n      'igXx7B5GgP+IHb6DTjPJAi0=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBTjANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA4MTExOTU4NDVaFw0y\\n' +\n      'MDAzMDUxOTU4NDVaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyB1cy1lYXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCp\\n' +\n      'WnnUX7wM0zzstccX+4iXKJa9GR0a2PpvB1paEX4QRCgfhEdQWDaSqyrWNgdVCKkt\\n' +\n      '1aQkWu5j6VAC2XIG7kKoonm1ZdBVyBLqW5lXNywlaiU9yhJkwo8BR+/OqgE+PLt/\\n' +\n      'EO1mlN0PQudja/XkExCXTO29TG2j7F/O7hox6vTyHNHc0H88zS21uPuBE+jivViS\\n' +\n      'yzj/BkyoQ85hnkues3f9R6gCGdc+J51JbZnmgzUkvXjAEuKhAm9JksVOxcOKUYe5\\n' +\n      'ERhn0U9zjzpfbAITIkul97VVa5IxskFFTHIPJbvRKHJkiF6wTJww/tc9wm+fSCJ1\\n' +\n      '+DbQTGZgkQ3bJrqRN29/AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBSAHQzUYYZbepwKEMvGdHp8wzHnfDAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n' +\n      'MbaEzSYZ+aZeTBxf8yi0ta8K4RdwEJsEmP6IhFFQHYUtva2Cynl4Q9tZg3RMsybT\\n' +\n      '9mlnSQQlbN/wqIIXbkrcgFcHoXG9Odm/bDtUwwwDaiEhXVfeQom3G77QHOWMTCGK\\n' +\n      'qadwuh5msrb17JdXZoXr4PYHDKP7j0ONfAyFNER2+uecblHfRSpVq5UeF3L6ZJb8\\n' +\n      'fSw/GtAV6an+/0r+Qm+PiI2H5XuZ4GmRJYnGMhqWhBYrY7p3jtVnKcsh39wgfUnW\\n' +\n      'AvZEZG/yhFyAZW0Essa39LiL5VSq14Y1DOj0wgnhSY/9WHxaAo1HB1T9OeZknYbD\\n' +\n      'fl/EGSZ0TEvZkENrXcPlVA==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIBTzANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjA5MTUwMDEwMTFaFw0y\\n' +\n      'MDAzMDUwMDEwMTFaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEjMCEGA1UEAwwaQW1hem9uIFJE\\n' +\n      'UyBjYS1jZW50cmFsLTEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n' +\n      'AQCZYI/iQ6DrS3ny3t1EwX1wAD+3LMgh7Fd01EW5LIuaK2kYIIQpsVKhxLCit/V5\\n' +\n      'AGc/1qiJS1Qz9ODLTh0Na6bZW6EakRzuHJLe32KJtoFYPC7Z09UqzXrpA/XL+1hM\\n' +\n      'P0ZmCWsU7Nn/EmvfBp9zX3dZp6P6ATrvDuYaVFr+SA7aT3FXpBroqBS1fyzUPs+W\\n' +\n      'c6zTR6+yc4zkHX0XQxC5RH6xjgpeRkoOajA/sNo7AQF7KlWmKHbdVF44cvvAhRKZ\\n' +\n      'XaoVs/C4GjkaAEPTCbopYdhzg+KLx9eB2BQnYLRrIOQZtRfbQI2Nbj7p3VsRuOW1\\n' +\n      'tlcks2w1Gb0YC6w6SuIMFkl1AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNV\\n' +\n      'HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBToYWxE1lawl6Ks6NsvpbHQ3GKEtzAf\\n' +\n      'BgNVHSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAG/8tQ0ooi3hoQpa5EJz0/E5VYBsAz3YxA2HoIonn0jJyG16bzB4yZt4vNQMA\\n' +\n      'KsNlQ1uwDWYL1nz63axieUUFIxqxl1KmwfhsmLgZ0Hd2mnTPIl2Hw3uj5+wdgGBg\\n' +\n      'agnAZ0bajsBYgD2VGQbqjdk2Qn7Fjy3LEWIvGZx4KyZ99OJ2QxB7JOPdauURAtWA\\n' +\n      'DKYkP4LLJxtj07DSzG8kuRWb9B47uqUD+eKDIyjfjbnzGtd9HqqzYFau7EX3HVD9\\n' +\n      '9Qhnjl7bTZ6YfAEZ3nH2t3Vc0z76XfGh47rd0pNRhMV+xpok75asKf/lNh5mcUrr\\n' +\n      'VKwflyMkQpSbDCmcdJ90N2xEXQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBUDANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNjEwMTAxNzQ0NDJaFw0y\\n' +\n      'MDAzMDUxNzQ0NDJaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyBldS13ZXN0LTIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDO\\n' +\n      'cttLJfubB4XMMIGWNfJISkIdCMGJyOzLiMJaiWB5GYoXKhEl7YGotpy0qklwW3BQ\\n' +\n      'a0fmVdcCLX+dIuVQ9iFK+ZcK7zwm7HtdDTCHOCKeOh2IcnU4c/VIokFi6Gn8udM6\\n' +\n      'N/Zi5M5OGpVwLVALQU7Yctsn3c95el6MdVx6mJiIPVu7tCVZn88Z2koBQ2gq9P4O\\n' +\n      'Sb249SHFqOb03lYDsaqy1NDsznEOhaRBw7DPJFpvmw1lA3/Y6qrExRI06H2VYR2i\\n' +\n      '7qxwDV50N58fs10n7Ye1IOxTVJsgEA7X6EkRRXqYaM39Z76R894548WHfwXWjUsi\\n' +\n      'MEX0RS0/t1GmnUQjvevDAgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBQBxmcuRSxERYCtNnSr5xNfySokHjAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n' +\n      'UyCUQjsF3nUAABjfEZmpksTuUo07aT3KGYt+EMMFdejnBQ0+2lJJFGtT+CDAk1SD\\n' +\n      'RSgfEBon5vvKEtlnTf9a3pv8WXOAkhfxnryr9FH6NiB8obISHNQNPHn0ljT2/T+I\\n' +\n      'Y6ytfRvKHa0cu3V0NXbJm2B4KEOt4QCDiFxUIX9z6eB4Kditwu05OgQh6KcogOiP\\n' +\n      'JesWxBMXXGoDC1rIYTFO7szwDyOHlCcVXJDNsTJhc32oDWYdeIbW7o/5I+aQsrXZ\\n' +\n      'C96HykZcgWzz6sElrQxUaT3IoMw/5nmw4uWKKnZnxgI9bY4fpQwMeBZ96iHfFxvH\\n' +\n      'mqfEEuC7uUoPofXdBp2ObQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/DCCAuSgAwIBAgIBUTANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzA4MjUyMTM5MjZaFw0y\\n' +\n      'MDAzMDUyMTM5MjZaMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJE\\n' +\n      'UyBldS13ZXN0LTMgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+\\n' +\n      'xmlEC/3a4cJH+UPwXCE02lC7Zq5NHd0dn6peMeLN8agb6jW4VfSY0NydjRj2DJZ8\\n' +\n      'K7wV6sub5NUGT1NuFmvSmdbNR2T59KX0p2dVvxmXHHtIpQ9Y8Aq3ZfhmC5q5Bqgw\\n' +\n      'tMA1xayDi7HmoPX3R8kk9ktAZQf6lDeksCvok8idjTu9tiSpDiMwds5BjMsWfyjZ\\n' +\n      'd13PTGGNHYVdP692BSyXzSP1Vj84nJKnciW8tAqwIiadreJt5oXyrCXi8ekUMs80\\n' +\n      'cUTuGm3aA3Q7PB5ljJMPqz0eVddaiIvmTJ9O3Ez3Du/HpImyMzXjkFaf+oNXf/Hx\\n' +\n      '/EW5jCRR6vEiXJcDRDS7AgMBAAGjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\\n' +\n      'Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBRZ9mRtS5fHk3ZKhG20Oack4cAqMTAfBgNV\\n' +\n      'HSMEGDAWgBROAu6sPvYVyEztLPUFwY+chAhJgzANBgkqhkiG9w0BAQsFAAOCAQEA\\n' +\n      'F/u/9L6ExQwD73F/bhCw7PWcwwqsK1mypIdrjdIsu0JSgwWwGCXmrIspA3n3Dqxq\\n' +\n      'sMhAJD88s9Em7337t+naar2VyLO63MGwjj+vA4mtvQRKq8ScIpiEc7xN6g8HUMsd\\n' +\n      'gPG9lBGfNjuAZsrGJflrko4HyuSM7zHExMjXLH+CXcv/m3lWOZwnIvlVMa4x0Tz0\\n' +\n      'A4fklaawryngzeEjuW6zOiYCzjZtPlP8Fw0SpzppJ8VpQfrZ751RDo4yudmPqoPK\\n' +\n      '5EUe36L8U+oYBXnC5TlYs9bpVv9o5wJQI5qA9oQE2eFWxF1E0AyZ4V5sgGUBStaX\\n' +\n      'BjDDWul0wSo7rt1Tq7XpnA==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIBTjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzEyMDEwMDU1NDJaFw0y\\n' +\n      'MDAzMDUwMDU1NDJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJE\\n' +\n      'UyBhcC1ub3J0aGVhc3QtMyBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\n' +\n      'ggEBAMZtQNnm/XT19mTa10ftHLzg5UhajoI65JHv4TQNdGXdsv+CQdGYU49BJ9Eu\\n' +\n      '3bYgiEtTzR2lQe9zGMvtuJobLhOWuavzp7IixoIQcHkFHN6wJ1CvqrxgvJfBq6Hy\\n' +\n      'EuCDCiU+PPDLUNA6XM6Qx3IpHd1wrJkjRB80dhmMSpxmRmx849uFafhN+P1QybsM\\n' +\n      'TI0o48VON2+vj+mNuQTyLMMP8D4odSQHjaoG+zyJfJGZeAyqQyoOUOFEyQaHC3TT\\n' +\n      '3IDSNCQlpxb9LerbCoKu79WFBBq3CS5cYpg8/fsnV2CniRBFFUumBt5z4dhw9RJU\\n' +\n      'qlUXXO1ZyzpGd+c5v6FtrfXtnIUCAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEGMBIG\\n' +\n      'A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFETv7ELNplYy/xTeIOInl6nzeiHg\\n' +\n      'MB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEBBQUA\\n' +\n      'A4IBAQCpKxOQcd0tEKb3OtsOY8q/MPwTyustGk2Rt7t9G68idADp8IytB7M0SDRo\\n' +\n      'wWZqynEq7orQVKdVOanhEWksNDzGp0+FPAf/KpVvdYCd7ru3+iI+V4ZEp2JFdjuZ\\n' +\n      'Zz0PIjS6AgsZqE5Ri1J+NmfmjGZCPhsHnGZiBaenX6K5VRwwwmLN6xtoqrrfR5zL\\n' +\n      'QfBeeZNJG6KiM3R/DxJ5rAa6Fz+acrhJ60L7HprhB7SFtj1RCijau3+ZwiGmUOMr\\n' +\n      'yKlMv+VgmzSw7o4Hbxy1WVrA6zQsTHHSGf+vkQn2PHvnFMUEu/ZLbTDYFNmTLK91\\n' +\n      'K6o4nMsEvhBKgo4z7H1EqqxXhvN2\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBDCCAuygAwIBAgIBTTANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xNzEyMDYyMjQyMjdaFw0y\\n' +\n      'MDAzMDQyMjQyMjdaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJE\\n' +\n      'UyBwcmV2aWV3LXVzLWVhc3QtMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\\n' +\n      'AQoCggEBAMw0E8k8URanS0c/i1S7wzFf5+XC9H2bm+4pENdElGP5s9rVCybrzJaw\\n' +\n      '6zZgVLpOFnS9mJ+sDHIMUexPjj0X4+r7wZ4+hPfy7Rmrgbt23IQwr+PIBxsKAVjj\\n' +\n      'iaQ3bSm5WQ79an5elfQqEDdZ13ckUcLBJDA8bUDthI8m7gnteGtx0M1D0VS5PDs9\\n' +\n      'cf96QlBia9Lx3VcNo3cc0PzP30E4j3h/Ywlb0jXUgB6oVlTxK70BjD3kZa+2xlea\\n' +\n      'vKmm4NqGVhPY7BWd4XNdbSYsPDeZ9HxHNWXZxoHcQ7vSU8RKYVPtoBK/zIp3eWOi\\n' +\n      'gzZlm5vYPvlkYh2pshttPPVyhZqlEZ8CAwEAAaNmMGQwDgYDVR0PAQH/BAQDAgEG\\n' +\n      'MBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI93K+FRhste6w3MiD+IK3Tc\\n' +\n      'g/BsMB8GA1UdIwQYMBaAFE4C7qw+9hXITO0s9QXBj5yECEmDMA0GCSqGSIb3DQEB\\n' +\n      'BQUAA4IBAQAs4RsC8MJVOvrlRi5sgKC9LJ4BvSrrbR5V8CdIEwlPqrVOSsU5t7Py\\n' +\n      'j8CHoPUY/ya1azlBSO62BqdZxipFuAR06NdxNG2Gy0fGl71N2udxokwEPW+IEZ81\\n' +\n      'G6JeX8HNFjnna8ehimz1VJDDW7qborhg3dCAgEWkgv5PDR9/zoUu6bbmHPV77zbx\\n' +\n      'Gq7Sybz5OiagC7Nj9N1WgjNXUEmlfY2DHXnJmIVgUGEVrBgu5tGcIU/bQCRznH1N\\n' +\n      'JsBH0SalneCbSzMBhQdnzL+L5KOERibWAZvS6ebmomTBwa03kgo/T0DfEccgobTs\\n' +\n      'rV6T9/8Vg9T18vEeqURL+LOGs7+lIKmN\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/TCCAuWgAwIBAgIBUjANBgkqhkiG9w0BAQsFADCBijELMAkGA1UEBhMCVVMx\\n' +\n      'EzARBgNVBAgMCldhc2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'GzAZBgNVBAMMEkFtYXpvbiBSRFMgUm9vdCBDQTAeFw0xODA5MjgxNzM0NTJaFw0y\\n' +\n      'MDAzMDUxNzM0NTJaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2FzaGluZ3Rv\\n' +\n      'bjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UEAwwYQW1hem9uIFJE\\n' +\n      'UyBldS1ub3J0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'wvHfpoixHNy1jvcq/WNhXDHlsFVbEOX7mp01YQeK0wWqlpFvjs2HFJ1sRnnmyhdT\\n' +\n      'sv4VQuXnQw2V2iFAO2HveDi8pcJ+eIXY+wloSVBytgYLTMcNpn5LmqIeyGO+Lr6p\\n' +\n      'KUr78I4uE0mnabxyILA96CYrYtgwpLCtpEXSdSJPwOSK9nX9++molxLcJ5v4fiPS\\n' +\n      'j46PETsbFoFdXXwYCdiJKpzO4zUAkKzzvzbF7cXg9R4noJuytjEKbluxugDHdnwl\\n' +\n      'SctGZ3moju2I0OpPbJKUI3wHsUMtY5v15X74MOED5lbtaW5+/6JIERggve0b23Ni\\n' +\n      '4nlYSt0Bb3z3Zwc83twCUwIDAQABo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0T\\n' +\n      'AQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU4stOy1OAFRyvZCSKNfCiPRD+rPowHwYD\\n' +\n      'VR0jBBgwFoAUTgLurD72FchM7Sz1BcGPnIQISYMwDQYJKoZIhvcNAQELBQADggEB\\n' +\n      'AHpRIlKh1fqbMHl0+VnJ/52XQy1F5gM2hnw3lYkOLsDyzj9W4V6D1v2EDgYW+ZVH\\n' +\n      '0wWqo8m0jS6CDn14W2HqNlyXyHpJK3eh3088zxvJgKqzKS4ghNzafN7axwYIwRN6\\n' +\n      '9rrhRWy9MaFHaSPKtgiuTxw9fOekqyJdO+OYpBVEp7KEEyEG9/W5xZcU64zGb6UT\\n' +\n      '8/g4+5t+HlT0nYBMvt8HW7w2XbFBetfKKK4WaoPKloOMN+RLO/JgJ6pVWvxM8nhC\\n' +\n      'PbVtr43OI1sQAXYk0an7aUDgXT98vGwovWNHI6lFCMGRG+WXhauLtKRsIr4hR1LV\\n' +\n      'fES7Q9MWPzPYHQoKELF9Jhk=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSUwIwYDVQQDDBxBbWF6b24gUkRTIGFwLWVhc3QtMSBSb290IENBMB4XDTE5MDIx\\n' +\n      'NzAyNDcwMFoXDTIyMDYwMTEyMDAwMFowgY8xCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n' +\n      'DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n' +\n      'V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSAwHgYDVQQD\\n' +\n      'DBdBbWF6b24gUkRTIGFwLWVhc3QtMSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAOcJAUofyJuBuPr5ISHi/Ha5ed8h3eGdzn4MBp6rytPOg9NVGRQs\\n' +\n      'O93fNGCIKsUT6gPuk+1f1ncMTV8Y0Fdf4aqGWme+Khm3ZOP3V1IiGnVq0U2xiOmn\\n' +\n      'SQ4Q7LoeQC4lC6zpoCHVJyDjZ4pAknQQfsXb77Togdt/tK5ahev0D+Q3gCwAoBoO\\n' +\n      'DHKJ6t820qPi63AeGbJrsfNjLKiXlFPDUj4BGir4dUzjEeH7/hx37na1XG/3EcxP\\n' +\n      '399cT5k7sY/CR9kctMlUyEEUNQOmhi/ly1Lgtihm3QfjL6K9aGLFNwX35Bkh9aL2\\n' +\n      'F058u+n8DP/dPeKUAcJKiQZUmzuen5n57x8CAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFlqgF4FQlb9yP6c+Q3E\\n' +\n      'O3tXv+zOMB8GA1UdIwQYMBaAFK9T6sY/PBZVbnHcNcQXf58P4OuPMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQDeXiS3v1z4jWAo1UvVyKDeHjtrtEH1Rida1eOXauFuEQa5tuOk\\n' +\n      'E53Os4haZCW4mOlKjigWs4LN+uLIAe1aFXGo92nGIqyJISHJ1L+bopx/JmIbHMCZ\\n' +\n      '0lTNJfR12yBma5VQy7vzeFku/SisKwX0Lov1oHD4MVhJoHbUJYkmAjxorcIHORvh\\n' +\n      'I3Vj5XrgDWtLDPL8/Id/roul/L+WX5ir+PGScKBfQIIN2lWdZoqdsx8YWqhm/ikL\\n' +\n      'C6qNieSwcvWL7C03ri0DefTQMY54r5wP33QU5hJ71JoaZI3YTeT0Nf+NRL4hM++w\\n' +\n      'Q0veeNzBQXg1f/JxfeA39IDIX1kiCf71tGlT\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEDCCAvigAwIBAgIJAJF3HxEqKM4lMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQTAe\\n' +\n      'Fw0xOTAyMTcwMjQ2MTFaFw0yNDAyMTYwMjQ2MTFaMIGUMQswCQYDVQQGEwJVUzEQ\\n' +\n      'MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n' +\n      'QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n' +\n      'MCMGA1UEAwwcQW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQTCCASIwDQYJKoZI\\n' +\n      'hvcNAQEBBQADggEPADCCAQoCggEBAOCVr1Yj5IW4XWa9QOLGJDSz4pqIM6BAbqQp\\n' +\n      'gYvzIO4Lv8c8dEnuuuCY8M/zOrJ1iQJ3cDiKGa32HVBVcH+nUdXzw4Jq5jw0hsb6\\n' +\n      '/WW2RD2aUe4jCkRD5wNzmeHM4gTgtMZnXNVHpELgKR4wVhSHEfWFTiMsZi35y8mj\\n' +\n      'PL98Mz/m/nMnB/59EjMvcJMrsUljHO6B9BMEcvNkwvre9xza0BQWKyiVRcbOpoj1\\n' +\n      'w4BPtYYZ+dW2QKw9AmYXwAmCLeATsxrHIJ/IbzS7obxv2QN2Eh4pJ3ghRCFv1XM9\\n' +\n      'XVkm13oiCjj7jsxAwF7o+VggPl/GG+/Gwk+TLuaTFNAtROpPxL8CAwEAAaNjMGEw\\n' +\n      'DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK9T6sY/\\n' +\n      'PBZVbnHcNcQXf58P4OuPMB8GA1UdIwQYMBaAFK9T6sY/PBZVbnHcNcQXf58P4OuP\\n' +\n      'MA0GCSqGSIb3DQEBCwUAA4IBAQBBY+KATaT7ndYT3Ky0VWaiwNfyl1u3aDxr+MKP\\n' +\n      'VeDhtOhlob5u0E+edOXUvEXd4A+ntS+U0HmwvtMXtQbQ2EJbsNRqZnS8KG9YB2Yc\\n' +\n      'Q99auphW3wMjwHRtflLO5h14aa9SspqJJgcM1R7Z3pAYeq6bpBDxZSGrYtWI64q4\\n' +\n      'h4i67qWAGDFcXSTW1kJ00GMlBCIGTeYiu8LYutdsDWzYKkeezJRjx9VR4w7A7e1G\\n' +\n      'WmY4aUg/8aPxCioY2zEQKNl55Ghg6Dwy+6BxaV6RlV9r9EaSCai11p1bgS568WQn\\n' +\n      '4WNQK36EGe37l2SOpDB6STrq57/rjREvmq803Ylg/Gf6qqzK\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSYwJAYDVQQDDB1BbWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTA1\\n' +\n      'MTAyMTU4NDNaFw0yNTA2MDExMjAwMDBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\n      'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\n      'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\n      'AwwYQW1hem9uIFJEUyBtZS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEAudOYPZH+ihJAo6hNYMB5izPVBe3TYhnZm8+X3IoaaYiKtsp1\\n' +\n      'JJhkTT0CEejYIQ58Fh4QrMUyWvU8qsdK3diNyQRoYLbctsBPgxBR1u07eUJDv38/\\n' +\n      'C1JlqgHmMnMi4y68Iy7ymv50QgAMuaBqgEBRI1R6Lfbyrb2YvH5txjJyTVMwuCfd\\n' +\n      'YPAtZVouRz0JxmnfsHyxjE+So56uOKTDuw++Ho4HhZ7Qveej7XB8b+PIPuroknd3\\n' +\n      'FQB5RVbXRvt5ZcVD4F2fbEdBniF7FAF4dEiofVCQGQ2nynT7dZdEIPfPdH3n7ZmE\\n' +\n      'lAOmwHQ6G83OsiHRBLnbp+QZRgOsjkHJxT20bQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUOEVDM7VomRH4HVdA\\n' +\n      'QvIMNq2tXOcwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXdaiqYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAHhvMssj+Th8IpNePU6RH0BiL6o9c437R3Q4IEJeFdYL+nZz\\n' +\n      'PW/rELDPvLRUNMfKM+KzduLZ+l29HahxefejYPXtvXBlq/E/9czFDD4fWXg+zVou\\n' +\n      'uDXhyrV4kNmP4S0eqsAP/jQHPOZAMFA4yVwO9hlqmePhyDnszCh9c1PfJSBh49+b\\n' +\n      '4w7i/L3VBOMt8j3EKYvqz0gVfpeqhJwL4Hey8UbVfJRFJMJzfNHpePqtDRAY7yjV\\n' +\n      'PYquRaV2ab/E+/7VFkWMM4tazYz/qsYA2jSH+4xDHvYk8LnsbcrF9iuidQmEc5sb\\n' +\n      'FgcWaSKG4DJjcI5k7AJLWcXyTDt21Ci43LE+I9Q=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEjCCAvqgAwIBAgIJANew34ehz5l8MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\n      'HhcNMTkwNTEwMjE0ODI3WhcNMjQwNTA4MjE0ODI3WjCBlTELMAkGA1UEBhMCVVMx\\n' +\n      'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'JjAkBgNVBAMMHUFtYXpvbiBSRFMgbWUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\n      'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7BYV88MukcY+rq0r79+C8UzkT30fEfT\\n' +\n      'aPXbx1d6M7uheGN4FMaoYmL+JE1NZPaMRIPTHhFtLSdPccInvenRDIatcXX+jgOk\\n' +\n      'UA6lnHQ98pwN0pfDUyz/Vph4jBR9LcVkBbe0zdoKKp+HGbMPRU0N2yNrog9gM5O8\\n' +\n      'gkU/3O2csJ/OFQNnj4c2NQloGMUpEmedwJMOyQQfcUyt9CvZDfIPNnheUS29jGSw\\n' +\n      'ERpJe/AENu8Pxyc72jaXQuD+FEi2Ck6lBkSlWYQFhTottAeGvVFNCzKszCntrtqd\\n' +\n      'rdYUwurYsLTXDHv9nW2hfDUQa0mhXf9gNDOBIVAZugR9NqNRNyYLHQIDAQABo2Mw\\n' +\n      'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU54cf\\n' +\n      'DjgwBx4ycBH8+/r8WXdaiqYwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXda\\n' +\n      'iqYwDQYJKoZIhvcNAQELBQADggEBAIIMTSPx/dR7jlcxggr+O6OyY49Rlap2laKA\\n' +\n      'eC/XI4ySP3vQkIFlP822U9Kh8a9s46eR0uiwV4AGLabcu0iKYfXjPkIprVCqeXV7\\n' +\n      'ny9oDtrbflyj7NcGdZLvuzSwgl9SYTJp7PVCZtZutsPYlbJrBPHwFABvAkMvRtDB\\n' +\n      'hitIg4AESDGPoCl94sYHpfDfjpUDMSrAMDUyO6DyBdZH5ryRMAs3lGtsmkkNUrso\\n' +\n      'aTW6R05681Z0mvkRdb+cdXtKOSuDZPoe2wJJIaz3IlNQNSrB5TImMYgmt6iAsFhv\\n' +\n      '3vfTSTKrZDNTJn4ybG6pq1zWExoXsktZPylJly6R3RBwV6nwqBM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEETCCAvmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSUwIwYDVQQDDBxBbWF6b24gUkRTIEJldGEgUm9vdCAyMDE5IENBMB4XDTE5MDgy\\n' +\n      'MDE3MTAwN1oXDTI0MDgxOTE3MzgyNlowgZkxCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n' +\n      'DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n' +\n      'V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSowKAYDVQQD\\n' +\n      'DCFBbWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3\\n' +\n      'DQEBAQUAA4IBDwAwggEKAoIBAQDTNCOlotQcLP8TP82U2+nk0bExVuuMVOgFeVMx\\n' +\n      'vbUHZQeIj9ikjk+jm6eTDnnkhoZcmJiJgRy+5Jt69QcRbb3y3SAU7VoHgtraVbxF\\n' +\n      'QDh7JEHI9tqEEVOA5OvRrDRcyeEYBoTDgh76ROco2lR+/9uCvGtHVrMCtG7BP7ZB\\n' +\n      'sSVNAr1IIRZZqKLv2skKT/7mzZR2ivcw9UeBBTUf8xsfiYVBvMGoEsXEycjYdf6w\\n' +\n      'WV+7XS7teNOc9UgsFNN+9AhIBc1jvee5E//72/4F8pAttAg/+mmPUyIKtekNJ4gj\\n' +\n      'OAR2VAzGx1ybzWPwIgOudZFHXFduxvq4f1hIRPH0KbQ/gkRrAgMBAAGjZjBkMA4G\\n' +\n      'A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTkvpCD\\n' +\n      '6C43rar9TtJoXr7q8dkrrjAfBgNVHSMEGDAWgBStoQwVpbGx87fxB3dEGDqKKnBT\\n' +\n      '4TANBgkqhkiG9w0BAQsFAAOCAQEAJd9fOSkwB3uVdsS+puj6gCER8jqmhd3g/J5V\\n' +\n      'Zjk9cKS8H0e8pq/tMxeJ8kpurPAzUk5RkCspGt2l0BSwmf3ahr8aJRviMX6AuW3/\\n' +\n      'g8aKplTvq/WMNGKLXONa3Sq8591J+ce8gtOX/1rDKmFI4wQ/gUzOSYiT991m7QKS\\n' +\n      'Fr6HMgFuz7RNJbb3Fy5cnurh8eYWA7mMv7laiLwTNsaro5qsqErD5uXuot6o9beT\\n' +\n      'a+GiKinEur35tNxAr47ax4IRubuIzyfCrezjfKc5raVV2NURJDyKP0m0CCaffAxE\\n' +\n      'qn2dNfYc3v1D8ypg3XjHlOzRo32RB04o8ALHMD9LSwsYDLpMag==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEDCCAvigAwIBAgIJAKFMXyltvuRdMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTAe\\n' +\n      'Fw0xOTA4MTkxNzM4MjZaFw0yNDA4MTkxNzM4MjZaMIGUMQswCQYDVQQGEwJVUzEQ\\n' +\n      'MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n' +\n      'QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n' +\n      'MCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTCCASIwDQYJKoZI\\n' +\n      'hvcNAQEBBQADggEPADCCAQoCggEBAMkZdnIH9ndatGAcFo+DppGJ1HUt4x+zeO+0\\n' +\n      'ZZ29m0sfGetVulmTlv2d5b66e+QXZFWpcPQMouSxxYTW08TbrQiZngKr40JNXftA\\n' +\n      'atvzBqIImD4II0ZX5UEVj2h98qe/ypW5xaDN7fEa5e8FkYB1TEemPaWIbNXqchcL\\n' +\n      'tV7IJPr3Cd7Z5gZJlmujIVDPpMuSiNaal9/6nT9oqN+JSM1fx5SzrU5ssg1Vp1vv\\n' +\n      '5Xab64uOg7wCJRB9R2GC9XD04odX6VcxUAGrZo6LR64ZSifupo3l+R5sVOc5i8NH\\n' +\n      'skdboTzU9H7+oSdqoAyhIU717PcqeDum23DYlPE2nGBWckE+eT8CAwEAAaNjMGEw\\n' +\n      'DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK2hDBWl\\n' +\n      'sbHzt/EHd0QYOooqcFPhMB8GA1UdIwQYMBaAFK2hDBWlsbHzt/EHd0QYOooqcFPh\\n' +\n      'MA0GCSqGSIb3DQEBCwUAA4IBAQAO/718k8EnOqJDx6wweUscGTGL/QdKXUzTVRAx\\n' +\n      'JUsjNUv49mH2HQVEW7oxszfH6cPCaupNAddMhQc4C/af6GHX8HnqfPDk27/yBQI+\\n' +\n      'yBBvIanGgxv9c9wBbmcIaCEWJcsLp3HzXSYHmjiqkViXwCpYfkoV3Ns2m8bp+KCO\\n' +\n      'y9XmcCKRaXkt237qmoxoh2sGmBHk2UlQtOsMC0aUQ4d7teAJG0q6pbyZEiPyKZY1\\n' +\n      'XR/UVxMJL0Q4iVpcRS1kaNCMfqS2smbLJeNdsan8pkw1dvPhcaVTb7CvjhJtjztF\\n' +\n      'YfDzAI5794qMlWxwilKMmUvDlPPOTen8NNHkLwWvyFCH7Doh\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEFzCCAv+gAwIBAgICFSUwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSgwJgYDVQQDDB9BbWF6b24gUkRTIFByZXZpZXcgUm9vdCAyMDE5IENBMB4XDTE5\\n' +\n      'MDgyMTIyMzk0N1oXDTI0MDgyMTIyMjk0OVowgZwxCzAJBgNVBAYTAlVTMRMwEQYD\\n' +\n      'VQQIDApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6\\n' +\n      'b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMS0wKwYD\\n' +\n      'VQQDDCRBbWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0G\\n' +\n      'CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0dB/U7qRnSf05wOi7m10Pa2uPMTJv\\n' +\n      'r6U/3Y17a5prq5Zr4++CnSUYarG51YuIf355dKs+7Lpzs782PIwCmLpzAHKWzix6\\n' +\n      'pOaTQ+WZ0+vUMTxyqgqWbsBgSCyP7pVBiyqnmLC/L4az9XnscrbAX4pNaoJxsuQe\\n' +\n      'mzBo6yofjQaAzCX69DuqxFkVTRQnVy7LCFkVaZtjNAftnAHJjVgQw7lIhdGZp9q9\\n' +\n      'IafRt2gteihYfpn+EAQ/t/E4MnhrYs4CPLfS7BaYXBycEKC5Muj1l4GijNNQ0Efo\\n' +\n      'xG8LSZz7SNgUvfVwiNTaqfLP3AtEAWiqxyMyh3VO+1HpCjT7uNBFtmF3AgMBAAGj\\n' +\n      'ZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\\n' +\n      'BBQtinkdrj+0B2+qdXngV2tgHnPIujAfBgNVHSMEGDAWgBRp0xqULkNh/w2ZVzEI\\n' +\n      'o2RIY7O03TANBgkqhkiG9w0BAQsFAAOCAQEAtJdqbCxDeMc8VN1/RzCabw9BIL/z\\n' +\n      '73Auh8eFTww/sup26yn8NWUkfbckeDYr1BrXa+rPyLfHpg06kwR8rBKyrs5mHwJx\\n' +\n      'bvOzXD/5WTdgreB+2Fb7mXNvWhenYuji1MF+q1R2DXV3I05zWHteKX6Dajmx+Uuq\\n' +\n      'Yq78oaCBSV48hMxWlp8fm40ANCL1+gzQ122xweMFN09FmNYFhwuW+Ao+Vv90ZfQG\\n' +\n      'PYwTvN4n/gegw2TYcifGZC2PNX74q3DH03DXe5fvNgRW5plgz/7f+9mS+YHd5qa9\\n' +\n      'tYTPUvoRbi169ou6jicsMKUKPORHWhiTpSCWR1FMMIbsAcsyrvtIsuaGCQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEFjCCAv6gAwIBAgIJAMzYZJ+R9NBVMA0GCSqGSIb3DQEBCwUAMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBD\\n' +\n      'QTAeFw0xOTA4MjEyMjI5NDlaFw0yNDA4MjEyMjI5NDlaMIGXMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBDQTCCASIw\\n' +\n      'DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM7kkS6vjgKKQTPynC2NjdN5aPPV\\n' +\n      'O71G0JJS/2ARVBVJd93JLiGovVJilfWYfwZCs4gTRSSjrUD4D4HyqCd6A+eEEtJq\\n' +\n      'M0DEC7i0dC+9WNTsPszuB206Jy2IUmxZMIKJAA1NHSbIMjB+b6/JhbSUi7nKdbR/\\n' +\n      'brj83bF+RoSA+ogrgX7mQbxhmFcoZN9OGaJgYKsKWUt5Wqv627KkGodUK8mDepgD\\n' +\n      'S3ZfoRQRx3iceETpcmHJvaIge6+vyDX3d9Z22jmvQ4AKv3py2CmU2UwuhOltFDwB\\n' +\n      '0ddtb39vgwrJxaGfiMRHpEP1DfNLWHAnA69/pgZPwIggidS+iBPUhgucMp8CAwEA\\n' +\n      'AaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\n      'FGnTGpQuQ2H/DZlXMQijZEhjs7TdMB8GA1UdIwQYMBaAFGnTGpQuQ2H/DZlXMQij\\n' +\n      'ZEhjs7TdMA0GCSqGSIb3DQEBCwUAA4IBAQC3xz1vQvcXAfpcZlngiRWeqU8zQAMQ\\n' +\n      'LZPCFNv7PVk4pmqX+ZiIRo4f9Zy7TrOVcboCnqmP/b/mNq0gVF4O+88jwXJZD+f8\\n' +\n      '/RnABMZcnGU+vK0YmxsAtYU6TIb1uhRFmbF8K80HHbj9vSjBGIQdPCbvmR2zY6VJ\\n' +\n      'BYM+w9U9hp6H4DVMLKXPc1bFlKA5OBTgUtgkDibWJKFOEPW3UOYwp9uq6pFoN0AO\\n' +\n      'xMTldqWFsOF3bJIlvOY0c/1EFZXu3Ns6/oCP//Ap9vumldYMUZWmbK+gK33FPOXV\\n' +\n      '8BQ6jNC29icv7lLDpRPwjibJBXX+peDR5UK4FdYcswWEB1Tix5X8dYu6\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgICVIYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDQxNzEz\\n' +\n      'MDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDUYOz1hGL42yUCrcsMSOoU8AeD/3KgZ4q7gP+vAz1WnY9K/kim\\n' +\n      'eWN/2Qqzlo3+mxSFQFyD4MyV3+CnCPnBl9Sh1G/F6kThNiJ7dEWSWBQGAB6HMDbC\\n' +\n      'BaAsmUc1UIz8sLTL3fO+S9wYhA63Wun0Fbm/Rn2yk/4WnJAaMZcEtYf6e0KNa0LM\\n' +\n      'p/kN/70/8cD3iz3dDR8zOZFpHoCtf0ek80QqTich0A9n3JLxR6g6tpwoYviVg89e\\n' +\n      'qCjQ4axxOkWWeusLeTJCcY6CkVyFvDAKvcUl1ytM5AiaUkXblE7zDFXRM4qMMRdt\\n' +\n      'lPm8d3pFxh0fRYk8bIKnpmtOpz3RIctDrZZxAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBT99wKJftD3jb4sHoHG\\n' +\n      'i3uGlH6W6TAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAZ17hhr3dII3hUfuHQ1hPWGrpJOX/G9dLzkprEIcCidkmRYl+\\n' +\n      'hu1Pe3caRMh/17+qsoEErmnVq5jNY9X1GZL04IZH8YbHc7iRHw3HcWAdhN8633+K\\n' +\n      'jYEB2LbJ3vluCGnCejq9djDb6alOugdLMJzxOkHDhMZ6/gYbECOot+ph1tQuZXzD\\n' +\n      'tZ7prRsrcuPBChHlPjmGy8M9z8u+kF196iNSUGC4lM8vLkHM7ycc1/ZOwRq9aaTe\\n' +\n      'iOghbQQyAEe03MWCyDGtSmDfr0qEk+CHN+6hPiaL8qKt4s+V9P7DeK4iW08ny8Ox\\n' +\n      'AVS7u0OK/5+jKMAMrKwpYrBydOjTUTHScocyNw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBjCCAu6gAwIBAgIJAMc0ZzaSUK51MA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkw\\n' +\n      'ODIyMTcwODUwWhcNMjQwODIyMTcwODUwWjCBjzELMAkGA1UEBhMCVVMxEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFtYXpv\\n' +\n      'biBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIDAeBgNV\\n' +\n      'BAMMF0FtYXpvbiBSRFMgUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEArXnF/E6/Qh+ku3hQTSKPMhQQlCpoWvnIthzX6MK3p5a0eXKZ\\n' +\n      'oWIjYcNNG6UwJjp4fUXl6glp53Jobn+tWNX88dNH2n8DVbppSwScVE2LpuL+94vY\\n' +\n      '0EYE/XxN7svKea8YvlrqkUBKyxLxTjh+U/KrGOaHxz9v0l6ZNlDbuaZw3qIWdD/I\\n' +\n      '6aNbGeRUVtpM6P+bWIoxVl/caQylQS6CEYUk+CpVyJSkopwJlzXT07tMoDL5WgX9\\n' +\n      'O08KVgDNz9qP/IGtAcRduRcNioH3E9v981QO1zt/Gpb2f8NqAjUUCUZzOnij6mx9\\n' +\n      'McZ+9cWX88CRzR0vQODWuZscgI08NvM69Fn2SQIDAQABo2MwYTAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUc19g2LzLA5j0Kxc0LjZa\\n' +\n      'pmD/vB8wHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJKoZIhvcN\\n' +\n      'AQELBQADggEBAHAG7WTmyjzPRIM85rVj+fWHsLIvqpw6DObIjMWokpliCeMINZFV\\n' +\n      'ynfgBKsf1ExwbvJNzYFXW6dihnguDG9VMPpi2up/ctQTN8tm9nDKOy08uNZoofMc\\n' +\n      'NUZxKCEkVKZv+IL4oHoeayt8egtv3ujJM6V14AstMQ6SwvwvA93EP/Ug2e4WAXHu\\n' +\n      'cbI1NAbUgVDqp+DRdfvZkgYKryjTWd/0+1fS8X1bBZVWzl7eirNVnHbSH2ZDpNuY\\n' +\n      '0SBd8dj5F6ld3t58ydZbrTHze7JJOd8ijySAp4/kiu9UfZWuTPABzDa/DSdz9Dk/\\n' +\n      'zPW4CXXvhLmE02TA9/HeCw3KEHIwicNuEfw=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICQ2QwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDUxODQ2\\n' +\n      'MjlaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBzYS1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAMMvR+ReRnOzqJzoaPipNTt1Z2VA968jlN1+SYKUrYM3No+Vpz0H\\n' +\n      'M6Tn0oYB66ByVsXiGc28ulsqX1HbHsxqDPwvQTKvO7SrmDokoAkjJgLocOLUAeld\\n' +\n      '5AwvUjxGRP6yY90NV7X786MpnYb2Il9DIIaV9HjCmPt+rjy2CZjS0UjPjCKNfB8J\\n' +\n      'bFjgW6GGscjeyGb/zFwcom5p4j0rLydbNaOr9wOyQrtt3ZQWLYGY9Zees/b8pmcc\\n' +\n      'Jt+7jstZ2UMV32OO/kIsJ4rMUn2r/uxccPwAc1IDeRSSxOrnFKhW3Cu69iB3bHp7\\n' +\n      'JbawY12g7zshE4I14sHjv3QoXASoXjx4xgMCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI1Fc/Ql2jx+oJPgBVYq\\n' +\n      'ccgP0pQ8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQB4VVVabVp70myuYuZ3vltQIWqSUMhkaTzehMgGcHjMf9iLoZ/I\\n' +\n      '93KiFUSGnek5cRePyS9wcpp0fcBT3FvkjpUdCjVtdttJgZFhBxgTd8y26ImdDDMR\\n' +\n      '4+BUuhI5msvjL08f+Vkkpu1GQcGmyFVPFOy/UY8iefu+QyUuiBUnUuEDd49Hw0Fn\\n' +\n      '/kIPII6Vj82a2mWV/Q8e+rgN8dIRksRjKI03DEoP8lhPlsOkhdwU6Uz9Vu6NOB2Q\\n' +\n      'Ls1kbcxAc7cFSyRVJEhh12Sz9d0q/CQSTFsVJKOjSNQBQfVnLz1GwO/IieUEAr4C\\n' +\n      'jkTntH0r1LX5b/GwN4R887LvjAEdTbg1his7\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgIDAIkHMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTA2MTc0\\n' +\n      'MDIxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\n      'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\n      'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\n      'YXpvbiBSRFMgdXMtd2VzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDD2yzbbAl77OofTghDMEf624OvU0eS9O+lsdO0QlbfUfWa1Kd6\\n' +\n      '0WkgjkLZGfSRxEHMCnrv4UPBSK/Qwn6FTjkDLgemhqBtAnplN4VsoDL+BkRX4Wwq\\n' +\n      '/dSQJE2b+0hm9w9UMVGFDEq1TMotGGTD2B71eh9HEKzKhGzqiNeGsiX4VV+LJzdH\\n' +\n      'uM23eGisNqmd4iJV0zcAZ+Gbh2zK6fqTOCvXtm7Idccv8vZZnyk1FiWl3NR4WAgK\\n' +\n      'AkvWTIoFU3Mt7dIXKKClVmvssG8WHCkd3Xcb4FHy/G756UZcq67gMMTX/9fOFM/v\\n' +\n      'l5C0+CHl33Yig1vIDZd+fXV1KZD84dEJfEvHAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBR+ap20kO/6A7pPxo3+\\n' +\n      'T3CfqZpQWjAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAHCJky2tPjPttlDM/RIqExupBkNrnSYnOK4kr9xJ3sl8UF2DA\\n' +\n      'PAnYsjXp3rfcjN/k/FVOhxwzi3cXJF/2Tjj39Bm/OEfYTOJDNYtBwB0VVH4ffa/6\\n' +\n      'tZl87jaIkrxJcreeeHqYMnIxeN0b/kliyA+a5L2Yb0VPjt9INq34QDc1v74FNZ17\\n' +\n      '4z8nr1nzg4xsOWu0Dbjo966lm4nOYIGBRGOKEkHZRZ4mEiMgr3YLkv8gSmeitx57\\n' +\n      'Z6dVemNtUic/LVo5Iqw4n3TBS0iF2C1Q1xT/s3h+0SXZlfOWttzSluDvoMv5PvCd\\n' +\n      'pFjNn+aXLAALoihL1MJSsxydtsLjOBro5eK0Vw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICOFAwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAxNzQ2\\n' +\n      'MjFaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAzU72e6XbaJbi4HjJoRNjKxzUEuChKQIt7k3CWzNnmjc5\\n' +\n      '8I1MjCpa2W1iw1BYVysXSNSsLOtUsfvBZxi/1uyMn5ZCaf9aeoA9UsSkFSZBjOCN\\n' +\n      'DpKPCmfV1zcEOvJz26+1m8WDg+8Oa60QV0ou2AU1tYcw98fOQjcAES0JXXB80P2s\\n' +\n      '3UfkNcnDz+l4k7j4SllhFPhH6BQ4lD2NiFAP4HwoG6FeJUn45EPjzrydxjq6v5Fc\\n' +\n      'cQ8rGuHADVXotDbEhaYhNjIrsPL+puhjWfhJjheEw8c4whRZNp6gJ/b6WEes/ZhZ\\n' +\n      'h32DwsDsZw0BfRDUMgUn8TdecNexHUw8vQWeC181hwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwW9bWgkWkr0U\\n' +\n      'lrOsq2kvIdrECDgwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAEugF0Gj7HVhX0ehPZoGRYRt3PBuI2YjfrrJRTZ9X5wc\\n' +\n      '9T8oHmw07mHmNy1qqWvooNJg09bDGfB0k5goC2emDiIiGfc/kvMLI7u+eQOoMKj6\\n' +\n      'mkfCncyRN3ty08Po45vTLBFZGUvtQmjM6yKewc4sXiASSBmQUpsMbiHRCL72M5qV\\n' +\n      'obcJOjGcIdDTmV1BHdWT+XcjynsGjUqOvQWWhhLPrn4jWe6Xuxll75qlrpn3IrIx\\n' +\n      'CRBv/5r7qbcQJPOgwQsyK4kv9Ly8g7YT1/vYBlR3cRsYQjccw5ceWUj2DrMVWhJ4\\n' +\n      'prf+E3Aa4vYmLLOUUvKnDQ1k3RGNu56V0tonsQbfsaM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECjCCAvKgAwIBAgICEzUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAyMDUy\\n' +\n      'MjVaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\n      'em9uIFJEUyBjYS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\n      'ggEPADCCAQoCggEBAOxHqdcPSA2uBjsCP4DLSlqSoPuQ/X1kkJLusVRKiQE2zayB\\n' +\n      'viuCBt4VB9Qsh2rW3iYGM+usDjltGnI1iUWA5KHcvHszSMkWAOYWLiMNKTlg6LCp\\n' +\n      'XnE89tvj5dIH6U8WlDvXLdjB/h30gW9JEX7S8supsBSci2GxEzb5mRdKaDuuF/0O\\n' +\n      'qvz4YE04pua3iZ9QwmMFuTAOYzD1M72aOpj+7Ac+YLMM61qOtU+AU6MndnQkKoQi\\n' +\n      'qmUN2A9IFaqHFzRlSdXwKCKUA4otzmz+/N3vFwjb5F4DSsbsrMfjeHMo6o/nb6Nh\\n' +\n      'YDb0VJxxPee6TxSuN7CQJ2FxMlFUezcoXqwqXD0CAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\n      'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFDGGpon9WfIpsggE\\n' +\n      'CxHq8hZ7E2ESMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\n      'SIb3DQEBCwUAA4IBAQAvpeQYEGZvoTVLgV9rd2+StPYykMsmFjWQcyn3dBTZRXC2\\n' +\n      'lKq7QhQczMAOhEaaN29ZprjQzsA2X/UauKzLR2Uyqc2qOeO9/YOl0H3qauo8C/W9\\n' +\n      'r8xqPbOCDLEXlOQ19fidXyyEPHEq5WFp8j+fTh+s8WOx2M7IuC0ANEetIZURYhSp\\n' +\n      'xl9XOPRCJxOhj7JdelhpweX0BJDNHeUFi0ClnFOws8oKQ7sQEv66d5ddxqqZ3NVv\\n' +\n      'RbCvCtEutQMOUMIuaygDlMn1anSM8N7Wndx8G6+Uy67AnhjGx7jw/0YPPxopEj6x\\n' +\n      'JXP8j0sJbcT9K/9/fPVLNT25RvQ/93T2+IQL4Ca2\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICYpgwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExNzMx\\n' +\n      'NDhaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAMk3YdSZ64iAYp6MyyKtYJtNzv7zFSnnNf6vv0FB4VnfITTMmOyZ\\n' +\n      'LXqKAT2ahZ00hXi34ewqJElgU6eUZT/QlzdIu359TEZyLVPwURflL6SWgdG01Q5X\\n' +\n      'O++7fSGcBRyIeuQWs9FJNIIqK8daF6qw0Rl5TXfu7P9dBc3zkgDXZm2DHmxGDD69\\n' +\n      '7liQUiXzoE1q2Z9cA8+jirDioJxN9av8hQt12pskLQumhlArsMIhjhHRgF03HOh5\\n' +\n      'tvi+RCfihVOxELyIRTRpTNiIwAqfZxxTWFTgfn+gijTmd0/1DseAe82aYic8JbuS\\n' +\n      'EMbrDduAWsqrnJ4GPzxHKLXX0JasCUcWyMECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPLtsq1NrwJXO13C9eHt\\n' +\n      'sLY11AGwMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQAnWBKj5xV1A1mYd0kIgDdkjCwQkiKF5bjIbGkT3YEFFbXoJlSP\\n' +\n      '0lZZ/hDaOHI8wbLT44SzOvPEEmWF9EE7SJzkvSdQrUAWR9FwDLaU427ALI3ngNHy\\n' +\n      'lGJ2hse1fvSRNbmg8Sc9GBv8oqNIBPVuw+AJzHTacZ1OkyLZrz1c1QvwvwN2a+Jd\\n' +\n      'vH0V0YIhv66llKcYDMUQJAQi4+8nbRxXWv6Gq3pvrFoorzsnkr42V3JpbhnYiK+9\\n' +\n      'nRKd4uWl62KRZjGkfMbmsqZpj2fdSWMY1UGyN1k+kDmCSWYdrTRDP0xjtIocwg+A\\n' +\n      'J116n4hV/5mbA0BaPiS2krtv17YAeHABZcvz\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECjCCAvKgAwIBAgICV2YwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExOTM2\\n' +\n      'MjBaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\n      'em9uIFJEUyBldS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\n      'ggEPADCCAQoCggEBAMEx54X2pHVv86APA0RWqxxRNmdkhAyp2R1cFWumKQRofoFv\\n' +\n      'n+SPXdkpIINpMuEIGJANozdiEz7SPsrAf8WHyD93j/ZxrdQftRcIGH41xasetKGl\\n' +\n      'I67uans8d+pgJgBKGb/Z+B5m+UsIuEVekpvgpwKtmmaLFC/NCGuSsJoFsRqoa6Gh\\n' +\n      'm34W6yJoY87UatddCqLY4IIXaBFsgK9Q/wYzYLbnWM6ZZvhJ52VMtdhcdzeTHNW0\\n' +\n      '5LGuXJOF7Ahb4JkEhoo6TS2c0NxB4l4MBfBPgti+O7WjR3FfZHpt18A6Zkq6A2u6\\n' +\n      'D/oTSL6c9/3sAaFTFgMyL3wHb2YlW0BPiljZIqECAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\n      'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFOcAToAc6skWffJa\\n' +\n      'TnreaswAfrbcMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\n      'SIb3DQEBCwUAA4IBAQA1d0Whc1QtspK496mFWfFEQNegLh0a9GWYlJm+Htcj5Nxt\\n' +\n      'DAIGXb+8xrtOZFHmYP7VLCT5Zd2C+XytqseK/+s07iAr0/EPF+O2qcyQWMN5KhgE\\n' +\n      'cXw2SwuP9FPV3i+YAm11PBVeenrmzuk9NrdHQ7TxU4v7VGhcsd2C++0EisrmquWH\\n' +\n      'mgIfmVDGxphwoES52cY6t3fbnXmTkvENvR+h3rj+fUiSz0aSo+XZUGHPgvuEKM/W\\n' +\n      'CBD9Smc9CBoBgvy7BgHRgRUmwtABZHFUIEjHI5rIr7ZvYn+6A0O6sogRfvVYtWFc\\n' +\n      'qpyrW1YX8mD0VlJ8fGKM3G+aCOsiiPKDV/Uafrm+\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgICGAcwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIxODE5\\n' +\n      'NDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\n      'em9uIFJEUyBldS1ub3J0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQCiIYnhe4UNBbdBb/nQxl5giM0XoVHWNrYV5nB0YukA98+TPn9v\\n' +\n      'Aoj1RGYmtryjhrf01Kuv8SWO+Eom95L3zquoTFcE2gmxCfk7bp6qJJ3eHOJB+QUO\\n' +\n      'XsNRh76fwDzEF1yTeZWH49oeL2xO13EAx4PbZuZpZBttBM5zAxgZkqu4uWQczFEs\\n' +\n      'JXfla7z2fvWmGcTagX10O5C18XaFroV0ubvSyIi75ue9ykg/nlFAeB7O0Wxae88e\\n' +\n      'uhiBEFAuLYdqWnsg3459NfV8Yi1GnaitTym6VI3tHKIFiUvkSiy0DAlAGV2iiyJE\\n' +\n      'q+DsVEO4/hSINJEtII4TMtysOsYPpINqeEzRAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRR0UpnbQyjnHChgmOc\\n' +\n      'hnlc0PogzTAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAKJD4xVzSf4zSGTBJrmamo86jl1NHQxXUApAZuBZEc8tqC6TI\\n' +\n      'T5CeoSr9CMuVC8grYyBjXblC4OsM5NMvmsrXl/u5C9dEwtBFjo8mm53rOOIm1fxl\\n' +\n      'I1oYB/9mtO9ANWjkykuLzWeBlqDT/i7ckaKwalhLODsRDO73vRhYNjsIUGloNsKe\\n' +\n      'pxw3dzHwAZx4upSdEVG4RGCZ1D0LJ4Gw40OfD69hfkDfRVVxKGrbEzqxXRvovmDc\\n' +\n      'tKLdYZO/6REoca36v4BlgIs1CbUXJGLSXUwtg7YXGLSVBJ/U0+22iGJmBSNcoyUN\\n' +\n      'cjPFD9JQEhDDIYYKSGzIYpvslvGc4T5ISXFiuQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICZIEwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIyMTMy\\n' +\n      'MzJaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBALGiwqjiF7xIjT0Sx7zB3764K2T2a1DHnAxEOr+/EIftWKxWzT3u\\n' +\n      'PFwS2eEZcnKqSdRQ+vRzonLBeNLO4z8aLjQnNbkizZMBuXGm4BqRm1Kgq3nlLDQn\\n' +\n      '7YqdijOq54SpShvR/8zsO4sgMDMmHIYAJJOJqBdaus2smRt0NobIKc0liy7759KB\\n' +\n      '6kmQ47Gg+kfIwxrQA5zlvPLeQImxSoPi9LdbRoKvu7Iot7SOa+jGhVBh3VdqndJX\\n' +\n      '7tm/saj4NE375csmMETFLAOXjat7zViMRwVorX4V6AzEg1vkzxXpA9N7qywWIT5Y\\n' +\n      'fYaq5M8i6vvLg0CzrH9fHORtnkdjdu1y+0MCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFOhOx1yt3Z7mvGB9jBv\\n' +\n      '2ymdZwiOMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQBehqY36UGDvPVU9+vtaYGr38dBbp+LzkjZzHwKT1XJSSUc2wqM\\n' +\n      'hnCIQKilonrTIvP1vmkQi8qHPvDRtBZKqvz/AErW/ZwQdZzqYNFd+BmOXaeZWV0Q\\n' +\n      'oHtDzXmcwtP8aUQpxN0e1xkWb1E80qoy+0uuRqb/50b/R4Q5qqSfJhkn6z8nwB10\\n' +\n      '7RjLtJPrK8igxdpr3tGUzfAOyiPrIDncY7UJaL84GFp7WWAkH0WG3H8Y8DRcRXOU\\n' +\n      'mqDxDLUP3rNuow3jnGxiUY+gGX5OqaZg4f4P6QzOSmeQYs6nLpH0PiN00+oS1BbD\\n' +\n      'bpWdZEttILPI+vAYkU4QuBKKDjJL6HbSd+cn\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgIDAIVCMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTEzMTcw\\n' +\n      'NjQxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\n      'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\n      'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\n      'YXpvbiBSRFMgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDE+T2xYjUbxOp+pv+gRA3FO24+1zCWgXTDF1DHrh1lsPg5k7ht\\n' +\n      '2KPYzNc+Vg4E+jgPiW0BQnA6jStX5EqVh8BU60zELlxMNvpg4KumniMCZ3krtMUC\\n' +\n      'au1NF9rM7HBh+O+DYMBLK5eSIVt6lZosOb7bCi3V6wMLA8YqWSWqabkxwN4w0vXI\\n' +\n      '8lu5uXXFRemHnlNf+yA/4YtN4uaAyd0ami9+klwdkZfkrDOaiy59haOeBGL8EB/c\\n' +\n      'dbJJlguHH5CpCscs3RKtOOjEonXnKXldxarFdkMzi+aIIjQ8GyUOSAXHtQHb3gZ4\\n' +\n      'nS6Ey0CMlwkB8vUObZU9fnjKJcL5QCQqOfwvAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQUPuRHohPxx4VjykmH\\n' +\n      '6usGrLL1ETAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAUdR9Vb3y33Yj6X6KGtuthZ08SwjImVQPtknzpajNE5jOJAh8\\n' +\n      'quvQnU9nlnMO85fVDU1Dz3lLHGJ/YG1pt1Cqq2QQ200JcWCvBRgdvH6MjHoDQpqZ\\n' +\n      'HvQ3vLgOGqCLNQKFuet9BdpsHzsctKvCVaeBqbGpeCtt3Hh/26tgx0rorPLw90A2\\n' +\n      'V8QSkZJjlcKkLa58N5CMM8Xz8KLWg3MZeT4DmlUXVCukqK2RGuP2L+aME8dOxqNv\\n' +\n      'OnOz1zrL5mR2iJoDpk8+VE/eBDmJX40IJk6jBjWoxAO/RXq+vBozuF5YHN1ujE92\\n' +\n      'tO8HItgTp37XT8bJBAiAnt5mxw+NLSqtxk2QdQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICY4kwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTMyMDEx\\n' +\n      'NDJaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAr5u9OuLL/OF/fBNUX2kINJLzFl4DnmrhnLuSeSnBPgbb\\n' +\n      'qddjf5EFFJBfv7IYiIWEFPDbDG5hoBwgMup5bZDbas+ZTJTotnnxVJTQ6wlhTmns\\n' +\n      'eHECcg2pqGIKGrxZfbQhlj08/4nNAPvyYCTS0bEcmQ1emuDPyvJBYDDLDU6AbCB5\\n' +\n      '6Z7YKFQPTiCBblvvNzchjLWF9IpkqiTsPHiEt21sAdABxj9ityStV3ja/W9BfgxH\\n' +\n      'wzABSTAQT6FbDwmQMo7dcFOPRX+hewQSic2Rn1XYjmNYzgEHisdUsH7eeXREAcTw\\n' +\n      '61TRvaLH8AiOWBnTEJXPAe6wYfrcSd1pD0MXpoB62wIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUytwMiomQOgX5\\n' +\n      'Ichd+2lDWRUhkikwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBACf6lRDpfCD7BFRqiWM45hqIzffIaysmVfr+Jr+fBTjP\\n' +\n      'uYe/ba1omSrNGG23bOcT9LJ8hkQJ9d+FxUwYyICQNWOy6ejicm4z0C3VhphbTPqj\\n' +\n      'yjpt9nG56IAcV8BcRJh4o/2IfLNzC/dVuYJV8wj7XzwlvjysenwdrJCoLadkTr1h\\n' +\n      'eIdG6Le07sB9IxrGJL9e04afk37h7c8ESGSE4E+oS4JQEi3ATq8ne1B9DQ9SasXi\\n' +\n      'IRmhNAaISDzOPdyLXi9N9V9Lwe/DHcja7hgLGYx3UqfjhLhOKwp8HtoZORixAmOI\\n' +\n      'HfILgNmwyugAbuZoCazSKKBhQ0wgO0WZ66ZKTMG8Oho=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICUYkwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxODIx\\n' +\n      'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyB1cy13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBANCEZBZyu6yJQFZBJmSUZfSZd3Ui2gitczMKC4FLr0QzkbxY+cLa\\n' +\n      'uVONIOrPt4Rwi+3h/UdnUg917xao3S53XDf1TDMFEYp4U8EFPXqCn/GXBIWlU86P\\n' +\n      'PvBN+gzw3nS+aco7WXb+woTouvFVkk8FGU7J532llW8o/9ydQyDIMtdIkKTuMfho\\n' +\n      'OiNHSaNc+QXQ32TgvM9A/6q7ksUoNXGCP8hDOkSZ/YOLiI5TcdLh/aWj00ziL5bj\\n' +\n      'pvytiMZkilnc9dLY9QhRNr0vGqL0xjmWdoEXz9/OwjmCihHqJq+20MJPsvFm7D6a\\n' +\n      '2NKybR9U+ddrjb8/iyLOjURUZnj5O+2+OPcCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFEBxMBdv81xuzqcK5TVu\\n' +\n      'pHj+Aor8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQBZkfiVqGoJjBI37aTlLOSjLcjI75L5wBrwO39q+B4cwcmpj58P\\n' +\n      '3sivv+jhYfAGEbQnGRzjuFoyPzWnZ1DesRExX+wrmHsLLQbF2kVjLZhEJMHF9eB7\\n' +\n      'GZlTPdTzHErcnuXkwA/OqyXMpj9aghcQFuhCNguEfnROY9sAoK2PTfnTz9NJHL+Q\\n' +\n      'UpDLEJEUfc0GZMVWYhahc0x38ZnSY2SKacIPECQrTI0KpqZv/P+ijCEcMD9xmYEb\\n' +\n      'jL4en+XKS1uJpw5fIU5Sj0MxhdGstH6S84iAE5J3GM3XHklGSFwwqPYvuTXvANH6\\n' +\n      'uboynxRgSae59jIlAK6Jrr6GWMwQRbgcaAlW\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICEkYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxOTUz\\n' +\n      'NDdaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAufodI2Flker8q7PXZG0P0vmFSlhQDw907A6eJuF/WeMo\\n' +\n      'GHnll3b4S6nC3oRS3nGeRMHbyU2KKXDwXNb3Mheu+ox+n5eb/BJ17eoj9HbQR1cd\\n' +\n      'gEkIciiAltf8gpMMQH4anP7TD+HNFlZnP7ii3geEJB2GGXSxgSWvUzH4etL67Zmn\\n' +\n      'TpGDWQMB0T8lK2ziLCMF4XAC/8xDELN/buHCNuhDpxpPebhct0T+f6Arzsiswt2j\\n' +\n      '7OeNeLLZwIZvVwAKF7zUFjC6m7/VmTQC8nidVY559D6l0UhhU0Co/txgq3HVsMOH\\n' +\n      'PbxmQUwJEKAzQXoIi+4uZzHFZrvov/nDTNJUhC6DqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwaZpaCme+EiV\\n' +\n      'M5gcjeHZSTgOn4owHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAAR6a2meCZuXO2TF9bGqKGtZmaah4pH2ETcEVUjkvXVz\\n' +\n      'sl+ZKbYjrun+VkcMGGKLUjS812e7eDF726ptoku9/PZZIxlJB0isC/0OyixI8N4M\\n' +\n      'NsEyvp52XN9QundTjkl362bomPnHAApeU0mRbMDRR2JdT70u6yAzGLGsUwMkoNnw\\n' +\n      '1VR4XKhXHYGWo7KMvFrZ1KcjWhubxLHxZWXRulPVtGmyWg/MvE6KF+2XMLhojhUL\\n' +\n      '+9jB3Fpn53s6KMx5tVq1x8PukHmowcZuAF8k+W4gk8Y68wIwynrdZrKRyRv6CVtR\\n' +\n      'FZ8DeJgoNZT3y/GT254VqMxxfuy2Ccb/RInd16tEvVk=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICOYIwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTcyMDA1\\n' +\n      'MjlaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEA4dMak8W+XW8y/2F6nRiytFiA4XLwePadqWebGtlIgyCS\\n' +\n      'kbug8Jv5w7nlMkuxOxoUeD4WhI6A9EkAn3r0REM/2f0aYnd2KPxeqS2MrtdxxHw1\\n' +\n      'xoOxk2x0piNSlOz6yog1idsKR5Wurf94fvM9FdTrMYPPrDabbGqiBMsZZmoHLvA3\\n' +\n      'Z+57HEV2tU0Ei3vWeGIqnNjIekS+E06KhASxrkNU5vi611UsnYZlSi0VtJsH4UGV\\n' +\n      'LhnHl53aZL0YFO5mn/fzuNG/51qgk/6EFMMhaWInXX49Dia9FnnuWXwVwi6uX1Wn\\n' +\n      '7kjoHi5VtmC8ZlGEHroxX2DxEr6bhJTEpcLMnoQMqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUsUI5Cb3SWB8+\\n' +\n      'gv1YLN/ABPMdxSAwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAJAF3E9PM1uzVL8YNdzb6fwJrxxqI2shvaMVmC1mXS+w\\n' +\n      'G0zh4v2hBZOf91l1EO0rwFD7+fxoI6hzQfMxIczh875T6vUXePKVOCOKI5wCrDad\\n' +\n      'zQbVqbFbdhsBjF4aUilOdtw2qjjs9JwPuB0VXN4/jY7m21oKEOcnpe36+7OiSPjN\\n' +\n      'xngYewCXKrSRqoj3mw+0w/+exYj3Wsush7uFssX18av78G+ehKPIVDXptOCP/N7W\\n' +\n      '8iKVNeQ2QGTnu2fzWsGUSvMGyM7yqT+h1ILaT//yQS8er511aHMLc142bD4D9VSy\\n' +\n      'DgactwPDTShK/PXqhvNey9v/sKXm4XatZvwcc8KYlW4=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICcEUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNjU2\\n' +\n      'MjBaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAndtkldmHtk4TVQAyqhAvtEHSMb6pLhyKrIFved1WO3S7\\n' +\n      '+I+bWwv9b2W/ljJxLq9kdT43bhvzonNtI4a1LAohS6bqyirmk8sFfsWT3akb+4Sx\\n' +\n      '1sjc8Ovc9eqIWJCrUiSvv7+cS7ZTA9AgM1PxvHcsqrcUXiK3Jd/Dax9jdZE1e15s\\n' +\n      'BEhb2OEPE+tClFZ+soj8h8Pl2Clo5OAppEzYI4LmFKtp1X/BOf62k4jviXuCSst3\\n' +\n      'UnRJzE/CXtjmN6oZySVWSe0rQYuyqRl6//9nK40cfGKyxVnimB8XrrcxUN743Vud\\n' +\n      'QQVU0Esm8OVTX013mXWQXJHP2c0aKkog8LOga0vobQIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQULmoOS1mFSjj+\\n' +\n      'snUPx4DgS3SkLFYwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAAkVL2P1M2/G9GM3DANVAqYOwmX0Xk58YBHQu6iiQg4j\\n' +\n      'b4Ky/qsZIsgT7YBsZA4AOcPKQFgGTWhe9pvhmXqoN3RYltN8Vn7TbUm/ZVDoMsrM\\n' +\n      'gwv0+TKxW1/u7s8cXYfHPiTzVSJuOogHx99kBW6b2f99GbP7O1Sv3sLq4j6lVvBX\\n' +\n      'Fiacf5LAWC925nvlTzLlBgIc3O9xDtFeAGtZcEtxZJ4fnGXiqEnN4539+nqzIyYq\\n' +\n      'nvlgCzyvcfRAxwltrJHuuRu6Maw5AGcd2Y0saMhqOVq9KYKFKuD/927BTrbd2JVf\\n' +\n      '2sGWyuPZPCk3gq+5pCjbD0c6DkhcMGI6WwxvM5V/zSM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICJDQwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNzAz\\n' +\n      'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTMgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAL9bL7KE0n02DLVtlZ2PL+g/BuHpMYFq2JnE2RgompGurDIZdjmh\\n' +\n      '1pxfL3nT+QIVMubuAOy8InRfkRxfpxyjKYdfLJTPJG+jDVL+wDcPpACFVqoV7Prg\\n' +\n      'pVYEV0lc5aoYw4bSeYFhdzgim6F8iyjoPnObjll9mo4XsHzSoqJLCd0QC+VG9Fw2\\n' +\n      'q+GDRZrLRmVM2oNGDRbGpGIFg77aRxRapFZa8SnUgs2AqzuzKiprVH5i0S0M6dWr\\n' +\n      'i+kk5epmTtkiDHceX+dP/0R1NcnkCPoQ9TglyXyPdUdTPPRfKCq12dftqll+u4mV\\n' +\n      'ARdN6WFjovxax8EAP2OAUTi1afY+1JFMj+sCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFLfhrbrO5exkCVgxW0x3\\n' +\n      'Y2mAi8lNMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQAigQ5VBNGyw+OZFXwxeJEAUYaXVoP/qrhTOJ6mCE2DXUVEoJeV\\n' +\n      'SxScy/TlFA9tJXqmit8JH8VQ/xDL4ubBfeMFAIAo4WzNWDVoeVMqphVEcDWBHsI1\\n' +\n      'AETWzfsapRS9yQekOMmxg63d/nV8xewIl8aNVTHdHYXMqhhik47VrmaVEok1UQb3\\n' +\n      'O971RadLXIEbVd9tjY5bMEHm89JsZDnDEw1hQXBb67Elu64OOxoKaHBgUH8AZn/2\\n' +\n      'zFsL1ynNUjOhCSAA15pgd1vjwc0YsBbAEBPcHBWYBEyME6NLNarjOzBl4FMtATSF\\n' +\n      'wWCKRGkvqN8oxYhwR2jf2rR5Mu4DWkK5Q8Ep\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICJVUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTkxODE2\\n' +\n      'NTNaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyB1cy1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAM3i/k2u6cqbMdcISGRvh+m+L0yaSIoOXjtpNEoIftAipTUYoMhL\\n' +\n      'InXGlQBVA4shkekxp1N7HXe1Y/iMaPEyb3n+16pf3vdjKl7kaSkIhjdUz3oVUEYt\\n' +\n      'i8Z/XeJJ9H2aEGuiZh3kHixQcZczn8cg3dA9aeeyLSEnTkl/npzLf//669Ammyhs\\n' +\n      'XcAo58yvT0D4E0D/EEHf2N7HRX7j/TlyWvw/39SW0usiCrHPKDLxByLojxLdHzso\\n' +\n      'QIp/S04m+eWn6rmD+uUiRteN1hI5ncQiA3wo4G37mHnUEKo6TtTUh+sd/ku6a8HK\\n' +\n      'glMBcgqudDI90s1OpuIAWmuWpY//8xEG2YECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPqhoWZcrVY9mU7tuemR\\n' +\n      'RBnQIj1jMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQB6zOLZ+YINEs72heHIWlPZ8c6WY8MDU+Be5w1M+BK2kpcVhCUK\\n' +\n      'PJO4nMXpgamEX8DIiaO7emsunwJzMSvavSPRnxXXTKIc0i/g1EbiDjnYX9d85DkC\\n' +\n      'E1LaAUCmCZBVi9fIe0H2r9whIh4uLWZA41oMnJx/MOmo3XyMfQoWcqaSFlMqfZM4\\n' +\n      '0rNoB/tdHLNuV4eIdaw2mlHxdWDtF4oH+HFm+2cVBUVC1jXKrFv/euRVtsTT+A6i\\n' +\n      'h2XBHKxQ1Y4HgAn0jACP2QSPEmuoQEIa57bEKEcZsBR8SDY6ZdTd2HLRIApcCOSF\\n' +\n      'MRM8CKLeF658I0XgF8D5EsYoKPsA+74Z+jDH\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\\n' +\n      'ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\\n' +\n      'b24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\\n' +\n      'MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\\n' +\n      'b3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\\n' +\n      'ca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\\n' +\n      '9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\\n' +\n      'IFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\\n' +\n      'VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\\n' +\n      '93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\\n' +\n      'jgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\\n' +\n      'AYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\\n' +\n      'A4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\\n' +\n      'U5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\\n' +\n      'N+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\\n' +\n      'o/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\\n' +\n      '5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\\n' +\n      'rqXRfboQnoZsG4q5WTP468SQvvG5\\n' +\n      '-----END CERTIFICATE-----\\n'\n  ]\n};\n", "'use strict';\n\nconst urlParse = require('url').parse;\nconst ClientConstants = require('./constants/client');\nconst Charsets = require('./constants/charsets');\nlet SSLProfiles = null;\n\nconst validOptions = {\n  authPlugins: 1,\n  authSwitchHandler: 1,\n  bigNumberStrings: 1,\n  charset: 1,\n  charsetNumber: 1,\n  compress: 1,\n  connectAttributes: 1,\n  connectTimeout: 1,\n  database: 1,\n  dateStrings: 1,\n  debug: 1,\n  decimalNumbers: 1,\n  enableKeepAlive: 1,\n  flags: 1,\n  host: 1,\n  insecureAuth: 1,\n  isServer: 1,\n  keepAliveInitialDelay: 1,\n  localAddress: 1,\n  maxPreparedStatements: 1,\n  multipleStatements: 1,\n  namedPlaceholders: 1,\n  nestTables: 1,\n  password: 1,\n  passwordSha1: 1,\n  pool: 1,\n  port: 1,\n  queryFormat: 1,\n  rowsAsArray: 1,\n  socketPath: 1,\n  ssl: 1,\n  stream: 1,\n  stringifyObjects: 1,\n  supportBigNumbers: 1,\n  timezone: 1,\n  trace: 1,\n  typeCast: 1,\n  uri: 1,\n  user: 1,\n  // These options are used for Pool\n  connectionLimit: 1,\n  Promise: 1,\n  queueLimit: 1,\n  waitForConnections: 1\n};\n\nclass ConnectionConfig {\n  constructor(options) {\n    if (typeof options === 'string') {\n      options = ConnectionConfig.parseUrl(options);\n    } else if (options && options.uri) {\n      const uriOptions = ConnectionConfig.parseUrl(options.uri);\n      for (const key in uriOptions) {\n        if (!Object.prototype.hasOwnProperty.call(uriOptions, key)) continue;\n        if (options[key]) continue;\n        options[key] = uriOptions[key];\n      }\n    }\n    for (const key in options) {\n      if (!Object.prototype.hasOwnProperty.call(options, key)) continue;\n      if (validOptions[key] !== 1) {\n        // REVIEW: Should this be emitted somehow?\n        // eslint-disable-next-line no-console\n        console.error(\n          `Ignoring invalid configuration option passed to Connection: ${key}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\n        );\n      }\n    }\n    this.isServer = options.isServer;\n    this.stream = options.stream;\n    this.host = options.host || 'localhost';\n    this.port = options.port || 3306;\n    this.localAddress = options.localAddress;\n    this.socketPath = options.socketPath;\n    this.user = options.user || undefined;\n    this.password = options.password || undefined;\n    this.passwordSha1 = options.passwordSha1 || undefined;\n    this.database = options.database;\n    this.connectTimeout = isNaN(options.connectTimeout)\n      ? 10 * 1000\n      : options.connectTimeout;\n    this.insecureAuth = options.insecureAuth || false;\n    this.supportBigNumbers = options.supportBigNumbers || false;\n    this.bigNumberStrings = options.bigNumberStrings || false;\n    this.decimalNumbers = options.decimalNumbers || false;\n    this.dateStrings = options.dateStrings || false;\n    this.debug = options.debug;\n    this.trace = options.trace !== false;\n    this.stringifyObjects = options.stringifyObjects || false;\n    this.enableKeepAlive = !!options.enableKeepAlive;\n    this.keepAliveInitialDelay = options.keepAliveInitialDelay || 0;\n    if (\n      options.timezone &&\n      !/^(?:local|Z|[ +-]\\d\\d:\\d\\d)$/.test(options.timezone)\n    ) {\n      // strictly supports timezones specified by mysqljs/mysql:\n      // https://github.com/mysqljs/mysql#user-content-connection-options\n      // eslint-disable-next-line no-console\n      console.error(\n        `Ignoring invalid timezone passed to Connection: ${options.timezone}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\n      );\n      // SqlStrings falls back to UTC on invalid timezone\n      this.timezone = 'Z';\n    } else {\n      this.timezone = options.timezone || 'local';\n    }\n    this.queryFormat = options.queryFormat;\n    this.pool = options.pool || undefined;\n    this.ssl =\n      typeof options.ssl === 'string'\n        ? ConnectionConfig.getSSLProfile(options.ssl)\n        : options.ssl || false;\n    this.multipleStatements = options.multipleStatements || false;\n    this.rowsAsArray = options.rowsAsArray || false;\n    this.namedPlaceholders = options.namedPlaceholders || false;\n    this.nestTables =\n      options.nestTables === undefined ? undefined : options.nestTables;\n    this.typeCast = options.typeCast === undefined ? true : options.typeCast;\n    if (this.timezone[0] === ' ') {\n      // \"+\" is a url encoded char for space so it\n      // gets translated to space when giving a\n      // connection string..\n      this.timezone = `+${this.timezone.substr(1)}`;\n    }\n    if (this.ssl) {\n      if (typeof this.ssl !== 'object') {\n        throw new TypeError(\n          `SSL profile must be an object, instead it's a ${typeof this.ssl}`\n        );\n      }\n      // Default rejectUnauthorized to true\n      this.ssl.rejectUnauthorized = this.ssl.rejectUnauthorized !== false;\n    }\n    this.maxPacketSize = 0;\n    this.charsetNumber = options.charset\n      ? ConnectionConfig.getCharsetNumber(options.charset)\n      : options.charsetNumber || Charsets.UTF8MB4_UNICODE_CI;\n    this.compress = options.compress || false;\n    this.authPlugins = options.authPlugins;\n    this.authSwitchHandler = options.authSwitchHandler;\n    this.clientFlags = ConnectionConfig.mergeFlags(\n      ConnectionConfig.getDefaultFlags(options),\n      options.flags || ''\n    );\n    this.connectAttributes = options.connectAttributes;\n    this.maxPreparedStatements = options.maxPreparedStatements || 16000;\n  }\n\n  static mergeFlags(default_flags, user_flags) {\n    let flags = 0x0,\n      i;\n    if (!Array.isArray(user_flags)) {\n      user_flags = String(user_flags || '')\n        .toUpperCase()\n        .split(/\\s*,+\\s*/);\n    }\n    // add default flags unless \"blacklisted\"\n    for (i in default_flags) {\n      if (user_flags.indexOf(`-${default_flags[i]}`) >= 0) {\n        continue;\n      }\n      flags |= ClientConstants[default_flags[i]] || 0x0;\n    }\n    // add user flags unless already already added\n    for (i in user_flags) {\n      if (user_flags[i][0] === '-') {\n        continue;\n      }\n      if (default_flags.indexOf(user_flags[i]) >= 0) {\n        continue;\n      }\n      flags |= ClientConstants[user_flags[i]] || 0x0;\n    }\n    return flags;\n  }\n\n  static getDefaultFlags(options) {\n    const defaultFlags = [\n      'LONG_PASSWORD',\n      'FOUND_ROWS',\n      'LONG_FLAG',\n      'CONNECT_WITH_DB',\n      'ODBC',\n      'LOCAL_FILES',\n      'IGNORE_SPACE',\n      'PROTOCOL_41',\n      'IGNORE_SIGPIPE',\n      'TRANSACTIONS',\n      'RESERVED',\n      'SECURE_CONNECTION',\n      'MULTI_RESULTS',\n      'TRANSACTIONS',\n      'SESSION_TRACK'\n    ];\n    if (options && options.multipleStatements) {\n      defaultFlags.push('MULTI_STATEMENTS');\n    }\n    defaultFlags.push('PLUGIN_AUTH');\n    defaultFlags.push('PLUGIN_AUTH_LENENC_CLIENT_DATA');\n\n    if (options && options.connectAttributes) {\n      defaultFlags.push('CONNECT_ATTRS');\n    }\n    return defaultFlags;\n  }\n\n  static getCharsetNumber(charset) {\n    const num = Charsets[charset.toUpperCase()];\n    if (num === undefined) {\n      throw new TypeError(`Unknown charset '${charset}'`);\n    }\n    return num;\n  }\n\n  static getSSLProfile(name) {\n    if (!SSLProfiles) {\n      SSLProfiles = require('./constants/ssl_profiles.js');\n    }\n    const ssl = SSLProfiles[name];\n    if (ssl === undefined) {\n      throw new TypeError(`Unknown SSL profile '${name}'`);\n    }\n    return ssl;\n  }\n\n  static parseUrl(url) {\n    url = urlParse(url, true);\n    const options = {\n      host: url.hostname,\n      port: url.port,\n      database: url.pathname.substr(1)\n    };\n    if (url.auth) {\n      const auth = url.auth.split(':');\n      options.user = auth[0];\n      options.password = auth[1];\n    }\n    if (url.query) {\n      for (const key in url.query) {\n        const value = url.query[key];\n        try {\n          // Try to parse this as a JSON expression first\n          options[key] = JSON.parse(value);\n        } catch (err) {\n          // Otherwise assume it is a plain string\n          options[key] = value;\n        }\n      }\n    }\n    return options;\n  }\n}\n\nmodule.exports = ConnectionConfig;\n", "var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n", "if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n", "module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n", "'use strict'\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\n/* istanbul ignore next */\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n", "'use strict';\r\n\r\n// based on code from Brian White @mscdex mariasql library - https://github.com/mscdex/node-mariasql/blob/master/lib/Client.js#L272-L332\r\n// License: https://github.com/mscdex/node-mariasql/blob/master/LICENSE\r\n\r\nconst RE_PARAM = /(?:\\?)|(?::(\\d+|(?:[a-zA-Z][a-zA-Z0-9_]*)))/g,\r\nDQUOTE = 34,\r\nSQUOTE = 39,\r\nBSLASH = 92;\r\n\r\nfunction parse(query) {\r\n  let ppos = RE_PARAM.exec(query);\r\n  let curpos = 0;\r\n  let start = 0;\r\n  let end;\r\n  const parts = [];\r\n  let inQuote = false;\r\n  let escape = false;\r\n  let qchr;\r\n  const tokens = [];\r\n  let qcnt = 0;\r\n  let lastTokenEndPos = 0;\r\n  let i;\r\n\r\n  if (ppos) {\r\n    do {\r\n      for (i=curpos,end=ppos.index; i<end; ++i) {\r\n        let chr = query.charCodeAt(i);\r\n        if (chr === BSLASH)\r\n        escape = !escape;\r\n        else {\r\n          if (escape) {\r\n            escape = false;\r\n            continue;\r\n          }\r\n          if (inQuote && chr === qchr) {\r\n            if (query.charCodeAt(i + 1) === qchr) {\r\n              // quote escaped via \"\" or ''\r\n              ++i;\r\n              continue;\r\n            }\r\n            inQuote = false;\r\n          } else if (chr === DQUOTE || chr === SQUOTE) {\r\n            inQuote = true;\r\n            qchr = chr;\r\n          }\r\n        }\r\n      }\r\n      if (!inQuote) {\r\n        parts.push(query.substring(start, end));\r\n        tokens.push(ppos[0].length === 1 ? qcnt++ : ppos[1]);\r\n        start = end + ppos[0].length;\r\n        lastTokenEndPos = start;\r\n      }\r\n      curpos = end + ppos[0].length;\r\n    } while (ppos = RE_PARAM.exec(query));\r\n\r\n    if (tokens.length) {\r\n      if (curpos < query.length) {\r\n        parts.push(query.substring(lastTokenEndPos));\r\n      }\r\n      return [parts, tokens];\r\n    }\r\n  }\r\n  return [query];\r\n};\r\n\r\nconst EMPTY_LRU_FN = (key, value) => {};\r\n\r\nfunction createCompiler(config) {\r\n  if (!config)\r\n  config = {};\r\n  if (!config.placeholder) {\r\n    config.placeholder = '?';\r\n  }\r\n  let ncache = 100;\r\n  let cache;\r\n  if (typeof config.cache === 'number') {\r\n    ncache = config.cache;\r\n  }\r\n  if (typeof config.cache === 'object') {\r\n    cache = config.cache;\r\n  }\r\n  if (config.cache !== false && !cache) {\r\n    cache = require('lru-cache')({ max: ncache, dispose: EMPTY_LRU_FN });\r\n  }\r\n\r\n  function toArrayParams(tree, params) {\r\n    const arr = [];\r\n    if (tree.length == 1) {\r\n      return [tree[0], []];\r\n    }\r\n\r\n    if (typeof params == 'undefined')\r\n      throw new Error('Named query contains placeholders, but parameters object is undefined');\r\n\r\n    const tokens = tree[1];\r\n    for (let i=0; i < tokens.length; ++i) {\r\n      arr.push(params[tokens[i]]);\r\n    }\r\n    return [tree[0], arr];\r\n  }\r\n\r\n  function noTailingSemicolon(s) {\r\n    if (s.slice(-1) == ':') {\r\n      return s.slice(0, -1);\r\n    }\r\n    return s;\r\n  }\r\n\r\n  function join(tree) {\r\n    if (tree.length == 1) {\r\n      return tree;\r\n    }\r\n\r\n    let unnamed = noTailingSemicolon(tree[0][0]);\r\n    for (let i=1; i < tree[0].length; ++i) {\r\n      if (tree[0][i-1].slice(-1) == ':') {\r\n        unnamed += config.placeholder;\r\n      }\r\n      unnamed += config.placeholder;\r\n      unnamed += noTailingSemicolon(tree[0][i]);\r\n    }\r\n\r\n    const last = tree[0][tree[0].length -1];\r\n    if (tree[0].length == tree[1].length) {\r\n      if (last.slice(-1) == ':') {\r\n        unnamed += config.placeholder;\r\n      }\r\n      unnamed += config.placeholder;\r\n    }\r\n    return [unnamed, tree[1]];\r\n  }\r\n\r\n  function compile(query, paramsObj) {\r\n    let tree;\r\n    if (cache && (tree = cache.get(query))) {\r\n      return toArrayParams(tree, paramsObj)\r\n    }\r\n    tree = join(parse(query));\r\n    if(cache) {\r\n      cache.set(query, tree);\r\n    }\r\n    return toArrayParams(tree, paramsObj);\r\n  }\r\n\r\n  compile.parse = parse;\r\n  return compile;\r\n}\r\n\r\n// named :one :two to postgres-style numbered $1 $2 $3\r\nfunction toNumbered(q, params) {\r\n  const tree = parse(q);\r\n  const paramsArr = [];\r\n  if (tree.length == 1) {\r\n    return [tree[0], paramsArr];\r\n  }\r\n\r\n  const pIndexes = {};\r\n  let pLastIndex = 0;\r\n  let qs = '';\r\n  let varIndex;\r\n  const varNames = [];\r\n  for (let i=0; i < tree[0].length; ++i) {\r\n    varIndex = pIndexes[tree[1][i]];\r\n    if (!varIndex) {\r\n      varIndex = ++pLastIndex;\r\n      pIndexes[tree[1][i]] = varIndex;\r\n    }\r\n    if (tree[1][i]) {\r\n      varNames[varIndex - 1] = tree[1][i];\r\n      qs += tree[0][i] + '$' + varIndex;\r\n    } else {\r\n      qs += tree[0][i];\r\n    }\r\n  }\r\n  return [qs, varNames.map(n => params[n])];\r\n}\r\n\r\nmodule.exports = createCompiler;\r\nmodule.exports.toNumbered = toNumbered;\r\n", "'use strict';\n\nconst Net = require('net');\nconst Tls = require('tls');\nconst Timers = require('timers');\nconst EventEmitter = require('events').EventEmitter;\nconst Readable = require('stream').Readable;\nconst Queue = require('denque');\nconst SqlString = require('sqlstring');\nconst LRU = require('lru-cache');\n\nconst PacketParser = require('./packet_parser.js');\nconst Packets = require('./packets/index.js');\nconst Commands = require('./commands/index.js');\nconst ConnectionConfig = require('./connection_config.js');\nconst CharsetToEncoding = require('./constants/charset_encodings.js');\n\nlet _connectionId = 0;\n\nlet convertNamedPlaceholders = null;\n\nclass Connection extends EventEmitter {\n  constructor(opts) {\n    super();\n    this.config = opts.config;\n    // TODO: fill defaults\n    // if no params, connect to /var/lib/mysql/mysql.sock ( /tmp/mysql.sock on OSX )\n    // if host is given, connect to host:3306\n    // TODO: use `/usr/local/mysql/bin/mysql_config --socket` output? as default socketPath\n    // if there is no host/port and no socketPath parameters?\n    if (!opts.config.stream) {\n      if (opts.config.socketPath) {\n        this.stream = Net.connect(opts.config.socketPath);\n      } else {\n        this.stream = Net.connect(\n          opts.config.port,\n          opts.config.host\n        );\n\n        // Enable keep-alive on the socket.  It's disabled by default, but the\n        // user can enable it and supply an initial delay.\n        this.stream.setKeepAlive(true, this.config.keepAliveInitialDelay);\n      }\n      // if stream is a function, treat it as \"stream agent / factory\"\n    } else if (typeof opts.config.stream === 'function')  {\n      this.stream = opts.config.stream(opts);\n    } else {\n      this.stream = opts.config.stream;\n    }\n\n    this._internalId = _connectionId++;\n    this._commands = new Queue();\n    this._command = null;\n    this._paused = false;\n    this._paused_packets = new Queue();\n    this._statements = new LRU({\n      max: this.config.maxPreparedStatements,\n      dispose: function(key, statement) {\n        statement.close();\n      }\n    });\n    this.serverCapabilityFlags = 0;\n    this.authorized = false;\n    this.sequenceId = 0;\n    this.compressedSequenceId = 0;\n    this.threadId = null;\n    this._handshakePacket = null;\n    this._fatalError = null;\n    this._protocolError = null;\n    this._outOfOrderPackets = [];\n    this.clientEncoding = CharsetToEncoding[this.config.charsetNumber];\n    this.stream.on('error', this._handleNetworkError.bind(this));\n    // see https://gist.github.com/khoomeister/4985691#use-that-instead-of-bind\n    this.packetParser = new PacketParser(p => {\n      this.handlePacket(p);\n    });\n    this.stream.on('data', data => {\n      if (this.connectTimeout) {\n        Timers.clearTimeout(this.connectTimeout);\n        this.connectTimeout = null;\n      }\n      this.packetParser.execute(data);\n    });\n    this.stream.on('close', () => {\n      // we need to set this flag everywhere where we want connection to close\n      if (this._closing) {\n        return;\n      }\n      if (!this._protocolError) {\n        // no particular error message before disconnect\n        this._protocolError = new Error(\n          'Connection lost: The server closed the connection.'\n        );\n        this._protocolError.fatal = true;\n        this._protocolError.code = 'PROTOCOL_CONNECTION_LOST';\n      }\n      this._notifyError(this._protocolError);\n    });\n    let handshakeCommand;\n    if (!this.config.isServer) {\n      handshakeCommand = new Commands.ClientHandshake(this.config.clientFlags);\n      handshakeCommand.on('end', () => {\n        // this happens when handshake finishes early and first packet is error\n        // and not server hello ( for example, 'Too many connactions' error)\n        if (!handshakeCommand.handshake) {\n          return;\n        }\n        this._handshakePacket = handshakeCommand.handshake;\n        this.threadId = handshakeCommand.handshake.connectionId;\n        this.emit('connect', handshakeCommand.handshake);\n      });\n      handshakeCommand.on('error', err => {\n        this._closing = true;\n        this._notifyError(err);\n      });\n      this.addCommand(handshakeCommand);\n    }\n    // in case there was no initiall handshake but we need to read sting, assume it utf-8\n    // most common example: \"Too many connections\" error ( packet is sent immediately on connection attempt, we don't know server encoding yet)\n    // will be overwrittedn with actial encoding value as soon as server handshake packet is received\n    this.serverEncoding = 'utf8';\n    if (this.config.connectTimeout) {\n      const timeoutHandler = this._handleTimeoutError.bind(this);\n      this.connectTimeout = Timers.setTimeout(\n        timeoutHandler,\n        this.config.connectTimeout\n      );\n    }\n  }\n\n  promise(promiseImpl) {\n    const PromiseConnection = require('../promise').PromiseConnection;\n    return new PromiseConnection(this, promiseImpl);\n  }\n\n  _addCommandClosedState(cmd) {\n    const err = new Error(\n      \"Can't add new command when connection is in closed state\"\n    );\n    err.fatal = true;\n    if (cmd.onResult) {\n      cmd.onResult(err);\n    } else {\n      this.emit('error', err);\n    }\n  }\n\n  _handleFatalError(err) {\n    err.fatal = true;\n    // stop receiving packets\n    this.stream.removeAllListeners('data');\n    this.addCommand = this._addCommandClosedState;\n    this.write = () => {\n      this.emit('error', new Error(\"Can't write in closed state\"));\n    };\n    this._notifyError(err);\n    this._fatalError = err;\n  }\n\n  _handleNetworkError(err) {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    // Do not throw an error when a connection ends with a RST,ACK packet\n    if (err.errno === 'ECONNRESET' && this._closing) {\n      return;\n    }\n    this._handleFatalError(err);\n  }\n\n  _handleTimeoutError() {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    this.stream.destroy && this.stream.destroy();\n    const err = new Error('connect ETIMEDOUT');\n    err.errorno = 'ETIMEDOUT';\n    err.code = 'ETIMEDOUT';\n    err.syscall = 'connect';\n    this._handleNetworkError(err);\n  }\n\n  // notify all commands in the queue and bubble error as connection \"error\"\n  // called on stream error or unexpected termination\n  _notifyError(err) {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }    \n    // prevent from emitting 'PROTOCOL_CONNECTION_LOST' after EPIPE or ECONNRESET\n    if (this._fatalError) {\n      return;\n    }\n    let command;\n    // if there is no active command, notify connection\n    // if there are commands and all of them have callbacks, pass error via callback\n    let bubbleErrorToConnection = !this._command;\n    if (this._command && this._command.onResult) {\n      this._command.onResult(err);\n      this._command = null;\n      // connection handshake is special because we allow it to be implicit\n      // if error happened during handshake, but there are others commands in queue\n      // then bubble error to other commands and not to connection\n    } else if (\n      !(\n        this._command &&\n        this._command.constructor === Commands.ClientHandshake &&\n        this._commands.length > 0\n      )\n    ) {\n      bubbleErrorToConnection = true;\n    }\n    while ((command = this._commands.shift())) {\n      if (command.onResult) {\n        command.onResult(err);\n      } else {\n        bubbleErrorToConnection = true;\n      }\n    }\n    // notify connection if some comands in the queue did not have callbacks\n    // or if this is pool connection ( so it can be removed from pool )\n    if (bubbleErrorToConnection || this._pool) {\n      this.emit('error', err);\n    }\n  }\n\n  write(buffer) {\n    const result = this.stream.write(buffer, err => {\n      if (err) {\n        this._handleNetworkError(err);\n      }\n    });\n\n    if (!result) {\n      this.stream.emit('pause');\n    }\n  }\n\n  // http://dev.mysql.com/doc/internals/en/sequence-id.html\n  //\n  // The sequence-id is incremented with each packet and may wrap around.\n  // It starts at 0 and is reset to 0 when a new command\n  // begins in the Command Phase.\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n  _resetSequenceId() {\n    this.sequenceId = 0;\n    this.compressedSequenceId = 0;\n  }\n\n  _bumpCompressedSequenceId(numPackets) {\n    this.compressedSequenceId += numPackets;\n    this.compressedSequenceId %= 256;\n  }\n\n  _bumpSequenceId(numPackets) {\n    this.sequenceId += numPackets;\n    this.sequenceId %= 256;\n  }\n\n  writePacket(packet) {\n    const MAX_PACKET_LENGTH = 16777215;\n    const length = packet.length();\n    let chunk, offset, header;\n    if (length < MAX_PACKET_LENGTH) {\n      packet.writeHeader(this.sequenceId);\n      if (this.config.debug) {\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\n        );\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${packet.buffer.toString('hex')}`\n        );\n      }\n      this._bumpSequenceId(1);\n      this.write(packet.buffer);\n    } else {\n      if (this.config.debug) {\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== Writing large packet, raw content not written:`\n        );\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\n        );\n      }\n      for (offset = 4; offset < 4 + length; offset += MAX_PACKET_LENGTH) {\n        chunk = packet.buffer.slice(offset, offset + MAX_PACKET_LENGTH);\n        if (chunk.length === MAX_PACKET_LENGTH) {\n          header = Buffer.from([0xff, 0xff, 0xff, this.sequenceId]);\n        } else {\n          header = Buffer.from([\n            chunk.length & 0xff,\n            (chunk.length >> 8) & 0xff,\n            (chunk.length >> 16) & 0xff,\n            this.sequenceId\n          ]);\n        }\n        this._bumpSequenceId(1);\n        this.write(header);\n        this.write(chunk);\n      }\n    }\n  }\n\n  // 0.11+ environment\n  startTLS(onSecure) {\n    if (this.config.debug) {\n      // eslint-disable-next-line no-console\n      console.log('Upgrading connection to TLS');\n    }\n    const secureContext = Tls.createSecureContext({\n      ca: this.config.ssl.ca,\n      cert: this.config.ssl.cert,\n      ciphers: this.config.ssl.ciphers,\n      key: this.config.ssl.key,\n      passphrase: this.config.ssl.passphrase,\n      minVersion: this.config.ssl.minVersion\n    });\n    const rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    let secureEstablished = false;\n    const secureSocket = new Tls.TLSSocket(this.stream, {\n      rejectUnauthorized: rejectUnauthorized,\n      requestCert: true,\n      secureContext: secureContext,\n      isServer: false\n    });\n    // error handler for secure socket\n    secureSocket.on('_tlsError', err => {\n      if (secureEstablished) {\n        this._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    });\n    secureSocket.on('secure', () => {\n      secureEstablished = true;\n      onSecure(rejectUnauthorized ? secureSocket.ssl.verifyError() : null);\n    });\n    secureSocket.on('data', data => {\n      this.packetParser.execute(data);\n    });\n    this.write = buffer => {\n      secureSocket.write(buffer);\n    };\n    // start TLS communications\n    secureSocket._start();\n  }\n\n  pipe() {\n    if (this.stream instanceof Net.Stream) {\n      this.stream.ondata = (data, start, end) => {\n        this.packetParser.execute(data, start, end);\n      };\n    } else {\n      this.stream.on('data', data => {\n        this.packetParser.execute(\n          data.parent,\n          data.offset,\n          data.offset + data.length\n        );\n      });\n    }\n  }\n\n  protocolError(message, code) {\n    const err = new Error(message);\n    err.fatal = true;\n    err.code = code || 'PROTOCOL_ERROR';\n    this.emit('error', err);\n  }\n\n  handlePacket(packet) {\n    if (this._paused) {\n      this._paused_packets.push(packet);\n      return;\n    }\n    if (packet) {\n      if (this.sequenceId !== packet.sequenceId) {\n        const err = new Error(\n          `Warning: got packets out of order. Expected ${this.sequenceId} but received ${packet.sequenceId}`\n        );\n        err.expected = this.sequenceId;\n        err.received = packet.sequenceId;\n        this.emit('warn', err); // REVIEW\n        // eslint-disable-next-line no-console\n        console.error(err.message);\n      }\n      this._bumpSequenceId(packet.numPackets);\n    }\n    if (this.config.debug) {\n      if (packet) {\n        // eslint-disable-next-line no-console\n        console.log(\n          ` raw: ${packet.buffer\n            .slice(packet.offset, packet.offset + packet.length())\n            .toString('hex')}`\n        );\n        // eslint-disable-next-line no-console\n        console.trace();\n        const commandName = this._command\n          ? this._command._commandName\n          : '(no command)';\n        const stateName = this._command\n          ? this._command.stateName()\n          : '(no command)';\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} ==> ${commandName}#${stateName}(${[packet.sequenceId, packet.type(), packet.length()].join(',')})`\n        );\n      }\n    }\n    if (!this._command) {\n      this.protocolError(\n        'Unexpected packet while no commands in the queue',\n        'PROTOCOL_UNEXPECTED_PACKET'\n      );\n      this.close();\n      return;\n    }\n    const done = this._command.execute(packet, this);\n    if (done) {\n      this._command = this._commands.shift();\n      if (this._command) {\n        this.sequenceId = 0;\n        this.compressedSequenceId = 0;\n        this.handlePacket();\n      }\n    }\n  }\n\n  addCommand(cmd) {\n    // this.compressedSequenceId = 0;\n    // this.sequenceId = 0;\n    if (this.config.debug) {\n      const commandName = cmd.constructor.name;\n      // eslint-disable-next-line no-console\n      console.log(`Add command: ${commandName}`);\n      cmd._commandName = commandName;\n    }\n    if (!this._command) {\n      this._command = cmd;\n      this.handlePacket();\n    } else {\n      this._commands.push(cmd);\n    }\n    return cmd;\n  }\n\n  format(sql, values) {\n    if (typeof this.config.queryFormat === 'function') {\n      return this.config.queryFormat.call(\n        this,\n        sql,\n        values,\n        this.config.timezone\n      );\n    }\n    const opts = {\n      sql: sql,\n      values: values\n    };\n    this._resolveNamedPlaceholders(opts);\n    return SqlString.format(\n      opts.sql,\n      opts.values,\n      this.config.stringifyObjects,\n      this.config.timezone\n    );\n  }\n\n  escape(value) {\n    return SqlString.escape(value, false, this.config.timezone);\n  }\n\n  escapeId(value) {\n    return SqlString.escapeId(value, false);\n  }\n\n  raw(sql) {\n    return SqlString.raw(sql);\n  }\n\n  _resolveNamedPlaceholders(options) {\n    let unnamed;\n    if (this.config.namedPlaceholders || options.namedPlaceholders) {\n      if (convertNamedPlaceholders === null) {\n        convertNamedPlaceholders = require('named-placeholders')();\n      }\n      unnamed = convertNamedPlaceholders(options.sql, options.values);\n      options.sql = unnamed[0];\n      options.values = unnamed[1];\n    }\n  }\n\n  query(sql, values, cb) {\n    let cmdQuery;\n    if (sql.constructor === Commands.Query) {\n      cmdQuery = sql;\n    } else {\n      cmdQuery = Connection.createQuery(sql, values, cb, this.config);\n    }\n    this._resolveNamedPlaceholders(cmdQuery);\n    const rawSql = this.format(cmdQuery.sql, cmdQuery.values !== undefined ? cmdQuery.values : []);\n    cmdQuery.sql = rawSql;\n    return this.addCommand(cmdQuery);\n  }\n\n  pause() {\n    this._paused = true;\n    this.stream.pause();\n  }\n\n  resume() {\n    let packet;\n    this._paused = false;\n    while ((packet = this._paused_packets.shift())) {\n      this.handlePacket(packet);\n      // don't resume if packet hander paused connection\n      if (this._paused) {\n        return;\n      }\n    }\n    this.stream.resume();\n  }\n\n  // TODO: named placeholders support\n  prepare(options, cb) {\n    if (typeof options === 'string') {\n      options = { sql: options };\n    }\n    return this.addCommand(new Commands.Prepare(options, cb));\n  }\n\n  unprepare(sql) {\n    let options = {};\n    if (typeof sql === 'object') {\n      options = sql;\n    } else {\n      options.sql = sql;\n    }\n    const key = Connection.statementKey(options);\n    const stmt = this._statements.get(key);\n    if (stmt) {\n      this._statements.del(key);\n      stmt.close();\n    }\n    return stmt;\n  }\n\n  execute(sql, values, cb) {\n    let options = {};\n    if (typeof sql === 'object') {\n      // execute(options, cb)\n      options = sql;\n      if (typeof values === 'function') {\n        cb = values;\n      } else {\n        options.values = options.values || values;\n      }\n    } else if (typeof values === 'function') {\n      // execute(sql, cb)\n      cb = values;\n      options.sql = sql;\n      options.values = undefined;\n    } else {\n      // execute(sql, values, cb)\n      options.sql = sql;\n      options.values = values;\n    }\n    this._resolveNamedPlaceholders(options);\n    // check for values containing undefined\n    if (options.values) {\n      //If namedPlaceholder is not enabled and object is passed as bind parameters\n      if (!Array.isArray(options.values)) {\n        throw new TypeError(\n          'Bind parameters must be array if namedPlaceholders parameter is not enabled'\n        );\n      }\n      options.values.forEach(val => {\n        //If namedPlaceholder is not enabled and object is passed as bind parameters\n        if (!Array.isArray(options.values)) {\n          throw new TypeError(\n            'Bind parameters must be array if namedPlaceholders parameter is not enabled'\n          );\n        }\n        if (val === undefined) {\n          throw new TypeError(\n            'Bind parameters must not contain undefined. To pass SQL NULL specify JS null'\n          );\n        }\n        if (typeof val === 'function') {\n          throw new TypeError(\n            'Bind parameters must not contain function(s). To pass the body of a function as a string call .toString() first'\n          );\n        }\n      });\n    }\n    const executeCommand = new Commands.Execute(options, cb);\n    const prepareCommand = new Commands.Prepare(options, (err, stmt) => {\n      if (err) {\n        // skip execute command if prepare failed, we have main\n        // combined callback here\n        executeCommand.start = function() {\n          return null;\n        };\n        if (cb) {\n          cb(err);\n        } else {\n          executeCommand.emit('error', err);\n        }\n        executeCommand.emit('end');\n        return;\n      }\n      executeCommand.statement = stmt;\n    });\n    this.addCommand(prepareCommand);\n    this.addCommand(executeCommand);\n    return executeCommand;\n  }\n\n  changeUser(options, callback) {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    const charsetNumber = options.charset\n      ? ConnectionConfig.getCharsetNumber(options.charset)\n      : this.config.charsetNumber;\n    return this.addCommand(\n      new Commands.ChangeUser(\n        {\n          user: options.user || this.config.user,\n          password: options.password || this.config.password,\n          passwordSha1: options.passwordSha1 || this.config.passwordSha1,\n          database: options.database || this.config.database,\n          timeout: options.timeout,\n          charsetNumber: charsetNumber,\n          currentConfig: this.config\n        },\n        err => {\n          if (err) {\n            err.fatal = true;\n          }\n          if (callback) {\n            callback(err);\n          }\n        }\n      )\n    );\n  }\n\n  // transaction helpers\n  beginTransaction(cb) {\n    return this.query('START TRANSACTION', cb);\n  }\n\n  commit(cb) {\n    return this.query('COMMIT', cb);\n  }\n\n  rollback(cb) {\n    return this.query('ROLLBACK', cb);\n  }\n\n  ping(cb) {\n    return this.addCommand(new Commands.Ping(cb));\n  }\n\n  _registerSlave(opts, cb) {\n    return this.addCommand(new Commands.RegisterSlave(opts, cb));\n  }\n\n  _binlogDump(opts, cb) {\n    return this.addCommand(new Commands.BinlogDump(opts, cb));\n  }\n\n  // currently just alias to close\n  destroy() {\n    this.close();\n  }\n\n  close() {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    this._closing = true;\n    this.stream.end();\n    this.addCommand = this._addCommandClosedState;\n  }\n\n  createBinlogStream(opts) {\n    // TODO: create proper stream class\n    // TODO: use through2\n    let test = 1;\n    const stream = new Readable({ objectMode: true });\n    stream._read = function() {\n      return {\n        data: test++\n      };\n    };\n    this._registerSlave(opts, () => {\n      const dumpCmd = this._binlogDump(opts);\n      dumpCmd.on('event', ev => {\n        stream.push(ev);\n      });\n      dumpCmd.on('eof', () => {\n        stream.push(null);\n        // if non-blocking, then close stream to prevent errors\n        if (opts.flags && opts.flags & 0x01) {\n          this.close();\n        }\n      });\n      // TODO: pipe errors as well\n    });\n    return stream;\n  }\n\n  connect(cb) {\n    if (!cb) {\n      return;\n    }\n    if (this._fatalError || this._protocolError) {\n      return cb(this._fatalError || this._protocolError);\n    }\n    if (this._handshakePacket) {\n      return cb(null, this);\n    }\n    let connectCalled = 0;\n    function callbackOnce(isErrorHandler) {\n      return function(param) {\n        if (!connectCalled) {\n          if (isErrorHandler) {\n            cb(param);\n          } else {\n            cb(null, param);\n          }\n        }\n        connectCalled = 1;\n      };\n    }\n    this.once('error', callbackOnce(true));\n    this.once('connect', callbackOnce(false));\n  }\n\n  // ===================================\n  // outgoing server connection methods\n  // ===================================\n  writeColumns(columns) {\n    this.writePacket(Packets.ResultSetHeader.toPacket(columns.length));\n    columns.forEach(column => {\n      this.writePacket(\n        Packets.ColumnDefinition.toPacket(column, this.serverConfig.encoding)\n      );\n    });\n    this.writeEof();\n  }\n\n  // row is array of columns, not hash\n  writeTextRow(column) {\n    this.writePacket(\n      Packets.TextRow.toPacket(column, this.serverConfig.encoding)\n    );\n  }\n\n  writeTextResult(rows, columns) {\n    this.writeColumns(columns);\n    rows.forEach(row => {\n      const arrayRow = new Array(columns.length);\n      columns.forEach(column => {\n        arrayRow.push(row[column.name]);\n      });\n      this.writeTextRow(arrayRow);\n    });\n    this.writeEof();\n  }\n\n  writeEof(warnings, statusFlags) {\n    this.writePacket(Packets.EOF.toPacket(warnings, statusFlags));\n  }\n\n  writeOk(args) {\n    if (!args) {\n      args = { affectedRows: 0 };\n    }\n    this.writePacket(Packets.OK.toPacket(args, this.serverConfig.encoding));\n  }\n\n  writeError(args) {\n    // if we want to send error before initial hello was sent, use default encoding\n    const encoding = this.serverConfig ? this.serverConfig.encoding : 'cesu8';\n    this.writePacket(Packets.Error.toPacket(args, encoding));\n  }\n\n  serverHandshake(args) {\n    this.serverConfig = args;\n    this.serverConfig.encoding =\n      CharsetToEncoding[this.serverConfig.characterSet];\n    return this.addCommand(new Commands.ServerHandshake(args));\n  }\n\n  // ===============================================================\n  end(callback) {\n    if (this.config.isServer) {\n      this._closing = true;\n      const quitCmd = new EventEmitter();\n      setImmediate(() => {\n        this.stream.end();\n        quitCmd.emit('end');\n      });\n      return quitCmd;\n    }\n    // trigger error if more commands enqueued after end command\n    const quitCmd = this.addCommand(new Commands.Quit(callback));\n    this.addCommand = this._addCommandClosedState;\n    return quitCmd;\n  }\n\n  static createQuery(sql, values, cb, config) {\n    let options = {\n      rowsAsArray: config.rowsAsArray\n    };\n    if (typeof sql === 'object') {\n      // query(options, cb)\n      options = sql;\n      if (typeof values === 'function') {\n        cb = values;\n      } else if (values !== undefined) {\n        options.values = values;\n      }\n    } else if (typeof values === 'function') {\n      // query(sql, cb)\n      cb = values;\n      options.sql = sql;\n      options.values = undefined;\n    } else {\n      // query(sql, values, cb)\n      options.sql = sql;\n      options.values = values;\n    }\n    return new Commands.Query(options, cb);\n  }\n\n  static statementKey(options) {\n    return (\n      `${typeof options.nestTables}/${options.nestTables}/${options.rowsAsArray}${options.sql}`\n    );\n  }\n}\n\nif (Tls.TLSSocket) {\n  // not supported\n} else {\n  Connection.prototype.startTLS = function _startTLS(onSecure) {\n    if (this.config.debug) {\n      // eslint-disable-next-line no-console\n      console.log('Upgrading connection to TLS');\n    }\n    const crypto = require('crypto');\n    const config = this.config;\n    const stream = this.stream;\n    const rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    const credentials = crypto.createCredentials({\n      key: config.ssl.key,\n      cert: config.ssl.cert,\n      passphrase: config.ssl.passphrase,\n      ca: config.ssl.ca,\n      ciphers: config.ssl.ciphers\n    });\n    const securePair = Tls.createSecurePair(\n      credentials,\n      false,\n      true,\n      rejectUnauthorized\n    );\n\n    if (stream.ondata) {\n      stream.ondata = null;\n    }\n    stream.removeAllListeners('data');\n    stream.pipe(securePair.encrypted);\n    securePair.encrypted.pipe(stream);\n    securePair.cleartext.on('data', data => {\n      this.packetParser.execute(data);\n    });\n    this.write = function(buffer) {\n      securePair.cleartext.write(buffer);\n    };\n    securePair.on('secure', () => {\n      onSecure(rejectUnauthorized ? securePair.ssl.verifyError() : null);\n    });\n  };\n}\n\nmodule.exports = Connection;\n", "'use strict';\n\nconst Connection = require('../index.js').Connection;\n\nclass PoolConnection extends Connection {\n  constructor(pool, options) {\n    super(options);\n    this._pool = pool;\n    // When a fatal error occurs the connection's protocol ends, which will cause\n    // the connection to end as well, thus we only need to watch for the end event\n    // and we will be notified of disconnects.\n    // REVIEW: Moved to `once`\n    this.once('end', () => {\n      this._removeFromPool();\n    });\n    this.once('error', () => {\n      this._removeFromPool();\n    });\n  }\n\n  release() {\n    if (!this._pool || this._pool._closed) {\n      return;\n    }\n    this._pool.releaseConnection(this);\n  }\n\n  promise(promiseImpl) {\n    const PromisePoolConnection = require('../promise').PromisePoolConnection;\n    return new PromisePoolConnection(this, promiseImpl);\n  }\n\n  end() {\n    const err = new Error(\n      'Calling conn.end() to release a pooled connection is ' +\n        'deprecated. In next version calling conn.end() will be ' +\n        'restored to default conn.end() behavior. Use ' +\n        'conn.release() instead.'\n    );\n    this.emit('warn', err);\n    // eslint-disable-next-line no-console\n    console.warn(err.message);\n    this.release();\n  }\n\n  destroy() {\n    this._removeFromPool();\n    super.destroy();\n  }\n\n  _removeFromPool() {\n    if (!this._pool || this._pool._closed) {\n      return;\n    }\n    const pool = this._pool;\n    this._pool = null;\n    pool._removeConnection(this);\n  }\n}\n\nPoolConnection.statementKey = Connection.statementKey;\nmodule.exports = PoolConnection;\n\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\n", "'use strict';\n\nconst process = require('process');\nconst mysql = require('../index.js');\n\nconst EventEmitter = require('events').EventEmitter;\nconst PoolConnection = require('./pool_connection.js');\nconst Queue = require('denque');\nconst Connection = require('./connection.js');\n\nfunction spliceConnection(queue, connection) {\n  const len = queue.length;\n  for (let i = 0; i < len; i++) {\n    if (queue.get(i) === connection) {\n      queue.removeOne(i);\n      break;\n    }\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options) {\n    super();\n    this.config = options.config;\n    this.config.connectionConfig.pool = this;\n    this._allConnections = new Queue();\n    this._freeConnections = new Queue();\n    this._connectionQueue = new Queue();\n    this._closed = false;\n  }\n\n  promise(promiseImpl) {\n    const PromisePool = require('../promise').PromisePool;\n    return new PromisePool(this, promiseImpl);\n  }\n\n  getConnection(cb) {\n    if (this._closed) {\n      return process.nextTick(() => cb(new Error('Pool is closed.')));\n    }\n    let connection;\n    if (this._freeConnections.length > 0) {\n      connection = this._freeConnections.shift();\n      this.emit('acquire', connection);\n      return process.nextTick(() => cb(null, connection));\n    }\n    if (\n      this.config.connectionLimit === 0 ||\n      this._allConnections.length < this.config.connectionLimit\n    ) {\n      connection = new PoolConnection(this, {\n        config: this.config.connectionConfig\n      });\n      this._allConnections.push(connection);\n      return connection.connect(err => {\n        if (this._closed) {\n          return cb(new Error('Pool is closed.'));\n        }\n        if (err) {\n          return cb(err);\n        }\n        this.emit('connection', connection);\n        this.emit('acquire', connection);\n        return cb(null, connection);\n      });\n    }\n    if (!this.config.waitForConnections) {\n      return process.nextTick(() => cb(new Error('No connections available.')));\n    }\n    if (\n      this.config.queueLimit &&\n      this._connectionQueue.length >= this.config.queueLimit\n    ) {\n      return cb(new Error('Queue limit reached.'));\n    }\n    this.emit('enqueue');\n    return this._connectionQueue.push(cb);\n  }\n\n  releaseConnection(connection) {\n    let cb;\n    if (!connection._pool) {\n      // The connection has been removed from the pool and is no longer good.\n      if (this._connectionQueue.length) {\n        cb = this._connectionQueue.shift();\n        process.nextTick(this.getConnection.bind(this, cb));\n      }\n    } else if (this._connectionQueue.length) {\n      cb = this._connectionQueue.shift();\n      process.nextTick(cb.bind(null, null, connection));\n    } else {\n      this._freeConnections.push(connection);\n      this.emit('release', connection);\n    }\n  }\n\n  end(cb) {\n    this._closed = true;\n    if (typeof cb !== 'function') {\n      cb = function(err) {\n        if (err) {\n          throw err;\n        }\n      };\n    }\n    let calledBack = false;\n    let closedConnections = 0;\n    let connection;\n    const endCB = function(err) {\n      if (calledBack) {\n        return;\n      }\n      if (err || ++closedConnections >= this._allConnections.length) {\n        calledBack = true;\n        cb(err);\n        return;\n      }\n    }.bind(this);\n    if (this._allConnections.length === 0) {\n      endCB();\n      return;\n    }\n    for (let i = 0; i < this._allConnections.length; i++) {\n      connection = this._allConnections.get(i);\n      connection._realEnd(endCB);\n    }\n  }\n\n  query(sql, values, cb) {\n    const cmdQuery = Connection.createQuery(\n      sql,\n      values,\n      cb,\n      this.config.connectionConfig\n    );\n    if (typeof cmdQuery.namedPlaceholders === 'undefined') {\n      cmdQuery.namedPlaceholders = this.config.connectionConfig.namedPlaceholders;\n    }\n    this.getConnection((err, conn) => {\n      if (err) {\n        if (typeof cmdQuery.onResult === 'function') {\n          cmdQuery.onResult(err);\n        } else {\n          cmdQuery.emit('error', err);\n        }\n        return;\n      }\n      try {\n        conn.query(cmdQuery).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        throw e;\n      }\n    });\n    return cmdQuery;\n  }\n\n  execute(sql, values, cb) {\n    // TODO construct execute command first here and pass it to connection.execute\n    // so that polymorphic arguments logic is there in one place\n    if (typeof values === 'function') {\n      cb = values;\n      values = [];\n    }\n    this.getConnection((err, conn) => {\n      if (err) {\n        return cb(err);\n      }\n      try {\n        conn.execute(sql, values, cb).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        throw e;\n      }\n    });\n  }\n\n  _removeConnection(connection) {\n    // Remove connection from all connections\n    spliceConnection(this._allConnections, connection);\n    // Remove connection from free connections\n    spliceConnection(this._freeConnections, connection);\n    this.releaseConnection(connection);\n  }\n\n  format(sql, values) {\n    return mysql.format(\n      sql,\n      values,\n      this.config.connectionConfig.stringifyObjects,\n      this.config.connectionConfig.timezone\n    );\n  }\n\n  escape(value) {\n    return mysql.escape(\n      value,\n      this.config.connectionConfig.stringifyObjects,\n      this.config.connectionConfig.timezone\n    );\n  }\n\n  escapeId(value) {\n    return mysql.escapeId(value, false);\n  }\n}\n\nmodule.exports = Pool;\n", "'use strict';\n\nconst ConnectionConfig = require('./connection_config.js');\n\nclass PoolConfig {\n  constructor(options) {\n    if (typeof options === 'string') {\n      options = ConnectionConfig.parseUrl(options);\n    }\n    this.connectionConfig = new ConnectionConfig(options);\n    this.waitForConnections =\n      options.waitForConnections === undefined\n        ? true\n        : Boolean(options.waitForConnections);\n    this.connectionLimit = isNaN(options.connectionLimit)\n      ? 10\n      : Number(options.connectionLimit);\n    this.queueLimit = isNaN(options.queueLimit)\n      ? 0\n      : Number(options.queueLimit);\n  }\n}\n\nmodule.exports = PoolConfig;\n", "'use strict';\n\nconst process = require('process');\n\nconst Pool = require('./pool.js');\nconst PoolConfig = require('./pool_config.js');\nconst EventEmitter = require('events').EventEmitter;\n\n/**\n * Selector\n */\nconst makeSelector = {\n  RR() {\n    let index = 0;\n    return clusterIds => clusterIds[index++ % clusterIds.length];\n  },\n  RANDOM() {\n    return clusterIds =>\n      clusterIds[Math.floor(Math.random() * clusterIds.length)];\n  },\n  ORDER() {\n    return clusterIds => clusterIds[0];\n  }\n};\n\nclass PoolNamespace {\n  constructor(cluster, pattern, selector) {\n    this._cluster = cluster;\n    this._pattern = pattern;\n    this._selector = makeSelector[selector]();\n  }\n\n  getConnection(cb) {\n    const clusterNode = this._getClusterNode();\n    if (clusterNode === null) {\n      return cb(new Error('Pool does Not exists.'));\n    }\n    return this._cluster._getConnection(clusterNode, (err, connection) => {\n      if (err) {\n        return cb(err);\n      }\n      if (connection === 'retry') {\n        return this.getConnection(cb);\n      }\n      return cb(null, connection);\n    });\n  }\n\n  _getClusterNode() {\n    const foundNodeIds = this._cluster._findNodeIds(this._pattern);\n    if (foundNodeIds.length === 0) {\n      return null;\n    }\n    const nodeId =\n      foundNodeIds.length === 1\n        ? foundNodeIds[0]\n        : this._selector(foundNodeIds);\n    return this._cluster._getNode(nodeId);\n  }\n}\n\nclass PoolCluster extends EventEmitter {\n  constructor(config) {\n    super();\n    config = config || {};\n    this._canRetry =\n      typeof config.canRetry === 'undefined' ? true : config.canRetry;\n    this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n    this._defaultSelector = config.defaultSelector || 'RR';\n    this._closed = false;\n    this._lastId = 0;\n    this._nodes = {};\n    this._serviceableNodeIds = [];\n    this._namespaces = {};\n    this._findCaches = {};\n  }\n\n  of(pattern, selector) {\n    pattern = pattern || '*';\n    selector = selector || this._defaultSelector;\n    selector = selector.toUpperCase();\n    if (!makeSelector[selector] === 'undefined') {\n      selector = this._defaultSelector;\n    }\n    const key = pattern + selector;\n    if (typeof this._namespaces[key] === 'undefined') {\n      this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n    }\n    return this._namespaces[key];\n  }\n\n  add(id, config) {\n    if (typeof id === 'object') {\n      config = id;\n      id = `CLUSTER::${++this._lastId}`;\n    }\n    if (typeof this._nodes[id] === 'undefined') {\n      this._nodes[id] = {\n        id: id,\n        errorCount: 0,\n        pool: new Pool({ config: new PoolConfig(config) })\n      };\n      this._serviceableNodeIds.push(id);\n      this._clearFindCaches();\n    }\n  }\n\n  getConnection(pattern, selector, cb) {\n    let namespace;\n    if (typeof pattern === 'function') {\n      cb = pattern;\n      namespace = this.of();\n    } else {\n      if (typeof selector === 'function') {\n        cb = selector;\n        selector = this._defaultSelector;\n      }\n      namespace = this.of(pattern, selector);\n    }\n    namespace.getConnection(cb);\n  }\n\n  end(callback) {\n    const cb =\n      callback !== undefined\n        ? callback\n        : err => {\n          if (err) {\n            throw err;\n          }\n        };\n    if (this._closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this._closed = true;\n\n    let calledBack = false;\n    let waitingClose = 0;\n    const onEnd = err => {\n      if (!calledBack && (err || --waitingClose <= 0)) {\n        calledBack = true;\n        return cb(err);\n      }\n    };\n\n    for (const id in this._nodes) {\n      waitingClose++;\n      this._nodes[id].pool.end(onEnd);\n    }\n    if (waitingClose === 0) {\n      process.nextTick(onEnd);\n    }\n  }\n\n  _findNodeIds(pattern) {\n    if (typeof this._findCaches[pattern] !== 'undefined') {\n      return this._findCaches[pattern];\n    }\n    let foundNodeIds;\n    if (pattern === '*') {\n      // all\n      foundNodeIds = this._serviceableNodeIds;\n    } else if (this._serviceableNodeIds.indexOf(pattern) !== -1) {\n      // one\n      foundNodeIds = [pattern];\n    } else {\n      // wild matching\n      const keyword = pattern.substring(pattern.length - 1, 0);\n      foundNodeIds = this._serviceableNodeIds.filter(id =>\n        id.startsWith(keyword)\n      );\n    }\n    this._findCaches[pattern] = foundNodeIds;\n    return foundNodeIds;\n  }\n\n  _getNode(id) {\n    return this._nodes[id] || null;\n  }\n\n  _increaseErrorCount(node) {\n    if (++node.errorCount >= this._removeNodeErrorCount) {\n      const index = this._serviceableNodeIds.indexOf(node.id);\n      if (index !== -1) {\n        this._serviceableNodeIds.splice(index, 1);\n        delete this._nodes[node.id];\n        this._clearFindCaches();\n        node.pool.end();\n        this.emit('remove', node.id);\n      }\n    }\n  }\n\n  _decreaseErrorCount(node) {\n    if (node.errorCount > 0) {\n      --node.errorCount;\n    }\n  }\n\n  _getConnection(node, cb) {\n    node.pool.getConnection((err, connection) => {\n      if (err) {\n        this._increaseErrorCount(node);\n        if (this._canRetry) {\n          // REVIEW: this seems wrong?\n          this.emit('warn', err);\n          // eslint-disable-next-line no-console\n          console.warn(`[Error] PoolCluster : ${err}`);\n          return cb(null, 'retry');\n        }\n        return cb(err);\n      }\n      this._decreaseErrorCount(node);\n\n      connection._clusterId = node.id;\n      return cb(null, connection);\n    });\n  }\n\n  _clearFindCaches() {\n    this._findCaches = {};\n  }\n}\n\nmodule.exports = PoolCluster;\n", "'use strict';\n\nconst net = require('net');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Connection = require('./connection');\nconst ConnectionConfig = require('./connection_config');\n\n// TODO: inherit Server from net.Server\nclass Server extends EventEmitter {\n  constructor() {\n    super();\n    this.connections = [];\n    this._server = net.createServer(this._handleConnection.bind(this));\n  }\n\n  _handleConnection(socket) {\n    const connectionConfig = new ConnectionConfig({\n      stream: socket,\n      isServer: true\n    });\n    const connection = new Connection({ config: connectionConfig });\n    this.emit('connection', connection);\n  }\n\n  listen(port) {\n    this._port = port;\n    this._server.listen.apply(this._server, arguments);\n    return this;\n  }\n\n  close(cb) {\n    this._server.close(cb);\n  }\n}\n\nmodule.exports = Server;\n", "'use strict';\n\nconst SqlString = require('sqlstring');\n\nconst Connection = require('./lib/connection.js');\nconst ConnectionConfig = require('./lib/connection_config.js');\nconst parserCache = require('./lib/parsers/parser_cache');\n\nexports.createConnection = function(opts) {\n  return new Connection({ config: new ConnectionConfig(opts) });\n};\n\nexports.connect = exports.createConnection;\nexports.Connection = Connection;\n\nconst Pool = require('./lib/pool.js');\n\nexports.createPool = function(config) {\n  const PoolConfig = require('./lib/pool_config.js');\n  return new Pool({ config: new PoolConfig(config) });\n};\n\nexports.createPoolCluster = function(config) {\n  const PoolCluster = require('./lib/pool_cluster.js');\n  return new PoolCluster(config);\n};\n\nexports.createQuery = Connection.createQuery;\n\nexports.Pool = Pool;\n\nexports.createServer = function(handler) {\n  const Server = require('./lib/server.js');\n  const s = new Server();\n  if (handler) {\n    s.on('connection', handler);\n  }\n  return s;\n};\n\nexports.PoolConnection = require('./lib/pool_connection');\nexports.escape = SqlString.escape;\nexports.escapeId = SqlString.escapeId;\nexports.format = SqlString.format;\nexports.raw = SqlString.raw;\n\nexports.__defineGetter__(\n  'createConnectionPromise',\n  () => require('./promise.js').createConnection\n);\n\nexports.__defineGetter__(\n  'createPoolPromise',\n  () => require('./promise.js').createPool\n);\n\nexports.__defineGetter__(\n  'createPoolClusterPromise',\n  () => require('./promise.js').createPoolCluster\n);\n\nexports.__defineGetter__('Types', () => require('./lib/constants/types.js'));\n\nexports.__defineGetter__('Charsets', () =>\n  require('./lib/constants/charsets.js')\n);\n\nexports.__defineGetter__('CharsetToEncoding', () =>\n  require('./lib/constants/charset_encodings.js')\n);\n\nexports.setMaxParserCache = function(max) {\n  parserCache.setMaxCache(max);\n};\n\nexports.clearParserCache = function() {\n  parserCache.clearCache();\n};\n", "'use strict';\n\nconst core = require('./index.js');\nconst EventEmitter = require('events').EventEmitter;\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target\n    .on('newListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.on(\n          eventName,\n          (listeners[eventName] = function () {\n            const args = [].slice.call(arguments);\n            args.unshift(eventName);\n\n            target.emit.apply(target, args);\n          })\n        );\n      }\n    })\n    .on('removeListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.removeListener(eventName, listeners[eventName]);\n        delete listeners[eventName];\n      }\n    });\n}\n\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n}\n\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || Promise;\n    inheritEvents(connection, this, [\n      'error',\n      'drain',\n      'connect',\n      'end',\n      'enqueue'\n    ]);\n  }\n\n  release() {\n    this.connection.release();\n  }\n\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.ping(done);\n    });\n  }\n\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(\n            statement,\n            promiseImpl\n          );\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  get config() {\n    return this.connection.config;\n  }\n\n  get threadId() {\n    return this.connection.threadId;\n  }\n}\n\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new thePromise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, thePromise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n}\n\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n\n// proxy synchronous functions only\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Connection.prototype[func] === 'function' &&\n      PromiseConnection.prototype[func] === undefined\n    ) {\n      PromiseConnection.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(\n            this.connection,\n            arguments\n          );\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'close',\n  'createBinlogStream',\n  'destroy',\n  'escape',\n  'escapeId',\n  'format',\n  'pause',\n  'pipe',\n  'resume',\n  'unprepare'\n]);\n\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(\n      this.connection,\n      arguments\n    );\n  }\n}\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n\n  return new PromisePool(corePool, thePromise);\n}\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Pool.prototype[func] === 'function' &&\n      PromisePool.prototype[func] === undefined\n    ) {\n      PromisePool.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'escape',\n  'escapeId',\n  'format'\n]);\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\n", "/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n", "\n                    import {derver} from \"derver\";\n                    import path from \"path\";\n                    const DIR = path.join(__dirname,'static');\n                    export default function (options){\n                        return derver({\n                            dir: path.join(__dirname,'static'),\n                            ...options,\n                            remote: 'malina_fullstack_template'\n                        });\n                    }\n                ", "import boom from '@hapi/boom';\r\nimport mysql from '../config/database';\r\n\r\nconst blogsModel = {\r\n   newsList: async function ( params ) {\r\n      const connection = await mysql.db.getConnection();\r\n      var res = [ {} ];\r\n      try {\r\n         res = await connection.query( 'SELECT * FROM blogs LIMIT ?, ?', [ params.offset, params.limit ] );\r\n         connection.release();\r\n         return res.length > 0 ? res : null;\r\n      } catch ( err ) {\r\n         console.error( error )\r\n         connection.release();\r\n         return boom.boomify( error )\r\n      }\r\n   },\r\n\r\n   newsDetail: async function ( id ) {\r\n      const connection = await mysql.db.getConnection();\r\n      var res = [ {} ];\r\n      try {\r\n         res = await connection.execute( `SELECT * FROM blogs WHERE id = ?`, [ id ] );\r\n         connection.release();\r\n         return res.length > 0 ? res[ 0 ] : null;\r\n      } catch ( err ) {\r\n         console.error( error )\r\n         connection.release();\r\n         return boom.boomify( error )\r\n      }\r\n   },\r\n}\r\n\r\nexport default blogsModel", "import mysql from 'mysql2/promise';\r\nrequire( 'dotenv' ).config();\r\n\r\nconst db = mysql.createPool( {\r\n   \"host\": process.env.DB_HOST,\r\n   \"user\": process.env.DB_USER,\r\n   \"password\": process.env.DB_PASSWORD,\r\n   \"database\": process.env.DB_NAME,\r\n   \"port\": process.env.DB_PORT\r\n} );\r\n\r\nexport default {\r\n   db\r\n}", "import blogsModel from '../models/newsModel';\r\n\r\nasync function getNewsList( request, reply ) {\r\n   var limit = 20;\r\n   var offset = 0;\r\n   var page = 1;\r\n\r\n   if ( typeof request.query.limit !== \"undefined\" ) {\r\n      if ( parseInt( request.query.limit ) > 0 ) {\r\n         limit = parseInt( request.query.limit );\r\n      }\r\n   }\r\n\r\n   if ( typeof request.query.page !== \"undefined\" ) {\r\n      if ( parseInt( request.query.page ) > 0 ) {\r\n         page = parseInt( request.query.page );\r\n         offset = ( page - 1 ) * limit\r\n      }\r\n   }\r\n\r\n   var queryParams = {\r\n      offset: offset,\r\n      limit: limit\r\n   }\r\n   const newsData = await blogsModel.newsList( queryParams );\r\n   var response = JSON.stringify( {\r\n      page: page,\r\n      per_page: limit,\r\n      data: newsData[ 0 ]\r\n   } )\r\n   reply.send( response );\r\n}\r\n\r\nasync function getNewsDetail( request, reply ) {\r\n   const newsData = await blogsModel.newsDetail( request.params.id );\r\n   if ( newsData.length > 0 ) {\r\n      reply.send( JSON.stringify( {\r\n         data: newsData[ 0 ]\r\n      } ) );\r\n   } else {\r\n      reply.send( JSON.stringify( {\r\n         error: \"Blogs Not found!\"\r\n      } ) );\r\n   }\r\n}\r\n\r\nexport default {\r\n   getNewsList,\r\n   getNewsDetail\r\n}", "import blogs from './controllers/blogs';\r\n\r\nasync function routes( app ) {\r\n   app.get( '/blogs', blogs.getNewsList );\r\n   app.get( '/blogs/:id', blogs.getNewsDetail );\r\n}\r\n\r\nexport default routes", "import server from '@server';\r\nimport routes from './routes';\r\n\r\nconst app = server( {\r\n   port: 3000,\r\n   spa: true\r\n} );\r\n\r\napp.sub( '/api', routes )\r\n\r\n/*\r\n\r\nlet articles = [ {\r\n      id: 1,\r\n      title: `Write Less Code`,\r\n      subtitle: `The most important metric you're not paying attention to`,\r\n      content: `\r\n   <p>All code is buggy. It stands to reason, therefore, that the more code you have to write the buggier your apps will be.</p>\r\n   <p>Writing more code also takes more time, leaving less time for other things like optimisation, nice-to-have features, or being outdoors instead of hunched over a laptop.</p>\r\n   <p>In fact it's widely acknowledged that  and  grow quadratically, not linearly, with the size of a codebase. That tracks with our intuitions: a ten-line pull request will get a level of scrutiny rarely applied to a 100-line one. And once a given module becomes too big to fit on a single screen, the cognitive effort required to understand it increases significantly. We compensate by refactoring and adding comments \u2014 activities that almost always result in more code. It's a vicious cycle.</p>\r\n   <p>Yet while we obsess \u2014 rightly! \u2014 over performance numbers, bundle size and anything else we can measure, we rarely pay attention to the amount of code we're writing.</p>\r\n`\r\n   },\r\n   {\r\n      id: 2,\r\n      title: `Virtual DOM is pure overhead`,\r\n      subtitle: `Let's retire the 'virtual DOM is fast' myth once and for all`,\r\n      content: `\r\n   <p>If you've used JavaScript frameworks in the last few years, you've probably heard the phrase 'the virtual DOM is fast', often said to mean that it's faster than the real DOM. It's a surprisingly resilient meme \u2014 for example people have asked how Svelte can be fast when it doesn't use a virtual DOM.</p>\r\n   `\r\n   },\r\n   {\r\n      id: 3,\r\n      title: `Rethinking reactivity`,\r\n      subtitle: `It's finally here`,\r\n      content: `\r\n   <p>Malina.js builds your web-application to use it without framework on frontend side. Therefore your web-app becomes thinner and faster, and the application itself consist of vanilla JavaScript, look at examples. TodoMVC example 2.7kb (gzipped) and source code</p>\r\n   `\r\n   }\r\n]\r\n\r\napp.use( '/posts', async ( req, resp, next ) => {\r\n   resp.send( JSON.stringify( articles ) );\r\n} )\r\n\r\napp.use( '/post/:id', async ( req, resp, next ) => {\r\n   let postId = req.params.id\r\n   resp.send( JSON.stringify( articles[ postId ] ) );\r\n} )\r\n\r\n*/"],
  "mappings": "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OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAO;AACf,aAAQ,OAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QACN;AACF,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ;AAChB,aAAQ,QAAQ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",
  "names": []
}
